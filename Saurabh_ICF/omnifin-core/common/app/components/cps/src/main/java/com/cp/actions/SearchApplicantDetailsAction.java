/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;
import com.connect.CommonFunction;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.cp.vo.LinkCustomerVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/**
 * MyEclipse Struts Creation date: 04-04-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class SearchApplicantDetailsAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(SearchApplicantDetailsAction.class.getName());
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws InvocationTargetException
	 * @throws IllegalAccessException
	 */
	public ActionForward searchCustomer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IllegalAccessException, InvocationTargetException, Exception {

		logger.info("In SearchApplicantDetailsAction into searchCustomer");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			logger.info("here in searchCustomer method of SearchApplicantDetailsAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}

		DynaValidatorForm LinkCustomerDynaValidatorForm = (DynaValidatorForm) form;
		LinkCustomerVo vo = new LinkCustomerVo();
		 session.removeAttribute("panNo");
		    session.removeAttribute("aadhaar");
		    String panNo = request.getParameter("panNo");
		    logger.info("panNo---->" + panNo);
		    if (!CommonFunction.checkNull(panNo).trim().equalsIgnoreCase(""))
		    {
		      session.setAttribute("panNo", panNo);
		    }
		    String aadhaar = request.getParameter("aadhaar");
		    logger.info("aadhaar---->" + aadhaar);
		    if (!CommonFunction.checkNull(aadhaar).trim().equalsIgnoreCase(""))
		    {
		      session.setAttribute("aadhaar", aadhaar);
		    }
		CreditProcessingDAO cust=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+cust.getClass()); 	//changed by asesh
		//CreditProcessingDAO cust = new CreditProcessingDAOImpl();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,
				LinkCustomerDynaValidatorForm);

		ArrayList<Object> searchedDetail = cust.searchApplicant(vo);
		logger.info("In SearchApplicantDetailsAction into searchCustomer"
				+ searchedDetail.size());
		request.setAttribute("applType", LinkCustomerDynaValidatorForm
				.getString("hType"));
		request.setAttribute("hstatus", LinkCustomerDynaValidatorForm
				.getString("status"));
		request.setAttribute("searchedDetail", searchedDetail);

		return mapping.findForward("success");
	}
	
	public ActionForward searchCustomerLoan(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IllegalAccessException, InvocationTargetException, Exception {

		logger.info("In SearchApplicantDetailsAction into searchCustomerLoan");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			logger.info("here in searchCustomerLoan method of SearchApplicantDetailsAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
	        
		DynaValidatorForm LinkCustomerDynaValidatorForm = (DynaValidatorForm) form;
		LinkCustomerVo vo = new LinkCustomerVo();
		 session.removeAttribute("panNo");
		    session.removeAttribute("aadhaar");
		    String panNo = request.getParameter("panNo");
		    logger.info("panNo---->" + panNo);
		    if (!CommonFunction.checkNull(panNo).trim().equalsIgnoreCase(""))
		    {
		      session.setAttribute("panNo", panNo);
		    }
		    String aadhaar = request.getParameter("aadhaar");
		    logger.info("aadhaar---->" + aadhaar);
		    if (!CommonFunction.checkNull(aadhaar).trim().equalsIgnoreCase(""))
		    {
		      session.setAttribute("aadhaar", aadhaar);
		    }
		CreditProcessingDAO cust=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+cust.getClass()); 	//changed by asesh
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,
				LinkCustomerDynaValidatorForm);
		
		ArrayList<Object> searchedDetail = cust.searchCustomerLinkAtCM(vo);
		logger.info("In SearchApplicantDetailsAction into searchCustomerLoan"
				+ searchedDetail.size());
		request.setAttribute("applType", LinkCustomerDynaValidatorForm
				.getString("hType"));
		request.setAttribute("hstatus", LinkCustomerDynaValidatorForm
				.getString("status"));
		request.setAttribute("searchedDetail", searchedDetail);

		return mapping.findForward("searchCustomerLoan");
	}

}
