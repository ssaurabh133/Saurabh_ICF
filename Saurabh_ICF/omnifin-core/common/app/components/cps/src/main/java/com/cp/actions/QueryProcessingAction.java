/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.cp.vo.QueryProcessingVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/**
 * MyEclipse Struts Creation date: 05-02-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class QueryProcessingAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(QueryProcessingAction.class.getName());
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward submitQueryData(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		logger.info("In QueryProcessingAction(submitQueryData)");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
		String userId="";
		String bDate="";
		
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
				
		}else{
			logger.info("here in submitQueryData method of QueryProcessingAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
	
		
		DynaValidatorForm QueryDynaValidatorForm = (DynaValidatorForm) form;
		QueryProcessingVo cr = new QueryProcessingVo();
		String dealId = (String) session.getAttribute("dealId");
		cr.setUserId("" + userId);
		cr.setMakerDate(bDate);
		org.apache.commons.beanutils.BeanUtils.copyProperties(cr,
				QueryDynaValidatorForm);
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		//CreditProcessingDAO service = new CreditProcessingDAOImpl();
		boolean status = service.saveUnderwritingQueryData(cr, dealId);
		if (status) {
			request.setAttribute("sms", "S");
		} else {
			request.setAttribute("sms", "E");
		}
		String functionId="";
		if(session.getAttribute("functionId")!=null)
		{
			functionId=session.getAttribute("functionId").toString();
		}
		
		ArrayList queryList = new ArrayList();
        if(CommonFunction.checkNull(functionId).equalsIgnoreCase("3000359"))
		{
        	 queryList = service.getQueryInitiationData(dealId,userId);
		}
        else
        	 queryList = service.getUnderwritingQueryData(dealId);
		logger.info("In QueryProcessingAction(submitQueryData) queryList");
		request.setAttribute("queryList",queryList);
		ArrayList dealHeader = service.getDealHeader(dealId);
		request.setAttribute("dealHeader",dealHeader);
		return mapping.findForward("success");
	}

	public ActionForward updateQueryData(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		logger.info("In QueryProcessingAction(updateQueryData)");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
				
		}else{
			logger.info("here in updateQueryData method of QueryProcessingAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		DynaValidatorForm QueryDynaValidatorForm = (DynaValidatorForm) form;
		QueryProcessingVo cr = new QueryProcessingVo();
	
		cr.setUserId(userId);
		cr.setMakerDate(bDate);
		String dealId = (String) session.getAttribute("dealId");
		
		org.apache.commons.beanutils.BeanUtils.copyProperties(cr,QueryDynaValidatorForm);
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		boolean status = service.updateUnderwritingQueryData(cr, dealId);
		if (status) {
			request.setAttribute("sms", "S");
		} else {
			request.setAttribute("sms", "E");
		}
		String functionId="";
		if(session.getAttribute("functionId")!=null)
		{
			functionId=session.getAttribute("functionId").toString();
		}
		
		ArrayList queryList = new ArrayList();
        if(CommonFunction.checkNull(functionId).equalsIgnoreCase("3000359"))
		{
        	 queryList = service.getQueryInitiationData(dealId,userId);
		}
        else
        	 queryList = service.getUnderwritingQueryData(dealId);
		request.setAttribute("queryList", queryList);
		ArrayList dealHeader = service.getDealHeader(dealId);
		request.setAttribute("dealHeader",dealHeader);
		return mapping.findForward("updated");
	}
	public ActionForward saveQueryResApproval(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		
		logger.info("In QueryProcessingAction(saveQueryResApproval)");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
				
		}else{
			logger.info("here in saveQueryResApproval method of QueryProcessingAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		DynaValidatorForm QueryDynaValidatorForm = (DynaValidatorForm) form;
		QueryProcessingVo cr = new QueryProcessingVo();
	
		cr.setUserId(userId);
		cr.setMakerDate(bDate);
		String dealId = (String) session.getAttribute("dealId");
		cr.setDealId(dealId);
		org.apache.commons.beanutils.BeanUtils.copyProperties(cr,QueryDynaValidatorForm);
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		boolean status = service.saveQueryResponseData(cr);
		if (status) {
			request.setAttribute("sms", "S");
		} else {
			request.setAttribute("sms", "E");
		}
		
		return mapping.findForward("queryResponse");
	}

}