/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.IndividualFinancialAnalysisDAO;
import com.cp.financialDao.FinancialDAO;
import com.cp.vo.CommonDealVo;
import com.cp.vo.FinancialAnalysisVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.connect.CommonFunction;
import com.cp.dao.FieldVerificationDAO;
/** 
 * MyEclipse Struts
 * Creation date: 10-14-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"  
 */
public class IndividualFinancialSearchProcessAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(IndividualFinancialSearchProcessAction.class.getName());	
	public ActionForward individualFinancialAnalysisSearch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		logger.info("In IndividualFinancialSearchProcessAction , individualFinancialAnalysisSearch Method......");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String branchId="";
		 
		if(userobj!=null)
		{
			branchId=userobj.getBranchId();	
		}else{
			logger.info("here in individualFinancialAnalysisSearch method of IndividualFinancialSearchProcessAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		//logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}

		DynaValidatorForm CommonDealDynaValidatorForm = (DynaValidatorForm) form;
		CommonDealVo vo = new CommonDealVo();
		
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,CommonDealDynaValidatorForm);
		
		
	
		vo.setBranchId(branchId);
		
		
		int currentPageLink = 0;
		logger.info("current page link .......... "+request.getParameter("d-49520-p"));
		if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0"))
		{
			currentPageLink=1;
		}
		else
		{
			currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
		}
		
		logger.info("current page link ................ "+request.getParameter("d-49520-p"));
		
		vo.setCurrentPageLink(currentPageLink);
		vo.setBranchId(branchId);
		vo.setRecStatus("F");
		IndividualFinancialAnalysisDAO dao=(IndividualFinancialAnalysisDAO)DaoImplInstanceFactory.getDaoImplInstance(IndividualFinancialAnalysisDAO.IDENTITY);
		logger.info("Implementation class: "+dao.getClass()); 	// changed by asesh
		//IndividualFinancialAnalysisDAO dao = new IndividualFinancialAnalysisDAOImpl();
		ArrayList<CommonDealVo> financialDetails = dao.individualFinancialSearchGetDetail(vo);
		if(financialDetails.size()>0)
		{
			logger.info("financialSearchGetDetail....list: "+financialDetails.size());
			request.setAttribute("list", financialDetails);
		    request.setAttribute("financialDetails", financialDetails);
		}
		else
		{
			request.setAttribute("sms", "N");
		}
	    
		return mapping.getInputForward();
	}
	
	public ActionForward openEditIndividualFinancialAnalysis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		 HttpSession session = request.getSession();
		 logger.info("in ghjkjgkhjgbkjgugug  openEditIndividualFinancialAnalysis ................................");
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			String branchId="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
					branchId=userobj.getBranchId();
			}else{
				logger.info("here in openEditIndividualFinancialAnalysis method of IndividualFinancialSearchProcessAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			
		if(request.getParameter("dealId")!=null)
		{
			FinancialDAO dao=(FinancialDAO)DaoImplInstanceFactory.getDaoImplInstance(FinancialDAO.IDENTITY);
			logger.info("Implementation class: "+dao.getClass());
			IndividualFinancialAnalysisDAO indiDao=(IndividualFinancialAnalysisDAO)DaoImplInstanceFactory.getDaoImplInstance(IndividualFinancialAnalysisDAO.IDENTITY);
			logger.info("Implementation class: "+indiDao.getClass()); 	// changed by asesh
			//IndividualFinancialAnalysisDAO indiDao = new IndividualFinancialAnalysisDAOImpl();
			
		
			CommonDealVo vo = new CommonDealVo();
			vo.setLbxDealNo(request.getParameter("dealId"));
			vo.setRecStatus("F");
			vo.setLbxProductID("");
			vo.setLbxscheme("");
			vo.setCustomername("");
			vo.setInitiationDate("");
			
	
			vo.setBranchId(branchId);
			vo.setBusinessdate(bDate);
			vo.setUserId(userId);
			
			String checkDealExist = ConnectionDAO.singleReturn("select DEAL_ID from cr_financial_data_dtl where DEAL_ID='"+request.getParameter("dealId")+"'");
			logger.info("checkDealExist.......... "+checkDealExist);
		
			if(checkDealExist !=null && !checkDealExist.equalsIgnoreCase(""))
			{
				vo.setSourceType("I");
				if(session.getAttribute("underWriterViewData")!=null)
			    {
			    	
			    	vo.setRecStatus("A");
			    }
				else
				{
				
			    	vo.setRecStatus("P");
				}
				ArrayList<FinancialAnalysisVo> incomeDetailsByDeal = indiDao.getdealAllParamDeatils(vo);
				logger.info("incomeDetailsByDeal.....size..... "+incomeDetailsByDeal.size());
				session.setAttribute("incomeDetailsByDeal", incomeDetailsByDeal);
			}	
				ArrayList<CommonDealVo> financialDetails = dao.financialSearchGetDetail(vo);
				session.setAttribute("financialDetails", financialDetails);
			
			
			//logger.info("deal id................................ "+request.getParameter("dealId"));
			if(request.getParameter("dealId")!=null)
			{
				session.setAttribute("financialDealId", request.getParameter("dealId"));
			}
			
		}
		else
		{
			session.removeAttribute("financialDealId");
		}
		
		return mapping.findForward("editFinancial");
	}
	public ActionForward reloadIndividualFinancialAnalysis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		 HttpSession session = request.getSession();
		 logger.info("in ghjkjgkhjgbkjgugug  reloadIndividualFinancialAnalysis ................................");
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			String branchId="";
			String dealId="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
					branchId=userobj.getBranchId();
			}else{
				logger.info("here in reloadIndividualFinancialAnalysis method of IndividualFinancialSearchProcessAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
		if(session.getAttribute("financialDealId")!=null)
			dealId = CommonFunction.checkNull(session.getAttribute("financialDealId"));
		if(request.getParameter("dealId")!=null || !dealId.equalsIgnoreCase(""))
		{
			FinancialDAO dao=(FinancialDAO)DaoImplInstanceFactory.getDaoImplInstance(FinancialDAO.IDENTITY);
			logger.info("Implementation class: "+dao.getClass());
			IndividualFinancialAnalysisDAO indiDao=(IndividualFinancialAnalysisDAO)DaoImplInstanceFactory.getDaoImplInstance(IndividualFinancialAnalysisDAO.IDENTITY);
			logger.info("Implementation class: "+indiDao.getClass()); 	// changed by asesh
			//IndividualFinancialAnalysisDAO indiDao = new IndividualFinancialAnalysisDAOImpl();
		
			String lbxCustomerId = CommonFunction.checkNull(request.getParameter("lbxCustomerId"));
			FinancialAnalysisVo vo1 = new FinancialAnalysisVo();
			vo1.setCustomerId(lbxCustomerId);
			vo1.setLbxDealNo(dealId);
			CommonDealVo vo = new CommonDealVo();
			
			
			vo.setCustomerId(lbxCustomerId);
			request.setAttribute("lbxCustomerId", CommonFunction.checkNull(request.getParameter("lbxCustomerId")));
			request.setAttribute("lbxCustomerRoleType", CommonFunction.checkNull(request.getParameter("lbxCustomerRoleType")));
			request.setAttribute("customerType", CommonFunction.checkNull(request.getParameter("customerType")));
			request.setAttribute("customerName", CommonFunction.checkNull(request.getParameter("customerName")));
			logger.info("lbxCustomerId ---------"+lbxCustomerId);
			
			
			vo.setLbxDealNo(request.getParameter("dealId"));
			vo.setLbxDealNo(dealId);
			vo.setRecStatus("F");
			vo.setLbxProductID("");
			vo.setLbxscheme("");
			vo.setCustomername("");
			vo.setInitiationDate("");
			vo.setDealNo(dealId);
	
			vo.setBranchId(branchId);
			vo.setBusinessdate(bDate);
			vo.setUserId(userId);
			
			String checkDealExist = ConnectionDAO.singleReturn("select DEAL_ID from cr_financial_data_dtl where DEAL_ID='"+dealId+"'");
			logger.info("checkDealExist.......... "+checkDealExist);
		
			if(checkDealExist !=null && !checkDealExist.equalsIgnoreCase(""))
			{
				vo.setSourceType("I");
				if(session.getAttribute("underWriterViewData")!=null)
			    {
			    	
			    	vo.setRecStatus("A");
			    }
				else
				{
				
			    	vo.setRecStatus("P");
				}
				ArrayList<FinancialAnalysisVo> incomeDetailsByDeal = indiDao.getIncomeDetailList(vo1);
				logger.info("incomeDetailsByDeal.....size..... "+incomeDetailsByDeal.size());
				request.setAttribute("incomeDetailList",incomeDetailsByDeal);
			}	
				ArrayList<CommonDealVo> financialDetails = dao.financialSearchGetDetail(vo);
				session.setAttribute("financialDetails", financialDetails);
				
			    ArrayList sourceTypeList = indiDao.getIncomeSourceTypeList();
			    
			    request.setAttribute("sourceTypeList", sourceTypeList);
				FieldVerificationDAO fieldVerificationdao=(FieldVerificationDAO)DaoImplInstanceFactory.getDaoImplInstance(FieldVerificationDAO.IDENTITY);
		        logger.info("Implementation class: "+fieldVerificationdao.getClass()); 	// changed by asesh
			    ArrayList verifMethodList = fieldVerificationdao.getVerifMethodListList();
			    request.setAttribute("verifMethodList", verifMethodList);
				
				
			    //session.setAttribute("verifMethodList", verifMethodList);
			
			//logger.info("deal id................................ "+request.getParameter("dealId"));
			/*if(request.getParameter("dealId")!=null)
			{
				session.setAttribute("financialDealId", request.getParameter("dealId"));
			}*/
			
		}
		/*else
		{
			session.removeAttribute("financialDealId");
		}*/
		request.setAttribute("reloadFlag","Y");
		return mapping.findForward("reloadFinancial");
	}
}