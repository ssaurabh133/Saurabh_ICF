/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.cp.vo.FleetDetailsVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 07-16-2012
 * 
 * XDoclet definition:
 * @struts.action parameter="method"
 */
public class FleetDetailsDispatchActionAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private static final Logger logger = Logger.getLogger(FleetDetailsDispatchActionAction.class.getName());
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward openFleetPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		
		logger.info(" in openFleetPage()");
		HttpSession session = request.getSession();
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		//CreditProcessingDAO service = new CreditProcessingDAOImpl();
		String dealId = "";
		int count=0;
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In FleetDetailsDispatchActionAction(openFleetPage) dealid: " + dealId);
		if ((dealId != null && !dealId.equalsIgnoreCase(""))) {
			
			
			
			count = service.getProductCategaryStatus(dealId,"F");
			
		    
		}
		else
		{
			request.setAttribute("back", "B");
			return mapping.findForward("backToFirst");
			
		}
		ArrayList financialInstList = service.getFinancialInstList();
		request.setAttribute("financialInstList", financialInstList);
		if(count>0)
	    {
			ArrayList fleetList=service.getFleetList(dealId);
			request.setAttribute("fleetList", fleetList);
	    	return mapping.findForward("success");
	    }
	    else
	    {
	    	request.setAttribute("checkFleetTab", "checkFleetTab");
	    	return mapping.findForward("checkProductCat");
	    }
		
	}
	
	public ActionForward saveFleetDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		
		logger.info(" in saveFleetDetail()");
		HttpSession session = request.getSession();
		String makerId="";
		String makerDate="";
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj!=null)
		{
			makerId=userobj.getUserId();
			makerDate=userobj.getBusinessdate();
		}
		else{
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		 String dealFleetId=request.getParameter("dealFleetId");
		 logger.info("dealFleetId: "+dealFleetId);
		FleetDetailsVo vo=new FleetDetailsVo();
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		DynaValidatorForm FleetDetailsDynaValidatorForm = (DynaValidatorForm) form;
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,FleetDetailsDynaValidatorForm);
		String dealId = "";
		String status="";
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In FleetDetailsDispatchActionAction(openFleetPage) dealid: " + dealId);
		vo.setDealId(dealId);
		vo.setMakerId(makerId);
		vo.setMakerDate(makerDate);
		if(!CommonFunction.checkNull(dealFleetId).equalsIgnoreCase(""))
		{
			vo.setDealFleetId(dealFleetId);
		}
		else
		{
			vo.setDealFleetId("");
		}
		if ((dealId != null && !dealId.equalsIgnoreCase(""))) {
			
			
			
			status = service.saveFleetInCP(vo);
			
		    
		}
		logger.info("maxId fleet Deal Id: "+status);
		if(CommonFunction.checkNull(status).equalsIgnoreCase("S"))
		{
			request.setAttribute("msg", "S");
		}
		else
		{
			request.setAttribute("msg", "E");
		}
	
		
		return mapping.findForward("success");
		
	}
	
	public ActionForward getFleetsDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		
		logger.info(" in getFleetsDetail()");
		HttpSession session = request.getSession();
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		String dealId = "";
		int count=0;
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In FleetDetailsDispatchActionAction(openFleetPage) dealid: " + dealId);
	     String dealFleetId=request.getParameter("dealFleetId");
	     logger.info("dealFleetId: "+dealFleetId);
		if(!CommonFunction.checkNull(dealFleetId).equalsIgnoreCase(""))
	    {
			ArrayList allFleetList=service.getAllFleetList(dealFleetId);
			request.setAttribute("allFleetList", allFleetList);
			ArrayList fleetList=service.getFleetList(dealId);
			request.setAttribute("fleetList", fleetList);
	    	
	    }
		ArrayList financialInstList = service.getFinancialInstList();
		request.setAttribute("financialInstList", financialInstList);
		return mapping.findForward("success");
		
	}
	
	
	public ActionForward deleteFleetDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		
		logger.info(" in deleteFleetDetail()");
		HttpSession session = request.getSession();
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		String dealId = "";
		int count=0;
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In FleetDetailsDispatchActionAction(deleteFleetDetail) dealid: " + dealId);
	
		    String dealFleetId[] = request.getParameterValues("chk");
		    boolean result = service.deleteFleetDtl(dealFleetId);
			
			if (result) {
				
				request.setAttribute("deleteStatus", "S");
			} else {
				
				request.setAttribute("deleteStatus", "E");
			}
			ArrayList fleetList=service.getFleetList(dealId);
			request.setAttribute("fleetList", fleetList);
			ArrayList financialInstList = service.getFinancialInstList();
			request.setAttribute("financialInstList", financialInstList);
	    	return mapping.findForward("success");
	   
	  
	}
	
	public ActionForward openAuthorFleetPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		
		logger.info(" in openAuthorFleetPage()");
		HttpSession session = request.getSession();
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		String dealId = "";
		int count=0;
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In FleetDetailsDispatchActionAction(openAuthorFleetPage) dealid: " + dealId);
		
     if ((dealId != null && !dealId.equalsIgnoreCase(""))) {
	
			count = service.getProductCategaryStatus(dealId,"F");
			
			
			
			
			

		}
		else
		{
			request.setAttribute("back", "B");
			return mapping.findForward("backToFirst");
		}
		if(count>0)
	    {
			ArrayList fleetList=service.getFleetList(dealId);
			request.setAttribute("fleetList", fleetList);
			request.setAttribute("fleetAuthor", "fleetAuthor");
			ArrayList financialInstList = service.getFinancialInstList();
			request.setAttribute("financialInstList", financialInstList);
	    	return mapping.findForward("success");
	    }
	    else
	    {
	    	request.setAttribute("checkFleetTab", "checkFleetTab");
	       	return mapping.findForward("checkProductCatAtAuthor");
	    }
			
	        
		
	}
	
	public ActionForward getAuthorFleetsDetail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		
		logger.info(" in getFleetsDetail()");
		HttpSession session = request.getSession();
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
		String dealId = "";
		int count=0;
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In FleetDetailsDispatchActionAction(openFleetPage) dealid: " + dealId);
	     String dealFleetId=request.getParameter("dealFleetId");
	     logger.info("dealFleetId: "+dealFleetId);
		if(!CommonFunction.checkNull(dealFleetId).equalsIgnoreCase(""))
	    {
			ArrayList allFleetList=service.getAllFleetList(dealFleetId);
			request.setAttribute("allFleetList", allFleetList);
			ArrayList fleetList=service.getFleetList(dealId);
			request.setAttribute("fleetList", fleetList);
	    	
	    }
		ArrayList financialInstList = service.getFinancialInstList();
		request.setAttribute("financialInstList", financialInstList);
		request.setAttribute("fleetAuthor", "fleetAuthor");
		return mapping.findForward("success");
		
	}
	
	public ActionForward openFleetDetailsPopUp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		logger.info("In (openFleetDetailsPopUp)");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
		String userId="";
		String bDate="";
		
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
				
		}else{
			logger.info("here in openFleetDetailsPopUp method of  action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		String loanId = request.getParameter("loanId");
	
		CreditProcessingDAO dao=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+dao.getClass()); 			// changed by asesh
		//CreditProcessingDAO dao = new CreditProcessingDAOImpl();
		ArrayList fleetDetailsList = dao.getFleetDetailsList(loanId);
		request.setAttribute("fleetDetailsList", fleetDetailsList);
		return mapping.findForward("openFleetDetailsPopUp");
	}
}