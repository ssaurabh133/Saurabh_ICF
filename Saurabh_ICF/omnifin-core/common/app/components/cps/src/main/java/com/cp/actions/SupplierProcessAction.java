/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.cp.vo.BuyerVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/**
 * MyEclipse Struts Creation date: 04-07-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class SupplierProcessAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(SupplierProcessAction.class.getName());
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward saveSupplierDetails(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		logger.info("In SupplierProcessAction(saveSupplierDetails) ");
		

		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here in saveSupplierDetails method of SupplierProcessAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm buyerDynaValidatorForm = (DynaValidatorForm) form;
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
	
		
		BuyerVo sh = new BuyerVo();
		sh.setUserId("" + userId);
		sh.setMakerDate(bDate);
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 	//changed by asesh
		//CreditProcessingDAO service = new CreditProcessingDAOImpl();
		org.apache.commons.beanutils.BeanUtils.copyProperties(sh,
				buyerDynaValidatorForm);

		String dealId = "";

		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In SupplierProcessAction saveSupplierDetails id "
				+ dealId);
		sh.setDealId(dealId);
		String sms = "";
		boolean status = service.saveSupplierDetails(sh);
		if (status) {
			ArrayList<Object> showdetailSupplier = service
					.getSupplierDetailsAll("S", "S", dealId);
			logger.info("Sucessfully Saved............"
					+ showdetailSupplier.size());
			session.setAttribute("showdetailSupplier", showdetailSupplier);
			sms = "S";
		} else {
			sms = "E";
		}
		request.setAttribute("insertSuccess1", sms);

		return mapping.findForward("success"); // go to same page

	}

	public ActionForward updateSupplierDetails(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		logger.info("In SupplierProcessAction updateSupplierDetails ");
		boolean status = false;
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here in updateSupplierDetails method of SupplierProcessAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}

		DynaValidatorForm supplierDynaValidatorForm = (DynaValidatorForm) form;
		BuyerVo sh = new BuyerVo();

		sh.setUserId(userId);
		sh.setMakerDate(bDate);
		
		org.apache.commons.beanutils.BeanUtils.copyProperties(sh,supplierDynaValidatorForm);
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass()); 	//changed by asesh
		//CreditProcessingDAO service = new CreditProcessingDAOImpl();
		String sms = "";
		String dealId = "";

		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}
		logger.info("In SupplierProcessAction updateSupplierDetails id "+ dealId+"--------------"+sh.getMakerDate());
		String primaryId = request.getParameter("primaryId");
		status = service.updateSupplierDetailsAll(sh, "DS", primaryId);
		if (status) {
			ArrayList<Object> showdetailSupplier = service.getSupplierDetailsAll("S", "S", dealId);
			logger.info("Sucessfully Updated............"+ showdetailSupplier.size());
			session.setAttribute("showdetailSupplier", showdetailSupplier);
			sms = "S";
		} else {
			sms = "E";
		}
		request.setAttribute("updateSuccess1", sms);

		return mapping.findForward("success");
	}
}