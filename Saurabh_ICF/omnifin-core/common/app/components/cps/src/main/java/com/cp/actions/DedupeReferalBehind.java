/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.connect.LookUpInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.cp.daoImplMYSQL.DedupeReferalDaoImpl;
import com.cp.vo.dedupeReferalVo;


import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;




/**
 * MyEclipse Struts Creation date: 04-07-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */

	
	
	public class DedupeReferalBehind extends Action {
		private static final Logger logger = Logger.getLogger(DedupeReferalBehind.class.getName());
		public ActionForward execute(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception {
			ServletContext context = getServlet().getServletContext();
			logger.info("In DedupeReferalBehind.........");
			HttpSession session = request.getSession();
			boolean flag=false;
			String userId="";
			String branchId="";
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null)
			{
				logger.info("here in searchCustomer method of DedupeDecisionDispatchAction  action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			else
			{
				userId=userobj.getUserId();
				branchId=userobj.getBranchId();
			}
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			dedupeReferalVo vo = new dedupeReferalVo();
		    DynaValidatorForm CommonDynaValidatorForm= (DynaValidatorForm)form;
		  
		    org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CommonDynaValidatorForm);
		    DedupeReferalDaoImpl service=(DedupeReferalDaoImpl)DaoImplInstanceFactory.getDaoImplInstance(DedupeReferalDaoImpl.IDENTITY);
			/*CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);*/
	        logger.info("Implementation class: "+service.getClass()); 		
				vo.setUserId(userId);
				vo.setBranchId(branchId);
				logger.info("current page link .......... "+request.getParameter("d-1334207-p"));		
				int currentPageLink = 0;
				if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0")){
					 currentPageLink=1;
					if(request.getParameter("d-1334207-p")==null || request.getParameter("d-1334207-p").equalsIgnoreCase("0"))
					currentPageLink=1;
				else
					currentPageLink =Integer.parseInt(request.getParameter("d-1334207-p"));
				
				}
				else{
						currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
				}
				logger.info("current page link ................ "+request.getParameter("d-49520-p"));
				vo.setCurrentPageLink(currentPageLink);
				session.setAttribute("dedupeUserIdLOv",userId);
	    	ArrayList searchCustomerList= service.searchCustomerList(vo);

			request.setAttribute("list", searchCustomerList);
			   request.setAttribute("dedupeReferal", "dedupeReferal");
				return mapping.findForward("success");
				


}
}
