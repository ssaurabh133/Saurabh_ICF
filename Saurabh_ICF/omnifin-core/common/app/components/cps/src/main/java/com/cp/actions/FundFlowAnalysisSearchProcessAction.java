/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;
import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.fundFlowDao.FundFlowAnalysisDAO;
import com.cp.vo.CommonDealVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 09-30-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class FundFlowAnalysisSearchProcessAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(FundFlowAnalysisSearchProcessAction.class.getName());	
	public ActionForward fundFlowAnalysisSearch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		logger.info("In FundFlowAnalysisSearchProcessAction , fundFlowAnalysisSearch Method......");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String branchId="";
		if(userobj!=null)
		{
			userId=userobj.getUserId();
			branchId=userobj.getBranchId();
		}else{
			logger.info("here in fundFlowAnalysisSearch method of FundFlowAnalysisSearchProcessAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";
		

		
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}

		logger.info("current page link .......... "+request.getParameter("d-49520-p"));
		
		int currentPageLink = 0;
		if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0"))
		{
			currentPageLink=1;
		}
		else
		{
			currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
		}
		
		logger.info("current page link ................ "+request.getParameter("d-49520-p"));
		DynaValidatorForm CommonDealDynaValidatorForm = (DynaValidatorForm) form;
		CommonDealVo vo = new CommonDealVo();
		
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,CommonDealDynaValidatorForm);
		vo.setBranchId(branchId);
		vo.setCurrentPageLink(currentPageLink);
		
		if(CommonFunction.checkNull(vo.getReportingToUserId()).equalsIgnoreCase(""))
		{ 
			vo.setReportingToUserId(userId);
		   //logger.info("When user id is not selected by the user:::::"+userId);
		}
		logger.info("user Id:::::"+vo.getReportingToUserId());

//		String userId=request.getParameter("userId");
//		vo.setUserId(userId);
		//logger.info("now the userid through jsp*****"+userId);
//		if(userId.trim().length()==0)
//		{
//			userId=userobj.getUserName();
//		   vo.setUserId(userId);
//		   //logger.info("When user id is not selected by the user:::::"+userId);
//		}

		if(session.getAttribute("fundFlowAuthor")!=null && session.getAttribute("fundFlowAuthor").toString().equalsIgnoreCase("A"))
		{
			vo.setRecStatus("F");
		}
		else
		{
			vo.setRecStatus("P");
		}
		
		FundFlowAnalysisDAO dao=(FundFlowAnalysisDAO)DaoImplInstanceFactory.getDaoImplInstance(FundFlowAnalysisDAO.IDENTITY);
		logger.info("Implementation class: "+dao.getClass());
		ArrayList<CommonDealVo> fundFlowdetails = dao.fundFlowSearchGetDetail(vo);
		if(fundFlowdetails.size()>0)
		{
			logger.info("fundFlowdetails....list: "+fundFlowdetails.size());
		    request.setAttribute("fundFlowdetails", fundFlowdetails);
		    int count=0;
			logger.info("FundFlowAnalysisSearchBehindAction....list: "+fundFlowdetails.size());
			for(int i=0;i<fundFlowdetails.size();i++){
				logger.info("header: "+fundFlowdetails.size());
				CommonDealVo vo1=fundFlowdetails.get(i);
				count=vo1.getTotalRecordSize();
					logger.info("vaue of my new count:ssssss:::::"+vo1.getTotalRecordSize());
			
			}
			if(count>0)		    
		    request.setAttribute("list", fundFlowdetails);
			request.setAttribute("listNew","");
		}
		else
		{
			
			request.setAttribute("sms", "N");
		}
		request.setAttribute("fromSearchPage","Y");
	    
		return mapping.getInputForward();
	}
}