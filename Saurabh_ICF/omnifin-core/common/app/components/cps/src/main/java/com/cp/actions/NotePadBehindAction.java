/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/**
 * MyEclipse Struts Creation date: 04-14-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class NotePadBehindAction extends Action {
	private static final Logger logger = Logger.getLogger(NotePadBehindAction.class.getName());
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		// TODO Auto-generated method stub

		logger.info("In NotePadBehindAction(execute)");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			logger.info("here in execute method of NotePadBehindAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
//		session.removeAttribute("leadNo");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}

		String dealId = "";
		String status = CommonFunction.checkNull(request.getParameter("status"));
		if (!status.equalsIgnoreCase("")) {
			request.setAttribute("status", status);
			if(status.equalsIgnoreCase("np"))
			{
				session.removeAttribute("viewDeal");
			}
		}
		if (session.getAttribute("dealId") != null) {

			dealId = session.getAttribute("dealId").toString();
		} else if (session.getAttribute("maxId") != null) {
			dealId = session.getAttribute("maxId").toString();
		}

		logger.info("In NotePadBehindAction(execute) dealid: " + dealId);
//		String leadNo =(String) session.getAttribute("leadNo");
//		logger.info("--------------------------------------------------" + leadNo);
		if ((dealId != null && !dealId.equalsIgnoreCase(""))) {
			if(session.getAttribute("leadNo") != ""){
//				logger.info("--------------------------------------------------" + leadNo);
				CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
		        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
				//CreditProcessingDAO service = new CreditProcessingDAOImpl();
				ArrayList noteCode = service.getNoteCode();
				request.setAttribute("noteCode", noteCode);
				ArrayList list = service.getNotepadData(dealId,"DC");
				request.setAttribute("list", list);
				ArrayList leadList = service.getLeadNotepadDataCP(dealId,"LT");
				request.setAttribute("leadList", leadList);
			}else {
//				logger.info("+++++++++++++++++++++++++++++++++++++++++++++++++" + leadNo);
				CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
		        logger.info("Implementation class: "+service.getClass()); 			// changed by asesh
			ArrayList noteCode = service.getNoteCode();
			request.setAttribute("noteCode", noteCode);
			ArrayList list = service.getNotepadData(dealId,"DC");
			request.setAttribute("list", list);
			ArrayList leadList = service.getLeadNotepadDataCP(dealId,"LT");
			request.setAttribute("leadList", leadList);
			}
			
			return mapping.findForward("success");
		}

		else {
			request.setAttribute("back", "B");
			return mapping.findForward("backToFirst");
		}
	}
}