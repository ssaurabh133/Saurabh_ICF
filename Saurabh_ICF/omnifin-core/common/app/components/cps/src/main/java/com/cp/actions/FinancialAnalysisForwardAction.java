/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cp.actions;
import java.lang.reflect.InvocationTargetException;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.validator.DynaValidatorForm;
import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.financialDao.FinancialDAO;
import com.cp.vo.FinancialAnalysisVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 11-18-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class FinancialAnalysisForwardAction extends Action {
	private static final Logger logger = Logger.getLogger(FinancialAnalysisForwardAction.class.getName());
	
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		logger.info("In FinancialAnalysisForwardAction (execute)");
		HttpSession session = request.getSession();
		boolean flag=false;
		String bDate="";
		String companyId="";
		String userId="";
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
		if(userobj!=null)
		{
			bDate=userobj.getBusinessdate();
			companyId=""+userobj.getCompanyId();
			userId=userobj.getUserId();
		}else{
			logger.info("here in execute method of FinancialAnalysisForwardAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		
		if(flag)
		{
			logger.info("logout in action");
			return mapping.findForward("logout");
		}
		DynaValidatorForm FinancialAnalysisDynaValidatorForm = (DynaValidatorForm) form;
		FinancialAnalysisVo vo = new FinancialAnalysisVo();
	    try {
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, FinancialAnalysisDynaValidatorForm);
		} catch (IllegalAccessException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		FinancialDAO dao=(FinancialDAO)DaoImplInstanceFactory.getDaoImplInstance(FinancialDAO.IDENTITY);
		logger.info("Implementation class: "+dao.getClass());
		String dealId = "";
		boolean satge = false;
		boolean ratioStatus = false;
		boolean financialStatus = false;
		String checkStageM = "";
		String sms = "";
	
		 if(session.getAttribute("financialDealId")!=null)
		 {
			 dealId = session.getAttribute("financialDealId").toString();
		 }
		if (dealId != null && !dealId.equalsIgnoreCase("")) {
			logger.info("In FinancialAnalysisForwardAction (execute) dealid "
					+ dealId);
				
				ratioStatus = dao.financialRatioAnalysisUpdate(dealId);
				financialStatus=dao.financialAnalysisForward(dealId);
			if(ratioStatus)
			{
			  checkStageM=CommonFunction.stageMovement(companyId, "DC","F",dealId, "FAC", bDate,userId);
			  logger.info("checkStageM : "+checkStageM);
			}
			  if(checkStageM.equalsIgnoreCase("S"))
			 
					satge = dao.financialAnalysisForward(dealId);
			  else
				    request.setAttribute("checkStageM", checkStageM);
			  
				if (satge) {
					
					//for releasing lock record from application level object 
					//ServletContext context=getServlet().getServletContext();
					//if(context!=null)
					//{
					//boolean Lflag = ReleaseRecordFromObject.releaselockedRecord(userobj.getUserId(), context);
					//}
					//sms = "S";
					request.setAttribute("sms", "F");
					
					session.removeAttribute("financialDetails");
				}
				else if(!financialStatus)
				{
					request.setAttribute("sms", "B");
				//	session.removeAttribute("balanceSheetParamCodeValues");
					session.removeAttribute("profitLossParamCodeValues");
					session.removeAttribute("othersParamCodeValues");
					session.removeAttribute("financialRatioCodes");
					//session.removeAttribute("financialDetails");
					session.removeAttribute("balanceSheetAllDetailsByDeal");
					session.removeAttribute("profitLossAllDetailsByDeal");
					session.removeAttribute("otherAllDetailsByDeal");
					//session.removeAttribute("financialDealId");
				}
				else if(financialStatus && !ratioStatus)
				{
					request.setAttribute("sms", "BB");
					logger.info("ratioStatusFlag::::::::"+request.getAttribute("sms").toString());
					session.removeAttribute("incomeDetailsByDeal");
				}

				request.setAttribute("status", satge);
			
				//return mapping.findForward("success");
		} else {
//			ArrayList bankAcAnalysisDetail =new ArrayList();
//			bankAcAnalysisDetail.add(vo);
//			request.setAttribute("bankAcAnalysisDetail", bankAcAnalysisDetail); 
//			ArrayList bankAcAnalysisList = dao.getBankAccountAnalysisDetails("",vo.getLbxDealNo(),"");
//			request.setAttribute("bankAcAnalysisList", bankAcAnalysisList);
//			 ArrayList yearList = dao.getYears(userobj.getBusinessdate());
//			 request.setAttribute("yearList", yearList);
			request.setAttribute("notForward", "B");
			
			//return mapping.findForward("backToFirst");
		}
		return mapping.getInputForward();

	}
}