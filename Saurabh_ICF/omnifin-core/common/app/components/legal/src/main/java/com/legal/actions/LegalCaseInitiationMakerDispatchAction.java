/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.legal.actions;

import java.util.ArrayList;
import java.util.Properties;

import javax.naming.InitialContext;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.legalTransactionBussiness.LegalTransactionBusinessSessionBeanRemote;
import com.connect.CommonFunction;
import com.communication.engn.daoImplMySql.SmsDAOImpl;
import com.legal.vo.LegalCaseInitiationMakerVo;
import com.legal.vo.LegalNoticeInitiationVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

public class LegalCaseInitiationMakerDispatchAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(LegalCaseInitiationMakerDispatchAction.class.getName());
	
	
	public ActionForward searchLegalCaseInitiationMaker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session=request.getSession(false);
		ServletContext context = getServlet().getServletContext();
		logger.info(" ## In execute() : .........");
		
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		
		LegalCaseInitiationMakerVo vo = new LegalCaseInitiationMakerVo(); //change
        
		DynaValidatorForm dyanForm= (DynaValidatorForm)form;
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, dyanForm);
	

		Properties props = new Properties();
		props.load(request.getSession().getServletContext().getResourceAsStream("/WEB-INF/jndi.properties"));   
        InitialContext ic = new InitialContext(props);
        String applName=props.getProperty("enterprise.application.name");
        String remoteBean = props.getProperty("legal.transaction.business.session.bean.remote");
        logger.info("remoteBean : "+remoteBean);
        logger.info("applName : "+applName);
        String remoteBeanName=CommonFunction.checkNull(applName)+CommonFunction.checkNull(remoteBean);
        logger.info("remoteBeanName: "+remoteBeanName);
        LegalTransactionBusinessSessionBeanRemote bp=(LegalTransactionBusinessSessionBeanRemote)ic.lookup(remoteBeanName);
        
        ArrayList list=new ArrayList();
		
		logger.info("current page link .......... "+request.getParameter("d-49520-p"));
		
		int currentPageLink = 0;
		if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0"))
		{
			currentPageLink=1;
		}
		else
		{
			currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
		}
		
		logger.info("current page link ................ "+request.getParameter("d-49520-p"));
		
		vo.setCurrentPageLink(currentPageLink);
		//vo1.setCurrentPageLink(currentPageLink);
		
		
		
		//change from here
		
		//if(CommonFunction.checkNull(request.getParameter("searchFlag")).equalsIgnoreCase("Y"))
		//{
		list= bp.searchLegalCaseInitiationMaker(vo);

	    logger.info("In CaseTypeMasterBehindAction....list"+list.size());
		//}
	    request.setAttribute("list", list);
		
		
	/*	if(CommonFunction.checkNull(request.getAttribute("flag")).toString().equalsIgnoreCase("yes")){
			request.setAttribute("sms","No");
		}*/
	    return mapping.findForward("search");


	}
	
	public ActionForward openLegalCaseInitiationMaker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)	throws Exception { 
		ServletContext context = getServlet().getServletContext();
						LegalCaseInitiationMakerVo vo=new LegalCaseInitiationMakerVo(); 
						logger.info("In openEditCaseTypeMaster");
						
						HttpSession session = request.getSession();
						boolean flag=false;
						UserObject userobj=(UserObject)session.getAttribute("userobject");
						Object sessionId = session.getAttribute("sessionID");
						//for check User session start
						String strFlag="";
						if(sessionId!=null)
						{
							strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
						}
						
						logger.info("strFlag .............. "+strFlag);
						if(!strFlag.equalsIgnoreCase(""))
						{
							if(strFlag.equalsIgnoreCase("sameUserSession"))
							{
								context.removeAttribute("msg");
								context.removeAttribute("msg1");
							}
							else if(strFlag.equalsIgnoreCase("BODCheck"))
							{
								context.setAttribute("msg", "B");
							}
							return mapping.findForward("logout");
						}
						
						vo.setLoanId(request.getParameter("loanId"));
						logger.info("In openEditCaseTypeMaster---status---- by getpara-"+request.getParameter("loanId"));  
						logger.info("In openEditCaseTypeMaster---status---- by getpara by vo-"+vo.getLoanId());
						
						Properties props = new Properties();
						props.load(request.getSession().getServletContext().getResourceAsStream("/WEB-INF/jndi.properties"));   
				        InitialContext ic = new InitialContext(props);
				        String applName=props.getProperty("enterprise.application.name");
				        String remoteBean = props.getProperty("legal.transaction.business.session.bean.remote");
				        logger.info("remoteBean : "+remoteBean);
				        logger.info("applName : "+applName);
				        String remoteBeanName=CommonFunction.checkNull(applName)+CommonFunction.checkNull(remoteBean);
				        logger.info("remoteBeanName: "+remoteBeanName);
				        LegalTransactionBusinessSessionBeanRemote bp=(LegalTransactionBusinessSessionBeanRemote)ic.lookup(remoteBeanName);
						
						ArrayList list = bp.openEditLegalCaseInitiationMaker(vo);
						logger.info("In openEditCaseTypeMaster LegalCaseInitiationMakerVo list"+list.size());
						request.setAttribute("list", list);
					
						
						vo=(LegalCaseInitiationMakerVo) list.get(0);
						LegalCaseInitiationMakerVo docVo=new LegalCaseInitiationMakerVo();
						docVo=(LegalCaseInitiationMakerVo) list.get(0);
						logger.info("In openEditCaseTypeMaster---status---- by getpara by vo-"+docVo.getRecStatus());
						
					
						request.setAttribute("status", vo.getRecStatus());
						request.setAttribute("editVal", "editVal");
					   return mapping.findForward("edit");	
		}
	
	public ActionForward saveLegalCaseInitiationMaker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse resopnse) throws Exception{
			ServletContext context = getServlet().getServletContext();
			//HttpSession session=request.getSession(false);
			HttpSession session = request.getSession();
			boolean flag=false;
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			String strFlag="";
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}
	
		DynaValidatorForm dynaForm= (DynaValidatorForm)form;
		LegalCaseInitiationMakerVo vo = new LegalCaseInitiationMakerVo();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, dynaForm);
		

		vo.setMakerId(userId);
		vo.setMakerDate(bDate);
		
		Properties props = new Properties();
		props.load(request.getSession().getServletContext().getResourceAsStream("/WEB-INF/jndi.properties"));   
        InitialContext ic = new InitialContext(props);
        String applName=props.getProperty("enterprise.application.name");
        String remoteBean = props.getProperty("legal.transaction.business.session.bean.remote");
        logger.info("remoteBean : "+remoteBean);
        logger.info("applName : "+applName);
        String remoteBeanName=CommonFunction.checkNull(applName)+CommonFunction.checkNull(remoteBean);
        logger.info("remoteBeanName: "+remoteBeanName);
        LegalTransactionBusinessSessionBeanRemote bp=(LegalTransactionBusinessSessionBeanRemote)ic.lookup(remoteBeanName);
	
		String sms="";
	
		
		boolean status = false ;
		
		boolean lrnStatus = true;
		
		boolean notice138Status = true;
		
		/*String caseType = CommonFunction.checkNull(vo.getLbxCaseTypeCode());
		
		if(caseType.equalsIgnoreCase("CIVIL") || caseType.equalsIgnoreCase("DRT") || caseType.equalsIgnoreCase("RO"))
		{
			lrnStatus = false;
			lrnStatus = bp.checkingLRNStatus(vo);
			
		}
		else if(caseType.equalsIgnoreCase("CASE138"))
		{
			notice138Status = false;
			notice138Status = bp.checkingNotice138Status(vo);
		}
		
				
		
		if(lrnStatus && notice138Status)
		{
			status = bp.insertLegalCaseInitiationMaker(vo);
		}*/
		
		
		String caseType = CommonFunction.checkNull(request.getParameter("lbxCaseTypeCode"));
		    logger.info("caseType........" + caseType);
		     String[] caseTypeCode = caseType.split("\\|");
		     for (int i = 0; i < caseTypeCode.length; i++) {
		       logger.info(caseTypeCode[i]);
		 
		       vo.setLbxCaseTypeCode(caseTypeCode[i]);
		       if ((caseTypeCode[i].equalsIgnoreCase("CIVIL")) || (caseType.equalsIgnoreCase("DRT")) || (caseType.equalsIgnoreCase("RO")))
		       {
	        lrnStatus = false;
		        lrnStatus = bp.checkingLRNStatus(vo);
		      }
		       else if (caseTypeCode[i].equalsIgnoreCase("CASE138"))
		      {
		        notice138Status = false;
		         notice138Status = bp.checkingNotice138Status(vo);
		       }
		 
		       if ((lrnStatus) && (notice138Status))
		       {
		         status = bp.insertLegalCaseInitiationMaker(vo);
		       }
		     }
		
		logger.info("Inside Country Master Action.....displaying status...."+status);
		if(status){
			sms="S";
			request.setAttribute("sms",sms);
			request.setAttribute("save", "save");
			String EventName = "Legal";
			       SmsDAOImpl dao = new SmsDAOImpl();
			       boolean Status = dao.getEmailDetails(vo.getLoanId(), bDate, EventName);
			       logger.info("STATUS for Legal Internal SMS & Email :::" + Status);
		}
		else{
			
			
			if(!lrnStatus)
			{
				sms="LRN";
			}
			else if(!notice138Status)
			{
				sms="NOTICE138";
			}
			else
			{	
				sms="E";
			}
			
			request.setAttribute("sms",sms);
			request.setAttribute("save", "save");
		}
		logger.info("status"+status);
		return mapping.getInputForward();
	}
				
}