/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.masters.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CommonMasterBussinessSessionBeanRemote;
import com.connect.CommonFunction;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.MasterVo;

/** 
 * MyEclipse Struts
 * Creation date: 10-11-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RatioDefinitionMasterProcessAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(RatioDefinitionMasterProcessAction.class.getName());
	public ActionForward addRatioDefinition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)	throws Exception {
		ServletContext context = getServlet().getServletContext();
				logger.info(" in addRatioDefinition()");
				
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//ArrayList list = service.getAgency();
				//request.setAttribute("agencyType", list);
				
				CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				
		        ArrayList paramList = bp.getParamDetailDetails("");
		        ArrayList ratioList = bp.getRatioList();
				request.setAttribute("paramList", paramList);
				request.setAttribute("ratioList", ratioList);
				request.setAttribute("save", "save");
				request.setAttribute("Add", "Add");
				request.setAttribute("status","Active");
			    return mapping.findForward("openAdd");	
			}
	
	public ActionForward saveRatioDefinition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ServletContext context = getServlet().getServletContext();
		DynaValidatorForm ratioDefinitionMasterAddDynaValidatorForm= (DynaValidatorForm)form;
		//logger.info("Inside saveRatioDefinition......"+AgencyMasterAddDynaValidatorForm.getString("agencyStatus") );
		HttpSession session=request.getSession(false);
		UserObject userobj=new UserObject();
		userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}
		
		boolean flag=false;
		
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		MasterVo vo = new MasterVo();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, ratioDefinitionMasterAddDynaValidatorForm);	
		
		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
		
		vo.setMakerId(userId);
		vo.setMakerDate(bDate);
		
		String sms="";
		boolean status=false;
		
		status = bp.checkExpression(vo);
		
		if(status)
		{
		
			status = bp.saveRatioDefinition(vo);
			
			logger.info("Inside saveRatioDefinition.....displaying status...."+status);
			if(status){
				sms="S";
				request.setAttribute("sms",sms);
				ratioDefinitionMasterAddDynaValidatorForm.reset(mapping, request);
			}
			else{
				sms="E";
				ArrayList ratioDetail =new ArrayList();
				
				if (vo.getRatioStatus() != null
						&& vo.getRatioStatus().equals("on")) {
					vo.setRatioStatus("A");
				} else {
					vo.setRatioStatus("X");
				}
				ratioDetail.add(vo);
				request.setAttribute("ratioDetail", ratioDetail);
	//			ArrayList list1 = masterDAO.getAgency();
	//			request.setAttribute("agencyType", list1);
				request.setAttribute("sms",sms);
			}
		}
		else
		{
			request.setAttribute("sms","V");
			ArrayList ratioDetail =new ArrayList();
			
			if (vo.getRatioStatus() != null
					&& vo.getRatioStatus().equals("on")) {
				vo.setRatioStatus("A");
			} else {
				vo.setRatioStatus("X");
			}
			ratioDetail.add(vo);
			request.setAttribute("ratioDetail", ratioDetail);
		}
		ArrayList paramList = bp.getParamDetailDetails("");
        ArrayList ratioList = bp.getRatioList();
		request.setAttribute("paramList", paramList);
		request.setAttribute("ratioList", ratioList);
	    logger.info("status"+status);
	    
		return mapping.getInputForward();
	}
	
	public ActionForward openEditRatioDefinition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)	throws Exception {
		        MasterVo vo=new MasterVo(); 
				logger.info("In openEditRatioDefinition");
				ServletContext context = getServlet().getServletContext();
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				vo.setRatioCode(request.getParameter("ratioCode"));
			
				CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				
		        ArrayList<MasterVo> ratioData = bp.ratioDefinitionSearch(vo);
				
				logger.info("In openEditRatioDefinition vo list"+ratioData.size());
				request.setAttribute("ratioData", ratioData);
				
				ArrayList paramList = bp.getParamDetailDetails("");
		        ArrayList ratioList = bp.getRatioList();
				request.setAttribute("paramList", paramList);
				request.setAttribute("ratioList", ratioList);
				MasterVo mVo=new MasterVo();
				mVo=ratioData.get(0);
				logger.info("In openEditRatioDefinition---status---- by   getpara by vo-"+mVo.getRatioStatus());
				request.setAttribute("status", mVo.getRatioStatus());
				request.setAttribute("editVal", "editVal");
			   return mapping.findForward("openAdd");	
			}
	
	public ActionForward updateRatioDefinition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		logger.info("In updateRatioDefinition.......");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		ServletContext context = getServlet().getServletContext();
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		MasterVo vo=new MasterVo(); 
		DynaValidatorForm ratioDefinitionMasterAddDynaValidatorForm= (DynaValidatorForm)form;
		  
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, ratioDefinitionMasterAddDynaValidatorForm);	
		
		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
		
		vo.setRatioStatus(request.getParameter("ratioStatus"));
		logger.info("In updateRatioDefinition---status---- by getpara-"+request.getParameter("ratioStatus"));
		
		vo.setRatioCode(request.getParameter("ratioCode"));
		  
        boolean status=false;
        status = bp.checkExpression(vo);
		if(status)
		{
	        status=bp.updateRatioDefinition(vo);
	        String sms="";
	        if(status){
				sms="M";
				request.setAttribute("sms",sms);
				ratioDefinitionMasterAddDynaValidatorForm.reset(mapping, request);
			}
			else{
				sms="E";
	//			ArrayList list1 = masterDAO.getAgency();
	//			request.setAttribute("agencyType", list1);
				request.setAttribute("sms",sms);
				//request.setAttribute("editVal", "editVal");
			}
		}
		else
		{
			request.setAttribute("sms","V");
			ArrayList ratioDetail =new ArrayList();
			ratioDetail.add(vo);
			//request.setAttribute("ratioDetail", ratioDetail);
			request.setAttribute("ratioData", ratioDetail);
			request.setAttribute("editVal", "editVal");
		}
		
		ArrayList paramList = bp.getParamDetailDetails("");
        ArrayList ratioList = bp.getRatioList();
		request.setAttribute("paramList", paramList);
		request.setAttribute("ratioList", ratioList);
        return mapping.getInputForward();
       
		
	}
	/*Code Added By arun For Ajex Process for Ratio Farmula*/
	public ActionForward getRatioFarmula(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)	throws Exception {
		ServletContext context = getServlet().getServletContext();
				logger.info(" in getRatioFarmula()");
				
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//ArrayList list = service.getAgency();
				//request.setAttribute("agencyType", list);
				
				CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				String ratioCode=CommonFunction.checkNull(request.getParameter("ratioCode"));
				 logger.info("ratioCode: "+ratioCode);
		        String  ratioFormula = bp.getRatioFarmula(ratioCode);
		        request.setAttribute("ratioFormula", ratioFormula);
			    return mapping.findForward("ajaxSuccess");	
			}
}