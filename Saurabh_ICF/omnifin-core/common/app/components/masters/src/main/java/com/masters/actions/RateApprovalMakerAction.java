/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.masters.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CommonMasterBussinessSessionBeanRemote;
import com.business.ejbClient.CreditProcessingMasterBussinessSessionBeanRemote;
import com.business.legalTransactionBussiness.LegalTransactionBusinessSessionBeanRemote;
import com.connect.CommonFunction;
import com.connect.LookUpInstanceFactory;
import com.legal.vo.LegalNoticeInitiationVo;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.RateApprovalVo;
import com.masters.vo.VerificationQuestionVo;

/** 
 * MyEclipse Struts
 * Creation date: 09-18-2012
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RateApprovalMakerAction extends DispatchAction {
	
	private static final Logger logger = Logger.getLogger(RateApprovalMakerAction.class.getName());
	
	
	public ActionForward rateApprovalMakerSearch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session=request.getSession(false);
		ServletContext context = getServlet().getServletContext();
		logger.info(" ## In rateApprovalMakerSearch() :  .........");
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		
		RateApprovalVo vo = new RateApprovalVo(); //change
        
		DynaValidatorForm dyanForm= (DynaValidatorForm)form;
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, dyanForm);
	

		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
        
        ArrayList list=new ArrayList();
		
		logger.info("current page link .......... "+request.getParameter("d-49520-p"));
		
		int currentPageLink = 0;
		if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0"))
		{
			currentPageLink=1;
		}
		else
		{
			currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
		}
		
		logger.info("current page link ................ "+request.getParameter("d-49520-p"));
		
		vo.setCurrentPageLink(currentPageLink);
		//vo1.setCurrentPageLink(currentPageLink);
		
		//change from here
		if(CommonFunction.checkNull(vo.getSearchByStatus()).equalsIgnoreCase(""))
				vo.setSearchByStatus("P");
		list= bp.rateApprovalMakerSearch(vo);

	    logger.info("In Rate Approval MakerAction....list"+list.size());
		
	    request.setAttribute("list", list);
		
		logger.info("list.isEmpty(): "+list.isEmpty());
		String searchByStatus = vo.getSearchByStatus();
		request.setAttribute("searchByStatus", searchByStatus);	
	    return mapping.findForward("search");

}
	
	public ActionForward rateApprovalMakerAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session=request.getSession(false);
		ServletContext context = getServlet().getServletContext();
		logger.info(" ## In rateApprovalMakerAdd() :  .........");
		
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		
		request.setAttribute("save", "save");
				
	    return mapping.findForward("open");


}

	// Method for Save the Record
	public ActionForward rateApprovalMakerSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse resopnse) throws Exception{
		
		logger.info(" ## In rateApprovalMakerSave() :  .........");
		
			ServletContext context = getServlet().getServletContext();
			//HttpSession session=request.getSession(false);
			HttpSession session = request.getSession();
			boolean flag=false;
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			Object sessionId = session.getAttribute("sessionID");
			logger.info("rateApprovalMakerSave()--->>");
			//for check User session start
			String strFlag="";
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}
	
		DynaValidatorForm dynaForm= (DynaValidatorForm)form;
		RateApprovalVo vo = new RateApprovalVo();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, dynaForm);
		

		vo.setMakerId(userId);
		vo.setMakerDate(bDate);
		
		
		
		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
	
		String sms="";
		
		String saveForwardFlag=CommonFunction.checkNull(request.getParameter("saveForwardFlag"));
		
		logger.info("## rateApprovalMakerSave() : saveForwardFlag : ==>> "+saveForwardFlag);
		
		vo.setSaveForwardFlag(saveForwardFlag);
		
		boolean status = bp.saveRateApprovalMakerData(vo);
		
		logger.info("Inside  Action.....displaying status...."+status);
		if(status){
					if(saveForwardFlag.equalsIgnoreCase("P"))
						sms="S";
					else
						sms="F";
				  }
		
		  else
		  {
			 sms="E";
			 request.setAttribute("save", "save");
		  }
		request.setAttribute("sms",sms);
		request.setAttribute("product", vo.getLbxProductID());
		request.setAttribute("scheme", vo.getLbxScheme());
		
		logger.info("status"+status);
		return mapping.getInputForward();
	}
	
	public ActionForward rateApprovalMakerOpenEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse resopnse) throws Exception{
		
		logger.info(" ## In rateApprovalMakerOpenEdit() :  .........");
		
			ServletContext context = getServlet().getServletContext();
			//HttpSession session=request.getSession(false);
			HttpSession session = request.getSession();
			boolean flag=false;
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			Object sessionId = session.getAttribute("sessionID");
			logger.info("rateApprovalMakerOpenEdit()--->>");
			//for check User session start
			String strFlag="";
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}
	
		DynaValidatorForm dynaForm= (DynaValidatorForm)form;
		RateApprovalVo vo = new RateApprovalVo();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, dynaForm);
		

		vo.setMakerId(userId);
		vo.setMakerDate(bDate);
		
		
		
		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
	
		String sms="";
		
		
		String product =  CommonFunction.checkNull(request.getParameter("product"));
		String scheme =  CommonFunction.checkNull(request.getParameter("scheme"));
		
		vo.setLbxProductID(product);
		vo.setLbxScheme(scheme);
		
		ArrayList list = bp.openEditRateApprovalMakerData(vo);
		
		request.setAttribute("list", list);
		request.setAttribute("editVal", "editVal");
		
		return mapping.getInputForward();
	}
	
	public ActionForward rateApprovalMakerUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ServletContext context = getServlet().getServletContext();
		logger.info("## In rateApprovalMakerUpdate() : .......");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}
		
		RateApprovalVo vo=new RateApprovalVo(); 
		DynaValidatorForm dynaForm= (DynaValidatorForm)form;
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, dynaForm);	

		
		vo.setMakerId(userId);
		vo.setMakerDate(bDate);
		
		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
        
        String saveForwardFlag = CommonFunction.checkNull(request.getParameter("saveForwardFlag"));
        
        logger.info("## In rateApprovalMakerUpdate() : saveForwardFlag :==>> "+saveForwardFlag);
        
        vo.setSaveForwardFlag(saveForwardFlag);
        
        
        boolean status=bp.updateRateApprovalMakerData(vo);
        
        logger.info("## In rateApprovalMakerUpdate() : status : ==>> "+status);
       
        
        String sms="";
        if(status){
        	
        	if(vo.getSaveForwardFlag().equalsIgnoreCase("P"))
        	{
			sms="M";
			request.setAttribute("sms",sms);
			request.setAttribute("editVal", "editVal");
			request.setAttribute("product", vo.getLbxProductID());
			request.setAttribute("scheme", vo.getLbxScheme());
			
        	}
        	else if(vo.getSaveForwardFlag().equalsIgnoreCase("F"))
        	{
        	sms="F";
			request.setAttribute("sms",sms);
			request.setAttribute("editVal", "editVal");
        	}
		
		}
		else{
			
				sms="E";
				
			
			
			request.setAttribute("sms",sms);
			ArrayList<RateApprovalVo> list =new ArrayList<RateApprovalVo>();
			list.add(vo);
			logger.info("## In rateApprovalMakerUpdate() : list for error : ==>> "+ list.size());
			request.setAttribute("editVal", "editVal");
			request.setAttribute("list", list);
			request.setAttribute("status", vo.getRecStatus());
			
		}
		        
        return mapping.getInputForward();
      
		
	}
	
	
	 
}