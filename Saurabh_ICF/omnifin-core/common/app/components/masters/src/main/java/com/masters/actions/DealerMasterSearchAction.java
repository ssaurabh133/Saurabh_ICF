/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.masters.actions;

import java.util.ArrayList;
import java.util.Iterator;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CommonMasterBussinessSessionBeanRemote;
import com.connect.CommonFunction;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.DealerMasterVo;

public class DealerMasterSearchAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(DealerMasterSearchAction.class.getName());
		public ActionForward openAddDealer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
			ServletContext context = getServlet().getServletContext();
			logger.info(" in openAddDealer()");
			HttpSession session = request.getSession();
			boolean flag=false;
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			
			request.setAttribute("save", "save");
			return mapping.findForward("openAdd");
	}
		
		public ActionForward saveDealerDetails(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception {
			ServletContext context = getServlet().getServletContext();
			HttpSession session=request.getSession(false);
			UserObject userobj=new UserObject();
			userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			
			String procval="";
			
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}
			boolean flag=false;
			
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
				DynaValidatorForm DealerMasterAddDyanavalidatiorForm= (DynaValidatorForm)form;
				DealerMasterVo vo = new DealerMasterVo();
				org.apache.commons.beanutils.BeanUtils.copyProperties(vo, DealerMasterAddDyanavalidatiorForm);
				
				CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				
				vo.setMakerId(userId);
				vo.setMakerDate(bDate);
				vo.setEmpanelStatus(request.getParameter("empanelledStatus"));
				logger.info("In saveDealerDetails empanelled---status-----"+vo.getEmpanelStatus());
				
				String sms="";
			
				String user=CommonFunction.checkNull(request.getParameter("userDesc"));
				logger.info("user   :   "+user);
				
//				logger.info("branch........"+user);
//				String[] userName = user.split("/");
//				 
//				for(int i=0;i<userName.length;i++){
//			    logger.info(userName[i]);
//				 }
				
				procval = bp.insertDealerMaster(vo,user);
				//if(result){
				if((procval.equalsIgnoreCase("NONE")))
				{
					sms="S";
					request.setAttribute("sms",sms);
					request.setAttribute("editValUpdate", "editValUpdate");
					request.setAttribute("editVal", "editVal");
					ArrayList<DealerMasterVo> list =new ArrayList<DealerMasterVo>();
					list.add(vo);
					request.setAttribute("list", list);
					String val=CommonFunction.checkNull(request.getParameter("empanelledStatus")).trim();
					if(CommonFunction.checkNull(val).trim().equalsIgnoreCase("on"))
						request.setAttribute("checked","Y");
					else
						request.setAttribute("checked","N");				
				}else if((procval.equalsIgnoreCase("dataExist"))){
					sms="DE";
					request.setAttribute("sms",sms);
					request.setAttribute("save", "save");
					 request.setAttribute("procval", procval);
				}else{
					sms="E";
					request.setAttribute("sms",sms);
					request.setAttribute("save", "save");
					 request.setAttribute("procval", procval);
				}
				
//				boolean status = bp.insertDealerMaster(vo,userName);
//				logger.info("Inside Dealer Master Action.....displaying status...."+status);
//				if(status){
//					sms="S";
//					request.setAttribute("sms",sms);
//					request.setAttribute("save", "save");
//				}
//				else{
//					sms="E";
//					request.setAttribute("sms",sms);
//					request.setAttribute("save", "save");
//				}
//				logger.info("status"+status);
				return mapping.getInputForward();

		}
		

		
			public ActionForward openEditDealer(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)	throws Exception {
				DealerMasterVo dealerMasterVo=new DealerMasterVo(); 
				ServletContext context = getServlet().getServletContext();
					logger.info("In openEditDealer");
					HttpSession session = request.getSession();
					boolean flag=false;
					UserObject userobj=(UserObject)session.getAttribute("userobject");
					Object sessionId = session.getAttribute("sessionID");
					//for check User session start
					String strFlag="";	
					if(sessionId!=null)
					{
						strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
					}
					
					logger.info("strFlag .............. "+strFlag);
					if(!strFlag.equalsIgnoreCase(""))
					{
						if(strFlag.equalsIgnoreCase("sameUserSession"))
						{
							context.removeAttribute("msg");
							context.removeAttribute("msg1");
						}
						else if(strFlag.equalsIgnoreCase("BODCheck"))
						{
							context.setAttribute("msg", "B");
						}
						return mapping.findForward("logout");
					}
					String userSearchId=request.getParameter("dealerId");
					
					logger.info(" In Action  dealerId "+userSearchId);
					dealerMasterVo.setDealerId(request.getParameter("dealerId"));
					
					session.setAttribute("dealerId",userSearchId);
					
					logger.info("In openEditDealer---status---- by getpara-"+request.getParameter("dealerId"));  
					logger.info("In openEditDealer---status---- by getpara by vo-"+dealerMasterVo.getDealerId());
					
					CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
					
			        ArrayList<DealerMasterVo> list = bp.searchDealerData(dealerMasterVo);
					logger.info("In openEditDealer dealerMasterVo list"+list.size());
					request.setAttribute("list", list);
					ArrayList<DealerMasterVo> user = bp.searchUserEdit(userSearchId);
					logger.info("In openEditDealer dealerMasterVo list"+list.size());
					request.setAttribute("levelNameList", user);
				
					String userDesc ="";
			
					String branchSelection ="";
		
					Iterator<DealerMasterVo> it= user.iterator();
					
					while(it.hasNext())
					{
						DealerMasterVo  vo1 = (DealerMasterVo) it.next();
						logger.info("vo1.getUserId()---"+vo1.getUserId());
						userDesc=userDesc+vo1.getUserId()+"|";
					
					}
					if(!userDesc.equalsIgnoreCase(""))
						userDesc = userDesc.substring(0,userDesc.length()-1);
					logger.info("userDesc--2--"+userDesc);
					
					logger.info("userDesc String ............................... "+userDesc);
			
					request.setAttribute("userIds", userDesc);
					logger.info("In openEditUser userMasterVo list"+list.size());
					if(list.size()>0)
					{
						dealerMasterVo=list.get(0);
					}
					//manish empanelledStatus
					String val=dealerMasterVo.getEmpanelStatus();					
					request.setAttribute("checked",val);
					
					request.setAttribute("levelNameList", user);
				/*	DealerMasterVo docVo=new DealerMasterVo();
					docVo=list.get(0);*/
					logger.info("In openEditDealer---status---- by   getpara by vo-"+dealerMasterVo.getDealerStatus());
					request.setAttribute("status", dealerMasterVo.getDealerStatus());
					logger.info("In openEditDealer rec---status-----"+dealerMasterVo.getDealerStatus());
					request.setAttribute("editVal", "editVal");
				   return mapping.findForward("editDealer");	
				}
		
		
		public ActionForward updateDealer(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception {
			ServletContext context = getServlet().getServletContext();
			logger.info("In updateDealerMaster.......");
			HttpSession session = request.getSession();
			boolean flag=false;
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			Object sessionId = session.getAttribute("sessionID");
			
			
			userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			
			String procval="";
			
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}
			//for check User session start
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			
			DealerMasterVo vo=new DealerMasterVo(); 
			DynaValidatorForm DealerMasterAddDyanavalidatiorForm= (DynaValidatorForm)form;
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, DealerMasterAddDyanavalidatiorForm);	

			CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
			
			logger.info("In updateDealerDetails---status by form- dealerId----"+DealerMasterAddDyanavalidatiorForm.getString("dealerId"));  
			vo.setDealerStatus(request.getParameter("dealerStatus"));
			logger.info("In updateBankDetails---status-----"+vo.getDealerStatus());
			vo.setDealerDes(request.getParameter("dealerDes"));
			// Manish empanelledStatus
			vo.setEmpanelStatus(request.getParameter("empanelledStatus"));
			logger.info("In updateDealerDetails empanelled---status-----"+vo.getEmpanelStatus());
			
			
			
			
			logger.info("In updateDealerDetails---status---- by getpara-"+request.getParameter("dealerStatus"));  
			logger.info("In updateDealerDetails---status---- by getpara by vo-"+vo.getDealerStatus());
			logger.info("In updateDealerDetails---------");    
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			String[] userName=null;
		
			if(!CommonFunction.checkNull(request.getParameter("user")).equalsIgnoreCase("")){
			String user=CommonFunction.checkNull(request.getParameter("user"));
			
			logger.info("user........"+user);
			userName = user.split("/");
			 
			for(int i=0;i<userName.length;i++){
		    logger.info("userName[i]----------->"+userName[i]);
			 }
			}
	        String resultStatus=bp.updateDealerData(vo,userName);
	        String sms="";
	        if(resultStatus.equalsIgnoreCase("saved"))
	        {
	        	sms="M";
				request.setAttribute("sms",sms);
				request.setAttribute("editValUpdate", "editValUpdate");
				request.setAttribute("editVal", "editVal");
				ArrayList<DealerMasterVo> list =new ArrayList<DealerMasterVo>();
				list.add(vo);
				logger.info("In openEditNPAStage list"+ list.size());
				request.setAttribute("list", list);
				String val=CommonFunction.checkNull(request.getParameter("empanelledStatus")).trim();
				if(CommonFunction.checkNull(val).trim().equalsIgnoreCase("on"))
					request.setAttribute("checked","Y");
				else
					request.setAttribute("checked","N");
					
			}
			else if(resultStatus.equalsIgnoreCase("notsaved")){
				sms="E";
				request.setAttribute("sms",sms);
				ArrayList<DealerMasterVo> list =new ArrayList<DealerMasterVo>();
				list.add(vo);
				logger.info("In openEditNPAStage list"+ list.size());
				
				request.setAttribute("editValUpdate", "editValUpdate");
				request.setAttribute("list", list);
				request.setAttribute("status", vo.getDealerStatus());
			}else if(resultStatus.equalsIgnoreCase("dataExist")){
				sms="DE";
				request.setAttribute("sms",sms);
				ArrayList<DealerMasterVo> list =new ArrayList<DealerMasterVo>();
				list.add(vo);
				logger.info("In openEditNPAStage list"+ list.size());
				
				request.setAttribute("editValUpdate", "editValUpdate");
				request.setAttribute("list", list);
				request.setAttribute("status", vo.getDealerStatus());
			}
	                      
	        return mapping.getInputForward();
	      
			
		}

}