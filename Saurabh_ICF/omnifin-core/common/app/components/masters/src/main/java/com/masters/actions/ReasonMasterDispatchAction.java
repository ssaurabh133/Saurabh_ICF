/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.masters.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CommonMasterBussinessSessionBeanRemote;
import com.connect.CommonFunction;
import com.connect.ConnectionDAOforEJB;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.BranchMasterVo;
import com.masters.vo.ReasonMasterVo;

/** 
 * MyEclipse Struts
 * Creation date: 05-19-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ReasonMasterDispatchAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(ReasonMasterDispatchAction.class.getName());
		public ActionForward openAddReason(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)throws Exception{
			ServletContext context = getServlet().getServletContext();
			logger.info("In opendAddReason()");
			HttpSession session = request.getSession();
			boolean flag=false;
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			
			request.setAttribute("save", "save");
			return mapping.findForward("openAdd"); 
			
		}	
		

			public ActionForward saveReasonDetails(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse resopnse) throws Exception{
				ServletContext context = getServlet().getServletContext();
				//HttpSession session=request.getSession(false);
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				String userId="";
				String bDate="";
				if(userobj!=null)
				{
						userId=userobj.getUserId();
						bDate=userobj.getBusinessdate();
				}
				
			DynaValidatorForm ReasonMasterAddDyanavalidationForm= (DynaValidatorForm)form;
			ReasonMasterVo vo = new ReasonMasterVo();
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, ReasonMasterAddDyanavalidationForm);	
			
			CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
			
	        String sms="";
	        String  status="";
	        String checkQuery = ConnectionDAOforEJB.singleReturn("select REASON_SHORT_CODE from com_reason_m where REASON_SHORT_CODE='"+vo.getReasonShortcode()+"'");
	        
	        logger.info("In insert reason master for insert.......Dispatch action "+checkQuery);
	        if(CommonFunction.checkNull(checkQuery).equalsIgnoreCase(""))
	        {
	        	status = bp.insertReasonMaster(vo);
	        }
	        else
	        {
	        	sms="EX";
	        	request.setAttribute("sms",sms);
	        }
			logger.info("Inside Reason Master Action.....displaying status...."+status);
			if(status.equalsIgnoreCase("S"))
			{
				sms="S";
				request.setAttribute("sms",sms);
				ArrayList<ReasonMasterVo> list = new ArrayList();
				list.add(vo);
				request.setAttribute("list", list);
				if(vo.getLbxReason().equalsIgnoreCase("CHQBOU"))
						request.setAttribute("checkbox","CHQBOU");
				
				String chargeFlag=CommonFunction.checkNull(vo.getChargeFlag());
				if(CommonFunction.checkNull(chargeFlag).trim().equalsIgnoreCase("on"))
					chargeFlag="Yes";
				else
					chargeFlag="No";
				String recStatus=CommonFunction.checkNull(vo.getChargeFlag());
				if(CommonFunction.checkNull(recStatus).trim().equalsIgnoreCase("on"))
					recStatus="Active";
				else
					recStatus="";
				
				request.setAttribute("chargeFlag",chargeFlag);
				request.setAttribute("status", recStatus);
				request.setAttribute("editVal", "editVal");				
			}
			if(status.equalsIgnoreCase("E"))
			{
				sms="E";
				request.setAttribute("sms",sms);
				if(vo.getReasonType().equalsIgnoreCase("BLACK LIST REASON"))
				{
					request.setAttribute("disableCheck", "1");
				}
			
			}
			if(status.equalsIgnoreCase("EX"))
			{
				sms="EX";
				request.setAttribute("sms",sms);
				if(vo.getReasonType().equalsIgnoreCase("BLACK LIST REASON"))
				{
					request.setAttribute("disableCheck", "1");
					
				}
			
			}
			logger.info("status"+status+"Reason Type"+vo.getReasonType());		
			return mapping.getInputForward();
		}
			
			public ActionForward openEditReason(ActionMapping mapping, ActionForm form,
					HttpServletRequest request, HttpServletResponse response)	throws Exception {
				ServletContext context = getServlet().getServletContext();
								ReasonMasterVo reasonMasterVo=new ReasonMasterVo(); 
								logger.info("In openEditReason");
							    
								HttpSession session = request.getSession();
								boolean flag=false;
								UserObject userobj=(UserObject)session.getAttribute("userobject");
								Object sessionId = session.getAttribute("sessionID");
								//for check User session start
								String strFlag="";	
								if(sessionId!=null)
								{
									strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
								}
								
								logger.info("strFlag .............. "+strFlag);
								if(!strFlag.equalsIgnoreCase(""))
								{
									if(strFlag.equalsIgnoreCase("sameUserSession"))
									{
										context.removeAttribute("msg");
										context.removeAttribute("msg1");
									}
									else if(strFlag.equalsIgnoreCase("BODCheck"))
									{
										context.setAttribute("msg", "B");
									}
									return mapping.findForward("logout");
								}
								
								reasonMasterVo.setReasonId(request.getParameter("ReasonId"));
								logger.info("In openEditReason---status---- by getpara-"+request.getParameter("reasonId"));  
								logger.info("In openEditReason---status---- by getpara by vo-"+reasonMasterVo.getReasonId());
								
								CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
								
						        ArrayList<ReasonMasterVo> list = bp.searchReasonData(reasonMasterVo);
								logger.info("In openEditReason ReasonMasterVo list"+list.size());
								request.setAttribute("list", list);
							
								
								reasonMasterVo=list.get(0);
								ReasonMasterVo docVo=new ReasonMasterVo();
								docVo=list.get(0);
								logger.info("In openEditReason---status---- by   getpara by vo-"+docVo.getRecStatus());
								
								if(docVo.getReasonType().equalsIgnoreCase("CHQBOU")){
									request.setAttribute("checkbox","CHQBOU");
								}
								request.setAttribute("chargeFlag", reasonMasterVo.getChargeFlag());
								request.setAttribute("status", reasonMasterVo.getRecStatus());
								request.setAttribute("editVal", "editVal");
							   return mapping.findForward("editReason");	
							}
					
					
					public ActionForward updateReason(ActionMapping mapping, ActionForm form,
							HttpServletRequest request, HttpServletResponse response) throws Exception 
					{
						
						logger.info("In updateReasonMaster.......");
						ServletContext context = getServlet().getServletContext();
						HttpSession session = request.getSession();
						boolean flag=false;
						UserObject userobj=(UserObject)session.getAttribute("userobject");
						Object sessionId = session.getAttribute("sessionID");
						String strFlag="";	
						if(sessionId!=null)
						{
							strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
						}						
						logger.info("strFlag .............. "+strFlag);
						if(!strFlag.equalsIgnoreCase(""))
						{
							if(strFlag.equalsIgnoreCase("sameUserSession"))
							{
								context.removeAttribute("msg");
								context.removeAttribute("msg1");
							}
							else if(strFlag.equalsIgnoreCase("BODCheck"))
							{
								context.setAttribute("msg", "B");
							}
							return mapping.findForward("logout");
						}
						ReasonMasterVo reasonMastervo=new ReasonMasterVo(); 
						DynaValidatorForm ReasonMasterAddDyanaValidationForm= (DynaValidatorForm)form;
						org.apache.commons.beanutils.BeanUtils.copyProperties(reasonMastervo, ReasonMasterAddDyanaValidationForm);	
						CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
						String sms="";
				
						 String checkQuery = ConnectionDAOforEJB.singleReturn("select REASON_SHORT_CODE from com_reason_m where REASON_SHORT_CODE='"+reasonMastervo.getReasonShortcode()+"' and Reason_ID<> '"+reasonMastervo.getReasonId()+"'");
						 logger.info("In reasonMaster for update............................dispatch action"+ checkQuery);
					     if(CommonFunction.checkNull(checkQuery).equalsIgnoreCase(""))
					     {
					        bp.updateReasonData(reasonMastervo);
					       	sms="M";
							request.setAttribute("sms",sms);							        
					     }
					     else
					     {
					       	sms="EX";
					       	request.setAttribute("sms",sms);
					     }
					        	
						/*  boolean status=bp.updateReasonData(reasonMastervo);
				      
				       
						else{
							sms="E";
							request.setAttribute("sms",sms);
						}*/
					
				        reasonMastervo.setReasonId(request.getParameter("reasonId"));
				    			        
				        return mapping.getInputForward();
				      
						
					}
			}

					
					
					        
					
		
	