/*
s * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.masters.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CommonMasterBussinessSessionBeanRemote;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.DepartmentMasterVo;

public class DepartmentMasterDispatchAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(DepartmentMasterDispatchAction.class.getName());
	public ActionForward openAddDept(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)	throws Exception
			{ServletContext context = getServlet().getServletContext();
				logger.info(" in openAddDept()");
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				
				request.setAttribute("save", "save");
			    return mapping.findForward("openAdd");	
			}
	
	public ActionForward saveDepartmentDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse resopnse) throws Exception{
			HttpSession session=request.getSession(false);
			UserObject userobj=new UserObject();
			userobj=(UserObject)session.getAttribute("userobject");
			
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}
			ServletContext context = getServlet().getServletContext();
			boolean flag=false;
			
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
		
				DynaValidatorForm DepartmentMasterAddDyanavalidatiorForm= (DynaValidatorForm)form;
				DepartmentMasterVo vo = new DepartmentMasterVo();
				
				vo.setMakerId(userId);
				vo.setMakerDate(bDate);

				org.apache.commons.beanutils.BeanUtils.copyProperties(vo, DepartmentMasterAddDyanavalidatiorForm);	
				
				CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				
		        String sms="";
			
				String status = bp.insertDepartmentMaster(vo);
				logger.info("Inside Department Master Action.....displaying status...."+status);
				
				if(status.equalsIgnoreCase("saved")){
					sms="S";
					request.setAttribute("sms",sms);
					
				}
				else{
					sms="E";
					request.setAttribute("sms",sms);
				}
				logger.info("status"+status);
				return mapping.getInputForward();

		}
	
	
	public ActionForward openEditDepartment(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)	throws Exception {
		ServletContext context = getServlet().getServletContext();
		DepartmentMasterVo departmentMasterVo=new DepartmentMasterVo(); 
				logger.info("In openEditDepartment");
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				departmentMasterVo.setDepartmentId(request.getParameter("DepartmentId"));
				logger.info("In openEditDepartment---status---- by getpara-"+request.getParameter("dealerId"));  
				logger.info("In openEditDepartment---status---- by getpara by vo-"+departmentMasterVo.getDepartmentId());
				
				CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				
		        ArrayList<DepartmentMasterVo> list = bp.searchDepartmentData(departmentMasterVo);
				logger.info("In openEditDepartment departmentMasterVo list"+list.size());
				request.setAttribute("list", list);
			
				
				departmentMasterVo=list.get(0);
				DepartmentMasterVo docVo=new DepartmentMasterVo();
				docVo=list.get(0);
				logger.info("In openEditDepartmetn---status---- by   getpara by vo-"+docVo.getDepartmentStatus());
				request.setAttribute("status", departmentMasterVo.getDepartmentStatus());
				request.setAttribute("editVal", "editVal");
			   return mapping.findForward("editDepartment");	
			}
	
	
	public ActionForward updateDepartment(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		ServletContext context = getServlet().getServletContext();
		logger.info("In updateDepartmentMaster.......");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		DynaValidatorForm DepartmentMasterAddDyanavalidatiorForm= (DynaValidatorForm)form;
		DepartmentMasterVo vo = new DepartmentMasterVo();
		
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, DepartmentMasterAddDyanavalidatiorForm);	
		
		CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
		
        String sms="";
	
		boolean status = bp.updateDepartmentData(vo);
		logger.info("Inside Department Master Action.....displaying status...."+status);
		
		if(status){
			sms="M";
			request.setAttribute("sms",sms);
			
		}
		else{
			sms="E";
			request.setAttribute("sms",sms);
		}
		logger.info("status"+status);
		return mapping.getInputForward();

}
		
	
}