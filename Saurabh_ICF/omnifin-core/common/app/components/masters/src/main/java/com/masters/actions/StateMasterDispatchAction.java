/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.masters.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CommonMasterBussinessSessionBeanRemote;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.StateMasterVo;


public class StateMasterDispatchAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(StateMasterDispatchAction.class.getName());
	
	 public ActionForward openAddState(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)	throws Exception
				{
					logger.info(" in openAddState()");
					ServletContext context = getServlet().getServletContext();
					HttpSession session = request.getSession();
					boolean flag=false;
					UserObject userobj=(UserObject)session.getAttribute("userobject");
					Object sessionId = session.getAttribute("sessionID");
					//for check User session start
					String strFlag="";	
					if(sessionId!=null)
					{
						strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
					}
					
					logger.info("strFlag .............. "+strFlag);
					if(!strFlag.equalsIgnoreCase(""))
					{
						if(strFlag.equalsIgnoreCase("sameUserSession"))
						{
							context.removeAttribute("msg");
							context.removeAttribute("msg1");
						}
						else if(strFlag.equalsIgnoreCase("BODCheck"))
						{
							context.setAttribute("msg", "B");
						}
						return mapping.findForward("logout");
					}
					
					CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
			        
			        ArrayList defaultcountry=bp.defaultCountry1();
					request.setAttribute("defaultcountry", defaultcountry);
					request.setAttribute("save", "save");
				    return mapping.findForward("openAdd");	
				}
		 

			public ActionForward saveStateDetails(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse resopnse) throws Exception{

				HttpSession session = request.getSession();
				ServletContext context = getServlet().getServletContext();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				String userId="";
				String bDate="";
				if(userobj!=null)
				{
						userId=userobj.getUserId();
						bDate=userobj.getBusinessdate();
				}
				
			DynaValidatorForm StateMasterAddDyanavalidatiorForm= (DynaValidatorForm)form;
			StateMasterVo vo = new StateMasterVo();

			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, StateMasterAddDyanavalidatiorForm);	
			String sms="";
			
			CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
			
	        boolean status = bp.insertStateMaster(vo);
			logger.info("Inside State Master Action.....displaying status...."+status);
			if(status){
				sms="S";
				request.setAttribute("sms",sms);
				request.setAttribute("save", "save");
			}
			else{
				sms="E";
				request.setAttribute("sms",sms);
				request.setAttribute("save", "save");
			}
			logger.info("status"+status);
			return mapping.getInputForward();
		}
			
			public ActionForward openEditState(ActionMapping mapping, ActionForm form,
					HttpServletRequest request, HttpServletResponse response)	throws Exception {
							
								StateMasterVo stateMasterVo=new StateMasterVo(); 
								logger.info("In openEditState");
								HttpSession session = request.getSession();
								boolean flag=false;
								UserObject userobj=(UserObject)session.getAttribute("userobject");
								Object sessionId = session.getAttribute("sessionID");
								ServletContext context = getServlet().getServletContext();
								String strFlag="";	
								if(sessionId!=null)
								{
									strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
								}
								
								logger.info("strFlag .............. "+strFlag);
								if(!strFlag.equalsIgnoreCase(""))
								{
									if(strFlag.equalsIgnoreCase("sameUserSession"))
									{
										context.removeAttribute("msg");
										context.removeAttribute("msg1");
									}
									else if(strFlag.equalsIgnoreCase("BODCheck"))
									{
										context.setAttribute("msg", "B");
									}
									return mapping.findForward("logout");
								}
								stateMasterVo.setStateId(request.getParameter("StateId"));
								stateMasterVo.setGstId(request.getParameter("gstId"));
								stateMasterVo.setGstCode(request.getParameter("gstCode"));
								stateMasterVo.setUnionterritory(request.getParameter("unionterritory"));								
								logger.info("In openEditState---status---- by getpara-"+request.getParameter("StateId"));  
								logger.info("In openEditState---status---- by getpara by vo-"+stateMasterVo.getStateId());
								
								CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
								
								ArrayList list = bp.searchStateData(stateMasterVo);
								logger.info("In openEditState StateMasterVo list"+list.size());
								request.setAttribute("list", list);
							
								
								stateMasterVo=(StateMasterVo) list.get(0);
								StateMasterVo docVo=new StateMasterVo();
								docVo=(StateMasterVo) list.get(0);
								logger.info("In openEditState---status---- by   getpara by vo-"+docVo.getStateStatus());
								
							
								request.setAttribute("status", stateMasterVo.getStateStatus());
								request.setAttribute("unionterritory", stateMasterVo.getUnionterritory());								
								request.setAttribute("editVal", "editVal");
							   return mapping.findForward("editState");	
							}
					
					
					public ActionForward updateState(ActionMapping mapping, ActionForm form,
							HttpServletRequest request, HttpServletResponse response) throws Exception {
						
						logger.info("In updateStateMaster.......");
						StateMasterVo stateMasterVo=new StateMasterVo(); 
						DynaValidatorForm StateMasterAddDyanavalidatiorForm= (DynaValidatorForm)form;
						org.apache.commons.beanutils.BeanUtils.copyProperties(stateMasterVo, StateMasterAddDyanavalidatiorForm);	
						HttpSession session = request.getSession();
						boolean flag=false;
						UserObject userobj=(UserObject)session.getAttribute("userobject");
						Object sessionId = session.getAttribute("sessionID");
						ServletContext context = getServlet().getServletContext();
						String strFlag="";	
						if(sessionId!=null)
						{
							strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
						}
						
						logger.info("strFlag .............. "+strFlag);
						if(!strFlag.equalsIgnoreCase(""))
						{
							if(strFlag.equalsIgnoreCase("sameUserSession"))
							{
								context.removeAttribute("msg");
								context.removeAttribute("msg1");
							}
							else if(strFlag.equalsIgnoreCase("BODCheck"))
							{
								context.setAttribute("msg", "B");
							}
							return mapping.findForward("logout");
						}
						logger.info("In updateStateDetails---------");  
						
						CommonMasterBussinessSessionBeanRemote bp = (CommonMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CommonMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				     
				        boolean status=bp.updateStateData(stateMasterVo);
				        String sms="";
				        if(status){
				        	sms="M";
							request.setAttribute("sms",sms);
							request.setAttribute("editVal", "editVal");
						}
						else{
							sms="E";
							request.setAttribute("sms",sms);
							ArrayList<StateMasterVo> list =new ArrayList<StateMasterVo>();
							list.add(stateMasterVo);
							logger.info("In openEditState list"+ list.size());
							
							request.setAttribute("editVal", "editVal");
							request.setAttribute("list", list);
							request.setAttribute("status", stateMasterVo.getStateStatus());
							request.setAttribute(" unionterritory", stateMasterVo.getUnionterritory());							
						}
				        //stateMasterVo.setStateId(request.getParameter("StateId"));
						logger.info("In updateStatetDetails---status-----"+stateMasterVo.getStateStatus());
						logger.info("in updateStateDetails ------description-------"+stateMasterVo.getStateDes());
						logger.info("in updateStateDetails -----unionterritory-------"+stateMasterVo.getUnionterritory());						
						        
				        return mapping.getInputForward();
				      
						
					}
					
	}