/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.login.action;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import com.cm.vo.ManualAdviceCreationVo;
import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.login.dao.LoginDao;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 11-04-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class SaveNewBusinessDate extends DispatchAction {
	private static final Logger logger = Logger.getLogger(SaveNewBusinessDate.class.getName());	

	
	
	
	
	public ActionForward saveNewBusinessDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) 
			throws Exception {
		    HttpSession session =  request.getSession();
		    LoginDao dao=(LoginDao)DaoImplInstanceFactory.getDaoImplInstance(LoginDao.IDENTITY);
		    logger.info("Implementation class: "+dao.getClass());
			logger.info("In saveNewBusinessDate........................... ");
		
			UserObject userobj=(UserObject)session.getAttribute("userobject");
		    String userId=userobj.getUserId();
		    int companyId = userobj.getCompanyId();
		    userId=CommonFunction.checkNull(userId);
			
			boolean flag=false;
			
			Object sessionId = session.getAttribute("sessionID");
			//for check User session start
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}

			ManualAdviceCreationVo manualVo = new ManualAdviceCreationVo();
			manualVo.setMakerId(""+userId);
			manualVo.setMakerDate(userobj.getBusinessdate());
			manualVo.setCompanyId(companyId);
			if(request.getParameter("newBusinessDate")!=null)
			{
				manualVo.setNewBusinessDate(request.getParameter("newBusinessDate"));
			}
			logger.info("new business date .......................... "+manualVo.getNewBusinessDate());
			String check = dao.checkForBusinessDateOpen(manualVo);
			if(check.equalsIgnoreCase("S"))
			{
				logger.info("true.....................");
				flag=dao.saveNewBusinessDate(manualVo);
				if(flag)
				{
					request.setAttribute("sms", "S");
					return mapping.getInputForward();
				}
				
			}
				request.setAttribute("sms", "E");
				logger.info("error msg .............................. "+check.toString());
				request.setAttribute("errorMsg", check.toString());
			return mapping.getInputForward();
	}
}