/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.login.action;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ResourceBundle;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.validator.DynaValidatorForm;

import com.VO.checkAdminVo;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.login.dao.LoginDao;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 11-04-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class CheckAdminPwd extends Action {
	private static final Logger logger = Logger.getLogger(CheckAdminPwd.class.getName());	
	ResourceBundle resource = ResourceBundle.getBundle("com.yourcompany.struts.utill");
	String dateFormatWithTime=resource.getString("lbl.dateWithTimeInDao");
	String dateFormat=resource.getString("lbl.dateInDao");
	String dbType=resource.getString("lbl.dbType");
	String dbo=resource.getString("lbl.dbPrefix");
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception
		{
		
		HttpSession session = request.getSession();
		logger.info("In CheckAdminPwd........................... ");
		
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
			userId=userobj.getUserId();
			bDate=userobj.getBusinessdate();;
		}
	   
	
		boolean flag=false;
		
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		DynaValidatorForm AdminPwdDynaValidatorForm = (DynaValidatorForm) form;
		checkAdminVo vo=new checkAdminVo();
	    org.apache.commons.beanutils.BeanUtils.copyProperties(vo, AdminPwdDynaValidatorForm);
		//String adminPwd="";
		//if(request.getParameter("adminPwd")!=null)
		//{
		//	adminPwd=request.getParameter("adminPwd");
		//}
	    LoginDao dao=(LoginDao)DaoImplInstanceFactory.getDaoImplInstance(LoginDao.IDENTITY);
	    logger.info("Implementation class: "+dao.getClass());
		
		
		flag = dao.adminPwdCheck(vo.getAdminPwd());
		
		if(!flag)
		{
			session.removeAttribute("maxBusinessDate");
			request.setAttribute("sms", "E");
			return mapping.getInputForward();
		}
		else
		{
			StringBuilder query = new StringBuilder();
			query.append("select ");
			query.append(dbo);
			query.append("date_format(max(CURRENT_BUSINESS_DATE),'%d-%m-%Y') from business_date_change_hst ");
			//String query="select date_format(max(CURRENT_BUSINESS_DATE),'%d-%m-%Y') from business_date_change_hst";
			logger.info("Query to check max business date from business_date_change_hst table  Query  :   "+query.toString());
			String maxBusinessDate = ConnectionDAO.singleReturn(query.toString());			
			if(maxBusinessDate!=null && !maxBusinessDate.equalsIgnoreCase(""))
			{
				try 
				{  
					 DateFormat formatter = new SimpleDateFormat("dd-MM-yyyy"); 
					 Date maxbus =(Date)formatter.parse(maxBusinessDate);  
					 Date curbus=(Date)formatter.parse(bDate);  
					 logger.info("maxbus.compareTo(curbus)   :  "+maxbus.compareTo(curbus));
					 if(maxbus.compareTo(curbus)<0)
						 session.setAttribute("maxBusinessDate", bDate);
					 else
						 session.setAttribute("maxBusinessDate", maxBusinessDate);
				}
				catch (ParseException e)
				{System.out.println("Exception :"+e);  }  				
			}
			else
			{
				session.setAttribute("maxBusinessDate", bDate);
			}
		}
		logger.info("flag :::::::::::: "+flag);
		return mapping.findForward("success");
	}
}