	/*
		 * Generated by MyEclipse Struts
		 * Template path: templates/java/JavaClass.vtl
		 */
package com.cm.actions;

import java.util.ArrayList;



import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.CreditProcessingMasterBussinessSessionBeanRemote;
import com.cm.dao.CreditManagementDAO;
import com.cm.vo.LoanDetailForCMVO;
import com.connect.CommonFunction;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.vo.ProductMasterVo;
import com.connect.DaoImplInstanceFactory;
		/** 
		 * MyEclipse Struts
		 * Creation date: 04-29-2011
		 * 
		 * XDoclet definition:
		 * @struts.action validate="true"
		 */
		public class SblGblAuthorBehindAction extends Action {
			private static final Logger logger = Logger.getLogger(SblGblAuthorBehindAction.class.getName());
			public ActionForward execute(ActionMapping mapping, ActionForm form,
					HttpServletRequest request, HttpServletResponse response) throws Exception {
				ServletContext context = getServlet().getServletContext();
				logger.info("In SBLMasterBehindAction.........");
				HttpSession session = request.getSession();
				boolean flag=false;
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				Object sessionId = session.getAttribute("sessionID");
				//for check User session start
				String strFlag="";	
				String userId="";
				String bDate="";
				if(userobj!=null)
				{
						userId=userobj.getUserId();
						bDate=userobj.getBusinessdate();
				}
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
			
				CreditProcessingMasterBussinessSessionBeanRemote cpm = (CreditProcessingMasterBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(CreditProcessingMasterBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
				  
				  logger.info("current page link .......... "+request.getParameter("d-49520-p"));
					
					int currentPageLink = 0;
					if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0"))
					{
						currentPageLink=1;
					}
					else
					{
						currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
					}
					
					logger.info("current page link ................ "+request.getParameter("d-49520-p"));
					if(CommonFunction.checkNull(request.getAttribute("flag")).toString().equalsIgnoreCase("yes")){
						request.setAttribute("sms","No");
					}
					CreditManagementDAO dao=(CreditManagementDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditManagementDAO.IDENTITY);
					ArrayList<LoanDetailForCMVO> list=dao.searchSblAuthor(userId);
					session.setAttribute("userIdLoan", userId);
					request.setAttribute("list", list);
					request.setAttribute("totalRecordSize", list.size());
			        return mapping.findForward("success");
	

	}
}