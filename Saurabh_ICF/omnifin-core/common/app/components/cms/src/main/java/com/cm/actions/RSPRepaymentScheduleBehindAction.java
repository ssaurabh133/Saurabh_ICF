/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cm.actions;



import org.apache.struts.action.Action;
import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.cm.dao.LoanInitiationDAO;
import com.cm.vo.CommonLoanVo;
import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.cm.vo.InstallmentPlanForCMVO;
import com.connect.ConnectionDAO;
import com.cp.vo.RepayScheduleVo;

/** 
 * MyEclipse Struts
 * Creation date: 05-20-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RSPRepaymentScheduleBehindAction extends Action {
	private static final Logger logger = Logger.getLogger(RSPRepaymentScheduleBehindAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception 
	{
		HttpSession session = request.getSession();
		//boolean flag=false;

		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId=null;
		//String bgDate=null;
		if(userobj!=null)
		{
			userId=userobj.getUserId();
			//bgDate=userobj.getBusinessdate();  
		}else{
			logger.info(" in execute method of RSPRepaymentScheduleBehindAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag=null;	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj 
		
		
		String customerRSPId="";				
		String loanId = "";
		boolean result=false;
		if(session.getAttribute("loanId")!=null)
			loanId=session.getAttribute("loanId").toString();
		else if(session.getAttribute("maxIdInCM")!=null)
			loanId=session.getAttribute("maxIdInCM").toString();
		else if(request.getParameter("loanId")!=null)
			loanId=request.getParameter("loanId");
		
		
		if(session.getAttribute("customerRSPId")!=null)
			customerRSPId=session.getAttribute("customerRSPId").toString();

		
		LoanInitiationDAO dao=(LoanInitiationDAO)DaoImplInstanceFactory.getDaoImplInstance(LoanInitiationDAO.IDENTITY);
		logger.info("Implementation class: "+dao.getClass()); 

		if((loanId!=null && !loanId.equalsIgnoreCase("")))
		{
			
			String resultproc=dao.generateRSPRepySchedule(loanId,customerRSPId,userId);
			if(!CommonFunction.checkNull(resultproc).equalsIgnoreCase("S"))
			{					
				request.setAttribute("procval", resultproc);
			}
			else
			{
				ArrayList repShedule=dao.getRSPRepaySched(loanId,customerRSPId);
				if(repShedule.size()>0)
				{
					RepayScheduleVo vo=(RepayScheduleVo)repShedule.get(0);
					String effectiveRate =vo.getEffectiveRate();
					request.setAttribute("effectiveRate", effectiveRate);	
				request.setAttribute("repShedule", repShedule);
				}
				
			}
			
			
//			ArrayList loanDetail=dao.getLoanDetailForRepaymenTSchedule(loanId);
//			if(loanDetail.size()>0){
//				
//				
//				loanDetail=dao.GenerateRepaymenTScheduleForRSP(loanDetail);
//				
//				if(loanDetail.size()>0){
//					
//					result	=dao.saveRSPRepaymentSchdule(loanDetail);
//					
//				}
//				
//				
//			}



			
		}
		
		session.setAttribute("repaymentCheck","Y");
		return mapping.findForward("GenerateRepayment");
	}
}