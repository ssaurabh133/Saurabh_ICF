/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.cm.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.cm.dao.PartPrePaymentDAO;
import com.cm.vo.PartPrePaymentMakerVO;
import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 10-01-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class PartPrePaymentMakerDispatchAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(PartPrePaymentMakerDispatchAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward savePartPrePaymentMaker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		logger.info("Inside ......savePartPrePaymentMaker");
		
		HttpSession session =  request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String makerId="";
		String makerDate ="";
		if(userobj!=null){
			makerId= userobj.getUserId();
			makerDate=userobj.getBusinessdate();
		}else{
			logger.info("here in savePartPrePaymentMaker method of PartPrePaymentMakerDispatchAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		String reschId="";

	    
	    DynaValidatorForm PartPrePaymentMakerDynaValidatorForm = (DynaValidatorForm)form;
		PartPrePaymentMakerVO vo = new PartPrePaymentMakerVO();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,PartPrePaymentMakerDynaValidatorForm);
		vo.setMakerId(makerId);
		vo.setMakerDate(makerDate);		
		//CreditManagementDAO service = new CreditManagementDAOImpl();	
		PartPrePaymentDAO service=(PartPrePaymentDAO)DaoImplInstanceFactory.getDaoImplInstance(PartPrePaymentDAO.IDENTITY);
		logger.info("Implementation class: "+service.getClass());
//		if(vo.getPartPaymentParameter().equalsIgnoreCase("T"))
//			vo.setLbxInstlNo("0");
		reschId=service.savePartPrePaymentData(vo);
		if(!reschId.equalsIgnoreCase("") && reschId.length()<10)
		{
			ArrayList<PartPrePaymentMakerVO> partPrePaymentData = service.selectPartPrePaymentData(vo.getLbxLoanNoHID(),reschId,"P");
			request.setAttribute("partPrePaymentData", partPrePaymentData);
			request.setAttribute("reschId",reschId);
			request.setAttribute("message","S");
			
			
			
			PartPrePaymentMakerVO makerVO =null;
			String instType = "";
			if(partPrePaymentData!=null && partPrePaymentData.size()>0)
			{
				makerVO = (PartPrePaymentMakerVO)partPrePaymentData.get(0);
			 instType = CommonFunction.checkNull(makerVO.getInstType());
			 ArrayList genericMasterList =null;
			 if(instType.equalsIgnoreCase("E") ||instType.equalsIgnoreCase("R") || instType.equalsIgnoreCase("G"))
			  genericMasterList = service.getGenericMasterInfo("RESCHEDULE_TYPE1");
			 else if(instType.equalsIgnoreCase("P") ||instType.equalsIgnoreCase("Q") || instType.equalsIgnoreCase("S"))
				 genericMasterList = service.getGenericMasterInfo("RESCHEDULE_TYPE2");
			 
			request.setAttribute("genericMasterList", genericMasterList);
			}
			
		}
		else
		{
			request.setAttribute("partPrepaymentNew","partPrepaymentNew");
			request.setAttribute("message","E");
			request.setAttribute("msg",reschId);
		}
		return mapping.findForward("savePartPrePaymentMaker");
	}
	
	public ActionForward updatePartPrePaymentMaker(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		logger.info("Inside......updatePartPrePaymentMaker");
		
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String makerId="";
		String makerDate ="";
		if(userobj!=null){
			makerId= userobj.getUserId();
			makerDate=userobj.getBusinessdate();
		}else{
			logger.info("here in updatePartPrePaymentMaker method of PartPrePaymentMakerDispatchAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}

		String type=CommonFunction.checkNull(request.getParameter("type"));
		logger.info("Type: "+type);

	    
	    String retStr="";
	    DynaValidatorForm PartPrePaymentMakerDynaValidatorForm = (DynaValidatorForm)form;
	    PartPrePaymentMakerVO vo = new PartPrePaymentMakerVO();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,PartPrePaymentMakerDynaValidatorForm);
		vo.setMakerId(makerId);
		vo.setMakerDate(makerDate);	
		logger.info("reschId from Dispatch Action: "+vo.getReschId());
		//CreditManagementDAO service = new CreditManagementDAOImpl();
		PartPrePaymentDAO service=(PartPrePaymentDAO)DaoImplInstanceFactory.getDaoImplInstance(PartPrePaymentDAO.IDENTITY);
		logger.info("Implementation class: "+service.getClass());
//		if(vo.getPartPaymentParameter().equalsIgnoreCase("T"))
//			vo.setLbxInstlNo("0");
		String reschId="";
		reschId=service.updatePartPrePaymentData(vo,type);
		logger.info("Msg from proc: "+reschId);
		logger.info("Length from proc: "+reschId.length());
		if(!reschId.equalsIgnoreCase("") && reschId.length()<10 && type.equalsIgnoreCase("P"))
		{
			ArrayList<PartPrePaymentMakerVO> partPrePaymentData = service.selectPartPrePaymentData(vo.getLbxLoanNoHID(),vo.getReschId(),"P");
			request.setAttribute("partPrePaymentData", partPrePaymentData);
			request.setAttribute("reschId",vo.getReschId());
			request.setAttribute("message","S");
			// Added By rahul papneja|09112017
			//request.setAttribute("maxInstallmentDate",maxInstallmentDate);
			retStr="savePartPrePaymentMaker";
			
			
			
			PartPrePaymentMakerVO makerVO =null;
			String instType = "";
			if(partPrePaymentData!=null && partPrePaymentData.size()>0)
			{
				makerVO = (PartPrePaymentMakerVO)partPrePaymentData.get(0);
			 instType = CommonFunction.checkNull(makerVO.getInstType());
			 ArrayList genericMasterList =null;
			 if(instType.equalsIgnoreCase("E") ||instType.equalsIgnoreCase("R") || instType.equalsIgnoreCase("G"))
			  genericMasterList = service.getGenericMasterInfo("RESCHEDULE_TYPE1");
			 else if(instType.equalsIgnoreCase("P") ||instType.equalsIgnoreCase("Q") || instType.equalsIgnoreCase("S"))
				 genericMasterList = service.getGenericMasterInfo("RESCHEDULE_TYPE2");
			 
			request.setAttribute("genericMasterList", genericMasterList);
			}
		}
		if(!reschId.equalsIgnoreCase("") && reschId.length()<10 && type.equalsIgnoreCase("F"))
		{
			ArrayList<PartPrePaymentMakerVO> partPrePaymentData = service.selectPartPrePaymentData(vo.getLbxLoanNoHID(),vo.getReschId(),"P");
			request.setAttribute("partPrePaymentData", partPrePaymentData);
			request.setAttribute("message","F");
			request.setAttribute("partPrePaymetMakerSearch","partPrePaymetMakerSearch");
			session.removeAttribute("realizeFlag");
			retStr="savePartPrePaymentMaker";
		}
		else if(!reschId.equalsIgnoreCase("") && reschId.length()>10)
		{
			ArrayList<PartPrePaymentMakerVO> partPrePaymentData = service.selectPartPrePaymentData(vo.getLbxLoanNoHID(),vo.getReschId(),"P");
			request.setAttribute("partPrePaymentData", partPrePaymentData);
			request.setAttribute("reschId",vo.getReschId());
			request.setAttribute("message","E");
			request.setAttribute("msg",reschId);
			
			retStr="savePartPrePaymentMaker";
		}
		logger.info("retStr: "+retStr);
		return mapping.findForward(retStr);
	}
	public ActionForward deletePartPrePaymentMaker(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) throws Exception 
	{
		logger.info("Inside......deletePartPrePaymentMaker()");
		
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String makerId="";
		String makerDate ="";
		if(userobj!=null){
			makerId= userobj.getUserId();
			makerDate=userobj.getBusinessdate();
		}else{
			logger.info("here in deletePartPrePaymentMaker method of PartPrePaymentMakerDispatchAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		//for check User session start
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		boolean status = false;
		
	    DynaValidatorForm PartPrePaymentMakerDynaValidatorForm = (DynaValidatorForm)form;
	    PartPrePaymentMakerVO vo = new PartPrePaymentMakerVO();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo,PartPrePaymentMakerDynaValidatorForm);
		String reschId=CommonFunction.checkNull(vo.getReschId());
		String loanId=CommonFunction.checkNull(vo.getLbxLoanNoHID());
		PartPrePaymentDAO service=(PartPrePaymentDAO)DaoImplInstanceFactory.getDaoImplInstance(PartPrePaymentDAO.IDENTITY);
		logger.info("Implementation class: "+service.getClass());
		logger.info("in deletePartPrePaymentMaker()  reshId  : "+reschId);
		logger.info("in deletePartPrePaymentMaker()  reshId  : "+loanId);
		ArrayList<PartPrePaymentMakerVO> partPrePaymentData=new ArrayList();
		//partPrePaymentData = service.selectPartPrePaymentData(vo.getLbxLoanNoHID(),vo.getReschId(),"P");
		request.setAttribute("partPrePaymentData", partPrePaymentData);
		if(loanId.trim().length()!=0 && reschId.trim().length()!=0)
		status=service.deletePartPaymentData(loanId,reschId);		
		if(status)
			request.setAttribute("delete","delete");
		else
			request.setAttribute("notDelete","notDelete");
	
		return mapping.findForward("savePartPrePaymentMaker");
	}
}