/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;


import java.util.ArrayList;
import java.util.logging.Logger;


import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import com.connect.CommonFunction;
import com.connect.DaoImplInstanceFactory;
import com.cp.dao.CreditProcessingDAO;
import com.lockRecord.action.LockRecordCheck;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 04-21-2011
 * displayPhotoUploadScreen
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class DisplayFormPage extends DispatchAction 
{
	private static final Logger logger = Logger.getLogger(DisplayFormPage.class.getName());
	public ActionForward displayCorporateForms(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response)throws Exception
	{
		logger.info("In displayCorporateForms() of DisplayFormPage");
		logger.info("In DisplayFormPage:displayCorporateForms  "+request.getParameter("updateFlag"));
		logger.info("In DisplayFormPage:displayCorporateForms  " + request.getParameter("existingCustomer"));
		boolean flag =false;
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");			
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		 if (request.getParameter("existingCustomer") != null)
		    {
		      logger.info("existingCustomer ................ " + request.getParameter("existingCustomer"));
		      session.setAttribute("existingCustomer", request.getParameter("existingCustomer"));
		    }
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
		logger.info("asdfghjk:::"+funid);
		if (funid==8000309 || funid==8000310){
			logger.info("chuhiya:::::::::");
		    session.setAttribute("underWriter", "underWriter");	
			
		}
		
		String codeId = request.getParameter("hideId");
		session.setAttribute("corporateId", codeId);
		session.setAttribute("idividualId", codeId);
		String status=request.getParameter("recStatus");
		if(status != null)
		{
			if(status.trim().equalsIgnoreCase("A"))
			{
				String statusCase=(String)session.getAttribute("statusCase");
				if(statusCase==null)
					session.setAttribute("statusCase","Approved");
			}
			else
				session.removeAttribute("statusCase");
		}
		session.setAttribute("recStatus", status);
		
		session.removeAttribute("strParentOption");
		session.removeAttribute("pParentGroup");
		session.removeAttribute("updateInMaker");
		session.removeAttribute("update");
		session.removeAttribute("insert");
		
		String gcdReq=(String)session.getAttribute("gcdReq");
		if(gcdReq!=null)
			session.removeAttribute("gcdReq");
		gcdReq=(String)request.getParameter("gcdReq");
		if(gcdReq!=null)
			session.setAttribute("gcdReq",gcdReq);
		
		if(request.getParameter("new")!=null)
		{
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			} 			
				
			session.setAttribute("new",request.getParameter("new"));
			
			session.removeAttribute("idividualId");
			session.removeAttribute("operation");
			session.removeAttribute("corporateId");
			session.removeAttribute("individualInfo");
			session.removeAttribute("addressInfo");
			session.removeAttribute("statesList");
			session.removeAttribute("detailList");
			session.removeAttribute("citiesList");
			session.removeAttribute("stakeDetails");
			session.removeAttribute("ratingList");
			session.removeAttribute("updateList");
			session.removeAttribute("briefStake");
			session.removeAttribute("creditRatingDetail");
			session.removeAttribute("briefAddr");
			session.removeAttribute("approve");
			session.removeAttribute("update");
			session.removeAttribute("statusCase");
			session.removeAttribute("underWriter");
			session.removeAttribute("businessActivityDetails");
			
			if((session.getAttribute("corporate")!=null))
					return mapping.findForward("corporate");
			else 
					return mapping.findForward("individual");
		}
		else
		{			
			session.removeAttribute("new");
			String cusType="";
			
			if(CommonFunction.checkNull(request.getParameter("updateFlag")).equalsIgnoreCase("notEdit") || (session.getAttribute("underWriterViewData")!=null && session.getAttribute("underWriterViewData").toString().equalsIgnoreCase("underWriterViewData")) || funid==8000309 || funid==8000310)
			{
				logger.info("In if updateFlag 22222222 ");
			    session.setAttribute("underWriter", "underWriter");		    
			    
			}
			else 
			{				
				if(session.getAttribute("approve")==null)
				{
						logger.info("In else updateFlag 22222222 ");
						session.removeAttribute("underWriter");
						session.removeAttribute("approve");
				}					
			}
			if(!(CommonFunction.checkNull(request.getParameter("updateFlag")).equalsIgnoreCase("notEdit") && session.getAttribute("underWriterViewData")==null) && session.getAttribute("DealCap")!=null)
			{
				session.removeAttribute("underWriter");
				session.removeAttribute("approve");
			}			
			if(request.getParameter("cType")!=null)
			{				
				cusType = request.getParameter("cType");
				session.setAttribute("cusType", cusType);
			}
			if(request.getParameter("applType")!=null)
			{
				logger.info("in app type *8*************************************");
				session.removeAttribute("update");
				session.removeAttribute("approve");
				session.removeAttribute("individualInfo");
				session.removeAttribute("detailList");
				session.setAttribute("applType", request.getParameter("applType"));
			}
			if(request.getParameter("pageStatuss")!=null)
			{
				session.removeAttribute("update");
				session.removeAttribute("approve");				
				session.setAttribute("pageStatuss", request.getParameter("pageStatuss"));
			}

			logger.info("pageStatuss.............................. "+request.getParameter("pageStatuss"));
			String hideID="";		
			if(request.getParameter("hideId")!=null && session.getAttribute("pageStatuss")!=null)
			{
				session.removeAttribute("update");
				session.removeAttribute("individualInfo");
				logger.info("********Hide ID1111*********"+request.getParameter("hideId"));
				hideID = request.getParameter("hideId");
				session.setAttribute("corporateId", hideID);
				session.setAttribute("idividualId", hideID);				
			}			
			if(request.getParameter("hideId")!=null && session.getAttribute("pageInfo")!=null || request.getParameter("hideId")!=null && request.getParameter("operation").equalsIgnoreCase("update"))
			{
				session.removeAttribute("update");
				logger.info("********Hide ID*********"+request.getParameter("hideId"));
				hideID = request.getParameter("hideId");
				session.setAttribute("corporateId", hideID);
				session.setAttribute("idividualId", hideID);
			}			
			if(request.getParameter("updateFlag")!=null)
			{
				logger.info("updateFlag ................ "+request.getParameter("updateFlag"));
				session.setAttribute("updateFlag", request.getParameter("updateFlag"));
			}			
			if(request.getParameter("hideId")!=null && request.getParameter("updateFlag")!=null)
			{	
				if(session.getAttribute("underWriter")!=null && session.getAttribute("underWriter").toString().equalsIgnoreCase("underWriter"))
				{
					logger.info("Again set");
					session.setAttribute("approve", "approve");
				}
				else
				{
					session.removeAttribute("underWriter");
					session.setAttribute("update", "update");
				}				
				session.removeAttribute("pageStatuss");				
				logger.info("********Hide ID2222*********"+request.getParameter("hideId"));
				hideID = request.getParameter("hideId");				
				logger.info("check Update for credit Processing................."+request.getParameter("hideId"));
				session.setAttribute("corporateId", hideID);
				session.setAttribute("idividualId", hideID);				
			}
			String Id="";
			if(request.getParameter("hideId")!=null)
				Id=request.getParameter("hideId");
			
			logger.info("function id is ........................................"+session.getAttribute("functionId"));
					
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			} 
							
			if(Id!=null && !Id.equalsIgnoreCase(""))
			{
				if(context!=null)
				{
					//flag = LockRecordCheck.lockCheck(userId,functionId,Id,context);
					if(CommonFunction.checkNull(request.getParameter("updateFlag")).equalsIgnoreCase("notEdit") || (session.getAttribute("underWriterViewData")!=null && session.getAttribute("underWriterViewData").toString().equalsIgnoreCase("underWriterViewData")))
					{
						logger.info("Flag in view state ........................................ "+flag);
						flag =true;
					}
					else
					{	
						flag = LockRecordCheck.lockCheck(userId,functionId,Id,context);
					}
					logger.info("Flag ........................................ "+flag);
					logger.info("id value **************************************** "+Id);
					if(!flag)
					{
						logger.info("Record is Locked");			
						request.setAttribute("sms", "Locked");
						request.setAttribute("recordId", Id);
						return mapping.getInputForward();
					}
				}
			}
			// START BY PRASHANT
			if(CommonFunction.checkNull(functionId).equalsIgnoreCase("2000311"))
			{
				session.setAttribute("CUA", "CUA");
				logger.info("Customer Update Author functionId:CUA "+functionId);
			}
			// END BY PRASHANT
			String statusCustEntry = CommonFunction.checkNull(request.getParameter("status"));
			String showCE = CommonFunction.checkNull(session.getAttribute("showCE"));
			logger.info("statusCustEntry:::::::::: "+statusCustEntry);
			logger.info("showCE::::::::::::::::::: "+showCE);
			if((session.getAttribute("corporate")!=null) || cusType.equals("C"))
			{
				if(session.getAttribute("pageStatuss")!=null)
					session.removeAttribute("corporateId");
				session.removeAttribute("individualInfo");
				session.removeAttribute("idividualId");
				if(statusCustEntry.equalsIgnoreCase("CE") && showCE.equalsIgnoreCase("Y"))
					session.setAttribute("custEntryU", "CE");
				else
					session.removeAttribute("custEntryU");
					
				return mapping.findForward("corporate");
			}
			else 
			{		
				if(session.getAttribute("pageStatuss")!=null)
					session.removeAttribute("idividualId");
				session.removeAttribute("corporateId");
				return mapping.findForward("individual");
			}
		
		}
	}
	
	
	public ActionForward displayPhotoUploadScreen(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response)throws Exception
	{
		logger.info("In displayCorporateForms() of displayPhotoUploadScreen");
		logger.info("displayPhotoUploadScreen "+request.getParameter("customerId"));
		boolean flag =false;
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");			
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String loanId="";
		if(session.getAttribute("loanId") != null) {
			loanId = session.getAttribute("loanId").toString();
		} else if (session.getAttribute("maxIdInCM") != null) {
			loanId = session.getAttribute("maxIdInCM").toString();
		}
		
		
	String dealId = "";

	if (session.getAttribute("dealId") != null) {

		dealId = session.getAttribute("dealId").toString();
	} else if (session.getAttribute("maxId") != null) {
		dealId = session.getAttribute("maxId").toString();
	}
		
		String customerId=request.getParameter("customerId");
		String mode=request.getParameter("mode");
		request.setAttribute("customerId",customerId);
		
		CreditProcessingDAO service=(CreditProcessingDAO)DaoImplInstanceFactory.getDaoImplInstance(CreditProcessingDAO.IDENTITY);
        logger.info("Implementation class: "+service.getClass());
		int functionId=0;
		String source="";
		if(session.getAttribute("functionId")!=null)
		{
			functionId= Integer.parseInt(session.getAttribute("functionId").toString());
		}
		if((functionId==4000106 || functionId==4000111 || functionId==4001231)&&(!CommonFunction.checkNull(loanId).equalsIgnoreCase("")) )
		{
			source="gcd_customer_m";
		}
		else if((functionId==4000123 || functionId==4000122) && (!CommonFunction.checkNull(loanId).equalsIgnoreCase("")))
		{
			source="gcd_customer_m_edit";
		}
		else if((!CommonFunction.checkNull(dealId).equalsIgnoreCase("") && functionId==4001231) || (!CommonFunction.checkNull(dealId).equalsIgnoreCase("")))
		{
			source="cr_deal_customer_m";
		}
        ArrayList uploadedDocList = service.getUploadCustomerPicData(customerId,source);
		if(uploadedDocList.size()>0){
		 request.setAttribute("uploadedDocList", uploadedDocList);	
			}	
		if(CommonFunction.checkNull(mode).equalsIgnoreCase("ViewMode")){
			 request.setAttribute("ViewMode", "ViewMode");
		}
	
		return mapping.findForward("photoUplaodScreen");
}
}