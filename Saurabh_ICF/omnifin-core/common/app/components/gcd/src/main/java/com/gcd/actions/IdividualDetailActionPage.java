/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;

import java.util.ArrayList;


import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.validator.DynaValidatorForm;
import com.VO.CustomerSaveVo;

import com.connect.CommonFunction;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.gcd.VO.CorporateDetailsVO;
import com.gcd.VO.ShowCustomerDetailVo;


import com.gcd.dao.CorporateDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.tabDependencyCheck.RefreshFlagValueInsert;
import com.tabDependencyCheck.RefreshFlagVo;

/** 
 * MyEclipse Struts
 * Creation date: 02-18-2011
 * 
 * XDoclet definition:
 * @struts.action path="/idividualDetailActionPage" name="IdividualDetailDynaValidatorForm" input="/JSP/gcdJSP/individualDetail.jsp" scope="request" validate="true"
 */
public class IdividualDetailActionPage extends Action {
	private static final Logger logger = Logger.getLogger(IdividualDetailActionPage.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response)throws Exception 
	{
		logger.info("in execute() of IdividualDetailActionPage");
		HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		logger.info("user obj value is "+userobj);
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
		}else{
				logger.info("here execute method of IdividualDetailActionPage action the session is out----------------");
				return mapping.findForward("sessionOut");
		}
		DynaValidatorForm IdividualDetailDynaValidatorForm = (DynaValidatorForm) form;
			
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		logger.info("strFlag .IdividualDetailActionPage............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
				return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
		
		CorporateDetailsVO cv = new CorporateDetailsVO();
		org.apache.commons.beanutils.BeanUtils.copyProperties(cv, IdividualDetailDynaValidatorForm);
		cv.setMakerId(userId);
		cv.setMakerDate(bDate);
		String reson=cv.getReasonForBlackListed();
		
		
		logger.info("getReasonForBlackListed   :  "+reson);
		int id=0;
		String idividualId="";
		String panCheck=null;
		int panNo=0;
	    String uidCheck = null;
		 int uidNo = 0;
		 String voterCheck = null;
		 int voter = 0;
		 String passportCheck = null;
		 int passport = 0;
		 String dlCheck = null;
		 int dl = 0;
		 String nameCheck=null;
			int name=0;
		String statusCase="";
		String updateFlag="";
		String existingCustomer = "";
		String applType="";
		String dealId = "";
		String pageStatuss="";
		if(session.getAttribute("pageStatuss")!=null && session.getAttribute("applType")!=null)
		{
			pageStatuss=session.getAttribute("pageStatuss").toString();
			applType=session.getAttribute("applType").toString();
		}
		logger.info("In IdividualDetailActionPage idividualId: "+session.getAttribute("idividualId"));
		String recStatus ="";
		String updateInMaker="";	
		if(session.getAttribute("idividualId")!=null)
		{
			idividualId=session.getAttribute("idividualId").toString();
			if(session.getAttribute("recStatus")!=null)
				recStatus=session.getAttribute("recStatus").toString();
			id=Integer.parseInt(session.getAttribute("idividualId").toString()); 
		}
	    if(request.getParameter("customerStatus")!=null)
			 cv.setPagestatus(request.getParameter("customerStatus"));
		if(session.getAttribute("statusCase")!=null)
			statusCase = session.getAttribute("statusCase").toString();
		if(session.getAttribute("updateFlag")!=null)
			 updateFlag=(String) session.getAttribute("updateFlag");
		  if (session.getAttribute("existingCustomer") != null)
		      existingCustomer = (String)session.getAttribute("existingCustomer");
		if(session.getAttribute("dealId")!=null)
		{	
				dealId=session.getAttribute("dealId").toString();
		}
		else if(session.getAttribute("maxId")!=null)
		{
			dealId=session.getAttribute("maxId").toString();
		}
		cv.setDealId(dealId);
		//logger.info("In Individual Detail Action execute id " +dealId);  
	    String loanId = "";
		
		if(session.getAttribute("loanId")!=null)
		{
			
			loanId= session.getAttribute("loanId").toString();
		}
		else if (session.getAttribute("maxIdInCM")!=null) 
		{
			loanId =  session.getAttribute("maxIdInCM").toString();
		}
		if(!CommonFunction.checkNull(dealId).equalsIgnoreCase(""))
			session.setAttribute("dealId", dealId);
		if(!CommonFunction.checkNull(loanId).equalsIgnoreCase(""))
			session.setAttribute("loanId", loanId);		//logger.info("In  loanId id " +loanId);  
		
		cv.setPassport("");
		cv.setVoterId("");
		//cv.setPan("");
		//cv.setAadhaar("");
		cv.setuIDAI("");
		cv.setOther("");
		cv.setDrivingLicense("");
		if(CommonFunction.checkNull(cv.getProofOfAddressDocument()).equalsIgnoreCase("PP")){
			cv.setPassport(cv.getProofOfAddressDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfAddressDocument()).equalsIgnoreCase("VIC")){
			cv.setVoterId(cv.getProofOfAddressDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfAddressDocument()).equalsIgnoreCase("PAN")){
			cv.setPan(cv.getProofOfAddressDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfAddressDocument()).equalsIgnoreCase("UID")){
			cv.setAadhaar(cv.getProofOfAddressDocumentNo());
			cv.setuIDAI(cv.getProofOfAddressDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfAddressDocument()).equalsIgnoreCase("OT")){
			cv.setOther(cv.getProofOfAddressDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfAddressDocument()).equalsIgnoreCase("DL")){
			cv.setDrivingLicense(cv.getProofOfAddressDocumentNo());
		}
		
		
		if(CommonFunction.checkNull(cv.getProofOfIdentityDocument()).equalsIgnoreCase("PP")){
			cv.setPassport(cv.getProofOfIdentityDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfIdentityDocument()).equalsIgnoreCase("VIC")){
			cv.setVoterId(cv.getProofOfIdentityDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfIdentityDocument()).equalsIgnoreCase("PAN")){
			cv.setPan(cv.getProofOfIdentityDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfIdentityDocument()).equalsIgnoreCase("UID")){
			cv.setAadhaar(cv.getProofOfIdentityDocumentNo());
			cv.setuIDAI(cv.getProofOfIdentityDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfIdentityDocument()).equalsIgnoreCase("OT")){
			cv.setOther(cv.getProofOfIdentityDocumentNo());
		}else if(CommonFunction.checkNull(cv.getProofOfIdentityDocument()).equalsIgnoreCase("DL")){
			cv.setDrivingLicense(cv.getProofOfIdentityDocumentNo());
		}
		CorporateDAO service=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+service.getClass());
		
		ArrayList  riskCategoryList= service.getriskCategoryList();
		session.setAttribute("riskCategoryList", riskCategoryList);
		
		
		//added by Virender
		logger.info("Virender");
		ArrayList alDeleteQuery = new ArrayList(1);
		String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
		logger.info("hunterQry "+ hunterQry);
		alDeleteQuery.add(hunterQry);
		boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
		hunterQry = null;
		//Virender changes end
		
		/*CorporateDAO service=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+service.getClass());*/
		//code added by neeraj
		String panCondition=service.getPanCondition();
		if(CommonFunction.checkNull(panCondition).trim().equalsIgnoreCase(""))
			panCondition="N";
		request.setAttribute("panCondition",panCondition);
		//neeraj space end
		String cusType="";
		String tableName="";
		if(session.getAttribute("cType")!=null)
			cusType=CommonFunction.checkNull(session.getAttribute("cType")).toString();
		   logger.info(""+cusType);
		if(session.getAttribute("updateInMaker")!=null)
			updateInMaker = session.getAttribute("updateInMaker").toString();
		if(id!=0)
		{
			
			 /*if ((request.getParameter("pan") != "") || (request.getParameter("aadhaar") != ""))
			    {*/
					String query="";
					logger.info("PageStatuss .............................. "+pageStatuss);
					if(updateInMaker!=null && !updateInMaker.equals(""))
						tableName="gcd_customer_m_temp";
					else 
					{
						
						if(pageStatuss!=null && pageStatuss.equals("fromLeads")||updateFlag!=null && updateFlag.equals("updateFlag"))
						{
							tableName="cr_deal_customer_m";
							 query = new StringBuilder().append("SELECT DEAL_EXISTING_CUSTOMER from cr_deal_customer_role where DEAL_CUSTOMER_ID=").append(id).append(" and deal_id=").append(dealId).toString();
							logger.info("in execute() of IdividualDetailActionPage Query : "+query);
						}
						else
						{
							 if ((statusCase != null) && (statusCase.length() > 0) && CommonFunction.checkNull(loanId).equalsIgnoreCase("")) {
						          tableName = "gcd_customer_m_temp";
						        }else{
							tableName="gcd_customer_m";
							String roleTable="cr_loan_customer_role";
							if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
							{
								tableName="gcd_customer_m_edit";
								roleTable="cr_loan_customer_role_edit";
							}
							  query = new StringBuilder().append("SELECT LOAN_EXISTING_CUSTOMER from ").append(roleTable).append(" where gcd_id=").append(id).append(" and loan_id=").append(loanId).toString();
							logger.info("in execute() of IdividualDetailActionPage Query : "+query);
						        }
						}
					}					
					String custStatus="";
					custStatus =  ConnectionDAO.singleReturn(query);
					logger.info("tableName"+ tableName);
					if(CommonFunction.checkNull(tableName).equalsIgnoreCase("gcd_customer_m_temp")){
						custStatus="N";
					}
					cv.setBypassDedupe(CommonFunction.checkNull(request.getParameter("bypassDedupe")));
					String byPassNameCheck=CommonFunction.checkNull(request.getParameter("byPassNameCheck"));
			        if(!byPassNameCheck.equalsIgnoreCase("C") && !cv.getBypassDedupe().equalsIgnoreCase("B")){
if(!CommonFunction.checkNull(dealId).equalsIgnoreCase("")){
	String qry1="select deal_customer_role_type from cr_deal_customer_role where deal_id='"+dealId+"' AND DEAL_CUSTOMER_ID='"+id+"' ";
	applType=ConnectionDAO.singleReturn(qry1);
}
if(!CommonFunction.checkNull(loanId).equalsIgnoreCase("")){
	String qry1="select LOAN_customer_role_type from cr_loan_customer_role where loan_id='"+dealId+"' AND GCD_ID='"+id+"' ";
	applType=ConnectionDAO.singleReturn(qry1);
}
			        	 if(CommonFunction.checkNull(applType).equalsIgnoreCase("COAPPL") || CommonFunction.checkNull(applType).equalsIgnoreCase("GUARANTOR")){
					            String query3 = "select count(1) from gcd_customer_m where CUSTOMER_DOB=STR_TO_DATE('"+cv.getIncorporationDate()+"','%d-%m-%Y') and CUSTOMER_FNAME='"+cv.getFirstName()+"' AND IFNULL(CUSTOMER_MNAME,'')='"+cv.getMiddleName()+"' AND CUSTOMER_LNAME='"+cv.getLastName()+"' and CUSTOMER_ID<>"+id;
					            logger.info(new StringBuilder().append("in execute() of IdividualDetailActionPage Query : ").append(query3).toString());
					            nameCheck = ConnectionDAO.singleReturn(query3);
					            }
			        	   if(nameCheck==null)
								name=0;
							else
								name=Integer.parseInt(nameCheck);
							logger.info("name :"+name);
			        }
				    if(!cv.getBypassDedupe().equalsIgnoreCase("B"))
				    {
				    	logger.info("************ inside if for check dedupe 1 for individual customer****************");
						if(custStatus!=null && custStatus.equalsIgnoreCase("N"))
						{
							   String query1 = new StringBuilder().append("select count(1) from gcd_customer_m where (CUSTMER_PAN='").append(cv.getPan()).append("' and CUSTMER_PAN<>'') and (customer_type='I' OR ifnull(customer_constitution,'')<>'PROPRIETOR') and CUSTOMER_ID<>").append(id).toString();
							logger.info("in execute() of IdividualDetailActionPage Query : "+query1);
							panCheck = ConnectionDAO.singleReturn(query1);
							String query2 = new StringBuilder().append("select count(1) from gcd_customer_m where (UID_NO='").append(cv.getAadhaar()).append("' and UID_NO<>'') and CUSTOMER_ID<>").append(id).toString();
				            logger.info(new StringBuilder().append("in execute() of IdividualDetailActionPage Query : ").append(query2).toString());
				            uidCheck = ConnectionDAO.singleReturn(query2);
				            
				            //Rohit changes starts for voterId,passport and DL validation
				            
				            String query3 = "select count(1) from gcd_customer_m where (VOTER_ID='"+cv.getVoterId()+"' and VOTER_ID<>'') and CUSTOMER_ID<>"+id;
				            logger.info("in execute() of IdividualDetailActionPage Query : "+query3);
				            voterCheck = ConnectionDAO.singleReturn(query3);
				            
				            String query4 =  "select count(1) from gcd_customer_m where (PASSPORT_NUMBER='"+cv.getPassport()+"' and PASSPORT_NUMBER<>'')  and CUSTOMER_ID<>"+id;
				            logger.info("in execute() of IdividualDetailActionPage Query : "+query4);
				            passportCheck = ConnectionDAO.singleReturn(query4);
				            
				            String query5 = "select count(1) from gcd_customer_m where (DRIVING_LICENSE='"+cv.getDrivingLicense()+"' and DRIVING_LICENSE<>'') and CUSTOMER_ID<>"+id;
				            logger.info("in execute() of IdividualDetailActionPage Query : "+query5);
				            dlCheck = ConnectionDAO.singleReturn(query5);
				           
						}
						else
						{
							 request.setAttribute("custStatus", "Y");
							/*String query1="select count(1) from gcd_customer_m where CUSTOMER_TYPE='I' and CUSTMER_PAN='"+cv.getPan()+"' and CUSTOMER_ID<>"+id;
							logger.info("in execute() of IdividualDetailActionPage Query : "+query1);
							panCheck = ConnectionDAO.singleReturn(query1);*/
						}												
						if(panCheck==null)
							
							panNo=0;
						else
							panNo=Integer.parseInt(panCheck);
						logger.info("panNo :"+panNo);
						
						  if (uidCheck == null)
					            uidNo = 0;
					          else
					            uidNo = Integer.parseInt(uidCheck);
					          logger.info(new StringBuilder().append("uidNo :").append(uidNo).toString());
					          
					          if (voterCheck == null)
					        	  voter = 0;
						          else
						            voter = Integer.parseInt(voterCheck);
						          logger.info(new StringBuilder().append("voter :").append(voter).toString());
					          
						          if (passportCheck == null)
						        	  passport = 0;
							          else
							        	  passport = Integer.parseInt(passportCheck);
							          logger.info(new StringBuilder().append("passport :").append(passport).toString());
							          
							          if (dlCheck == null)
							        	  dl = 0;
								          else
								        	  dl = Integer.parseInt(dlCheck);
								          logger.info(new StringBuilder().append("dl :").append(dl).toString());
					       
				    }else{
				    	logger.info("************ inside if for check dedupe 2 for individual customer****************");
						if(custStatus!=null && custStatus.equalsIgnoreCase("N"))
						{
							  /* String query1 = new StringBuilder().append("select count(1) from gcd_customer_m where (CUSTMER_PAN='").append(cv.getPan()).append("' and CUSTMER_PAN<>'') and CUSTOMER_ID<>").append(id).toString();
							logger.info("in execute() of IdividualDetailActionPage Query : "+query1);
							panCheck = ConnectionDAO.singleReturn(query1);*/
							String query2 = new StringBuilder().append("select count(1) from gcd_customer_m where (UID_NO='").append(cv.getAadhaar()).append("' and UID_NO<>'') and CUSTOMER_ID<>").append(id).toString();
				            logger.info(new StringBuilder().append("in execute() of IdividualDetailActionPage Query : ").append(query2).toString());
				            uidCheck = ConnectionDAO.singleReturn(query2);
				            
				            //Rohit changes starts for voterId,passport and DL validation
				            
				            String query3 = "select count(1) from gcd_customer_m where (VOTER_ID='"+cv.getVoterId()+"' and VOTER_ID<>'') and CUSTOMER_ID<>"+id;
				            logger.info("in execute() of IdividualDetailActionPage Query : "+query3);
				            voterCheck = ConnectionDAO.singleReturn(query3);
				            
				            String query4 =  "select count(1) from gcd_customer_m where (PASSPORT_NUMBER='"+cv.getPassport()+"' and PASSPORT_NUMBER<>'')  and CUSTOMER_ID<>"+id;
				            logger.info("in execute() of IdividualDetailActionPage Query : "+query4);
				            passportCheck = ConnectionDAO.singleReturn(query4);
				            
				            String query5 = "select count(1) from gcd_customer_m where (DRIVING_LICENSE='"+cv.getDrivingLicense()+"' and DRIVING_LICENSE<>'') and CUSTOMER_ID<>"+id;
				            logger.info("in execute() of IdividualDetailActionPage Query : "+query5);
				            dlCheck = ConnectionDAO.singleReturn(query5);
				           
						}
						else
						{
							 request.setAttribute("custStatus", "Y");
							/*String query1="select count(1) from gcd_customer_m where CUSTOMER_TYPE='I' and CUSTMER_PAN='"+cv.getPan()+"' and CUSTOMER_ID<>"+id;
							logger.info("in execute() of IdividualDetailActionPage Query : "+query1);
							panCheck = ConnectionDAO.singleReturn(query1);*/
						}												
						/*if(panCheck==null)
							
							panNo=0;
						else
							panNo=Integer.parseInt(panCheck);
						logger.info("panNo :"+panNo);*/
						
						  if (uidCheck == null)
					            uidNo = 0;
					          else
					            uidNo = Integer.parseInt(uidCheck);
					          logger.info(new StringBuilder().append("uidNo :").append(uidNo).toString());
					          
					          if (voterCheck == null)
					        	  voter = 0;
						          else
						            voter = Integer.parseInt(voterCheck);
						          logger.info(new StringBuilder().append("voter :").append(voter).toString());
					          
						          if (passportCheck == null)
						        	  passport = 0;
							          else
							        	  passport = Integer.parseInt(passportCheck);
							          logger.info(new StringBuilder().append("passport :").append(passport).toString());
							          
							          if (dlCheck == null)
							        	  dl = 0;
								          else
								        	  dl = Integer.parseInt(dlCheck);
								          logger.info(new StringBuilder().append("dl :").append(dl).toString());
					       
				    }
			   /* }
				else
				{
					panCheck = null;
		             uidCheck = null;
		             voterCheck = null;
		             passportCheck = null;
		             dlCheck = null;
		             nameCheck = null;
				}*/
		             if ((panNo < 1) && (uidNo < 1) && (name < 1) && (voter < 1) && (passport < 1) && (dl < 1))
				{
					 query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
					logger.info("in execute() of IdividualDetailActionPage Query : "+query);
					cv.setPagestatus(pageStatuss);
					String custCheckInTemp = ConnectionDAO.singleReturn(query);
					String insertInTempFlag="";
				 
					if(CommonFunction.checkNull(cv.getCorporateName()).trim().equalsIgnoreCase(""))
		    	    {
						StringBuilder fullName=new StringBuilder();
		    	    	fullName.append(CommonFunction.checkNull(cv.getFirstName()).trim()); 
		    	    	if(!CommonFunction.checkNull(cv.getMiddleName()).trim().equalsIgnoreCase(""))
		    	    	{
		    	    		fullName.append(" "+CommonFunction.checkNull(cv.getMiddleName()).trim()+" ");
		    	    	}
		    	    	else
		    	    	{
		    	    		fullName.append(" ");
		    	    	}
		    	    	fullName.append(CommonFunction.checkNull(cv.getLastName()).trim());
		    	    	cv.setCorporateName(CommonFunction.checkNull(fullName));
		    	    }
					if(custCheckInTemp==null && session.getAttribute("statusCase")!=null)
					{
						insertInTempFlag = service.insertAllIntoTempFromMainTable(id+"",cusType);
						boolean UidividualId=service.saveCorporateUpdate(cv,id,recStatus,statusCase,updateFlag,pageStatuss,source);
						session.setAttribute("corporateId", "");
						if(UidividualId)
							request.setAttribute("sms","U");
						else
							request.setAttribute("sms","E");				
						request.setAttribute("procval",insertInTempFlag);
						session.setAttribute("updateInMaker", "updateInMaker");
					}
					else
					{
						boolean UidividualId=service.saveCorporateUpdate(cv,id,recStatus,statusCase,updateFlag,pageStatuss,source);
						if(UidividualId)
						{
							if(CommonFunction.checkNull(functionId).equalsIgnoreCase("4000106") || CommonFunction.checkNull(functionId).equalsIgnoreCase("4000122"))
							{
								session.removeAttribute("pageStatuss");
								session.removeAttribute("updateInDeal");
								session.setAttribute("updateInLoan", "updateInLoan");
								logger.info("Customer Update Author functionId:CUA "+functionId);
							}
							else
							{
								session.setAttribute("updateInDeal", "updateInDeal");
							}
							
							request.setAttribute("sms","U");
							logger.info("in update particular record.......................................");
						}
						else
							request.setAttribute("sms","E");				
						session.setAttribute("corporateId", "");						
					}
					if(dealId!=null && !dealId.equalsIgnoreCase(""))
					{
						RefreshFlagVo vo = new RefreshFlagVo();
						vo.setRecordId(Integer.parseInt(dealId));
						vo.setTabIndex(2);
						vo.setModuleName("CP");
						String qu="select deal_customer_role_type from cr_deal_customer_role where deal_id='"+dealId+"' and deal_customer_id='"+cv.getCorporateCode()+"'";
			    		String appype=ConnectionDAO.singleReturn(qu);
			    		vo.setCustomerType(appype);
                        vo.setCostomerID(cv.getCorporateCode());
						RefreshFlagValueInsert.updateRefreshFlag(vo);
						session.setAttribute("dealId", dealId);
						return mapping.getInputForward();
					}
					if(loanId!=null && !loanId.equalsIgnoreCase(""))
					{
						if(!CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						{
							RefreshFlagVo vo = new RefreshFlagVo();
							vo.setRecordId(Integer.parseInt(loanId));
							vo.setTabIndex(10);
							vo.setModuleName("CM");
							String qu="select loan_customer_role_type from cr_loan_customer_role where loan_id='"+loanId+"' and gcd_id='"+cv.getCorporateCode()+"'";
							String appype=ConnectionDAO.singleReturn(qu);
							vo.setCustomerType(appype);
							vo.setCostomerID(cv.getCorporateCode());
							RefreshFlagValueInsert.updateRefreshFlag(vo);
							session.setAttribute("loanId", loanId);
						}
						return mapping.getInputForward();
					}
				}
				else
				{
					session.setAttribute("insert", "insert");
					ArrayList individualInfo=new ArrayList();
					individualInfo.add(cv);
					logger.info("blacklist ............... "+cv.getBlackListed());
					logger.info("blacklist reason.............................. "+cv.getReasonForBlackListed());
					String relationShip=cv.getRelationShip();
					logger.info("relationShip  :   "+relationShip);
					ArrayList<Object> genderIndiv=service.getGenderList();
					request.setAttribute("GenderCategory",genderIndiv);
					request.setAttribute("deal","deal");
					session.setAttribute("individualInfo", individualInfo);
					   if ((panCheck != null) && (panNo > 0)) {
					request.setAttribute("sms","Pan");
					   }
				        if ((uidCheck != null) && (uidNo > 0)) {
				          request.setAttribute("sms1", "UID");
				        }
				        if ((nameCheck != null) && (name > 0)) {
					          request.setAttribute("sms", "name");
					        }
				        if ((voterCheck != null) && (voter > 0)) {
					          request.setAttribute("sms1", "voter");
					        }
				        if ((passportCheck != null) && (passport > 0)) {
					          request.setAttribute("sms1", "passport");
					        }
				        if ((dlCheck != null) && (dl > 0)) {
					          request.setAttribute("sms1", "dl");
					        }
					logger.info("cv.getOtherRelationShip ..................... "+cv.getOtherRelationShip());
					request.setAttribute("otherRelationShip", cv.getOtherRelationShip());
					return mapping.getInputForward();
					
				}				
		}
		else
		{
			/*if ((request.getParameter("pan") != "") || (request.getParameter("aadhaar") != ""))
		    {*/
				if(updateInMaker!=null && !updateInMaker.equals(""))
				{
					tableName="gcd_customer_m_temp";
				}
				else if(pageStatuss!=null && pageStatuss.equals("fromLeads"))
				 {
					 tableName="cr_deal_customer_m";
				 }
				 else
				{
					tableName="gcd_customer_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="gcd_customer_m_edit";
				}
				cv.setBypassDedupe(CommonFunction.checkNull(request.getParameter("bypassDedupe")));
			    if(!cv.getBypassDedupe().equalsIgnoreCase("B"))
			    {
			    	logger.info("************ inside if for check dedupe 2 for individual customer****************");
			    	  panCheck = ConnectionDAO.singleReturn(new StringBuilder().append("Select CUSTOMER_ID from gcd_customer_m where  (customer_type='I' OR ifnull(customer_constitution,'')<>'PROPRIETOR') and (CUSTMER_PAN='").append(cv.getPan()).append("' and CUSTMER_PAN<>'') ").toString());
			          logger.info(new StringBuilder().append("maker panCheck---->").append(panCheck).toString());
			    }
			    uidCheck = ConnectionDAO.singleReturn(new StringBuilder().append("Select CUSTOMER_ID from gcd_customer_m where (UID_NO='").append(cv.getAadhaar()).append("' and UID_NO<>'')").toString());
		        logger.info(new StringBuilder().append("maker uidCheck---->").append(uidCheck).toString());
		        
		      //Rohit changes starts for voterId,passport and DL validation
	            
	            String query3 = "select CUSTOMER_ID from gcd_customer_m where (VOTER_ID='"+cv.getVoterId()+"' and VOTER_ID<>'')";
	            logger.info("in execute() of IdividualDetailActionPage Query : "+query3);
	            voterCheck = ConnectionDAO.singleReturn(query3);
	            
	            String query4 =  "select CUSTOMER_ID from gcd_customer_m where (PASSPORT_NUMBER='"+cv.getPassport()+"' and PASSPORT_NUMBER<>'') "; 
	            logger.info("in execute() of IdividualDetailActionPage Query : "+query4);
	            passportCheck = ConnectionDAO.singleReturn(query4);
	            
	            String query5 = "select CUSTOMER_ID from gcd_customer_m where (DRIVING_LICENSE='"+cv.getDrivingLicense()+"' and DRIVING_LICENSE<>'') ";
	            logger.info("in execute() of IdividualDetailActionPage Query : "+query5);
	            dlCheck = ConnectionDAO.singleReturn(query5);
		        String byPassNameCheck=CommonFunction.checkNull(request.getParameter("byPassNameCheck"));
		        if(!byPassNameCheck.equalsIgnoreCase("C") && !cv.getBypassDedupe().equalsIgnoreCase("B")){
		        if(CommonFunction.checkNull(applType).equalsIgnoreCase("COAPPL") || CommonFunction.checkNull(applType).equalsIgnoreCase("GUARANTOR")){
		        nameCheck = ConnectionDAO.singleReturn("Select CUSTOMER_ID from gcd_customer_m where CUSTOMER_DOB=STR_TO_DATE('"+cv.getIncorporationDate()+"','%d-%m-%Y') and CUSTOMER_FNAME='"+cv.getFirstName()+"' AND IFNULL(CUSTOMER_MNAME,'')='"+cv.getMiddleName()+"' AND CUSTOMER_LNAME='"+cv.getLastName()+"' ");
		        logger.info(new StringBuilder().append("maker nameCheck---->").append(nameCheck).toString());
		        }
		        }
		   /* }
			else
			{
				panCheck=null;
				uidCheck = null;
				voterCheck = null;
				passportCheck = null;
				dlCheck = null;
				nameCheck=null;
			}*/
			 if ((panCheck == null) && (uidCheck == null)&& (nameCheck == null) && (voterCheck == null) && (passportCheck == null) && (dlCheck == null))
			{
				 cv.setPagestatus(pageStatuss);
				 cv.setHiApplType(applType);
				
					
					if(session.getAttribute("applType")!=null)
				    {
				      cv.setApplType(session.getAttribute("applType").toString());
				    }
					if(CommonFunction.checkNull(cv.getCorporateName()).equalsIgnoreCase(""))
			    	    {
			    	    	StringBuilder fullName=new StringBuilder();
			    	    	fullName.append(CommonFunction.checkNull(cv.getFirstName()).trim()); 
			    	    	if(!CommonFunction.checkNull(cv.getMiddleName()).trim().equalsIgnoreCase(""))
			    	    	{
			    	    		fullName.append(" "+CommonFunction.checkNull(cv.getMiddleName()).trim()+" ");
			    	    	}
			    	    	else
			    	    	{
			    	    		fullName.append(" ");
			    	    	}
			    	    	fullName.append(CommonFunction.checkNull(cv.getLastName()).trim());
			    	    	cv.setCorporateName(CommonFunction.checkNull(fullName));
			    	    }
			    	   /* if(CommonFunction.checkNull(cv.getCorporateName()).equalsIgnoreCase(""))
			    	    {
			    	    	String fullName=CommonFunction.checkNull(cv.getFirstName())+" "+CommonFunction.checkNull(cv.getMiddleName())+" "+CommonFunction.checkNull(cv.getLastName());
			    	    	cv.setCorporateName(fullName);
			    	    }*/
			    		if(dealId!=null && !CommonFunction.checkNull(dealId).equalsIgnoreCase("") && CommonFunction.checkNull(session.getAttribute("pageStatuss")).equalsIgnoreCase("fromLeads"))
						{
			    			idividualId= Integer.toString(service.saveCorporateDetails(cv,"i",dealId,source));
						}
			    		else
			    		{
			    			logger.info("loanId  1# "+loanId);
			    			idividualId= Integer.toString(service.saveCorporateDetails(cv,"i",loanId,source));
			    			session.removeAttribute("pageStatuss");
			    			session.removeAttribute("updateInDeal");
			    			if(CommonFunction.checkNull(functionId).equalsIgnoreCase("4000106")||CommonFunction.checkNull(functionId).equalsIgnoreCase("4000122"))
							{
			    				 session.setAttribute("updateInLoan", "updateInLoan");
								 logger.info("Customer Update Author functionId:CUA "+functionId);
							}
			    			else
			    			{
			    				 session.removeAttribute("updateInLoan");
								 logger.info("Customer Update Author functionId:CUA "+functionId);
			    			}
						   
			    		}
				logger.info("idividualId  1# "+idividualId);
				if(Integer.parseInt(idividualId)>0)
				{
					if(!CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
					{
						if(pageStatuss!=null && pageStatuss.equals("fromLeads"))
						{
							RefreshFlagVo vo = new RefreshFlagVo();
							vo.setRecordId(Integer.parseInt(dealId));
							vo.setTabIndex(2);
							vo.setModuleName("CP");
							vo.setCustomerType((String)session.getAttribute("applType"));
							logger.info("idividualId  2# "+idividualId);
							vo.setCostomerID(String.valueOf(idividualId));
							RefreshFlagValueInsert.updateRefreshFlag(vo);
							session.setAttribute("dealId", dealId);
						}	
						else if(loanId!=null && !loanId.equalsIgnoreCase(""))
						{
							RefreshFlagVo vo = new RefreshFlagVo();
							vo.setRecordId(Integer.parseInt(loanId));
							vo.setTabIndex(10);
							vo.setModuleName("CM");
							vo.setCustomerType((String)session.getAttribute("applType"));
			    			logger.info("idividualId  2# "+idividualId);
			    			vo.setCostomerID(String.valueOf(idividualId));
			    			RefreshFlagValueInsert.updateRefreshFlag(vo);
							session.setAttribute("loanId", loanId);
						}
					}
					session.removeAttribute("individualCategory");
					session.removeAttribute("CastCategory");
					request.setAttribute("sms","I");
					
				}
				else
				{
					request.setAttribute("sms","exist");
				}
				session.setAttribute("idividualId", idividualId);
				session.setAttribute("cusType", "I");
				session.removeAttribute("corporateId");
				//session.setAttribute("corporateId", "");
				session.removeAttribute("briefAddr");
				session.removeAttribute("approve");
				session.removeAttribute("update");
				
			 }
			 else
			 {

				 ArrayList individualInfo=new ArrayList();
				 if(cv.getBlackListed().equalsIgnoreCase("on"))
				 {
					cv.setBlackListed("Y");
				 }
				 else
				 {
					cv.setBlackListed("N");
				 }
				
				 individualInfo.add(cv);
				 logger.info("blacklist ............................ "+cv.getBlackListed());
				 logger.info("blacklist reason.............................. "+cv.getReasonForBlackListed());
				 
				 session.setAttribute("individualInfo", individualInfo);
				 request.setAttribute("otherRelationShip", cv.getOtherRelationShip());
				 request.setAttribute("panError","panError");
				 ArrayList<Object> genderIndiv=service.getGenderList();
				 request.setAttribute("GenderCategory",genderIndiv);
				 logger.info("cv.getOtherRelationShip ..................... "+cv.getOtherRelationShip());
				   if (panCheck != null) {

				 request.setAttribute("sms","Pan");
				   }
			        if (uidCheck != null) {
			          request.setAttribute("sms1", "UID");
			        }
			        if (nameCheck != null) {
				          request.setAttribute("sms", "name");
				        }
			        if (voterCheck != null) {
				          request.setAttribute("sms1", "voter");
				        }
			        if (passportCheck != null) {
				          request.setAttribute("sms1", "passport");
				        }
			        if (dlCheck != null) {
				          request.setAttribute("sms1", "dl");
				        }
				return mapping.getInputForward();
			 }
     	}
		
		if(session.getAttribute("updateInMaker")!=null)
			updateInMaker = session.getAttribute("updateInMaker").toString();
		if(session.getAttribute("pageStatuss")!=null)
			 pageStatuss = session.getAttribute("pageStatuss").toString();
		logger.info("idividualId :: "+idividualId);
		String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
		ArrayList<Object> briefAddr = service.getAddressDetails(idividualId,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		session.setAttribute("briefAddr", briefAddr);
		if(session.getAttribute("strParentOption")!=null)
			session.removeAttribute("strParentOption");
		if(session.getAttribute("pParentGroup")!=null)
			session.removeAttribute("pParentGroup");
		
		return mapping.findForward("success");
		
		
	}
}