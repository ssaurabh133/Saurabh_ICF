/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.VO.CustomerSaveVo;
import com.connect.CommonFunction;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.gcd.dao.*;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 02-08-2011
 * 
 * XDoclet definition:
 * @struts.action input="/JSP/gcdJSP/corporateCustomerAddress.jsp" parameter="method" scope="request" validate="true"
 */
public class CorporateAddressAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(CorporateAddressAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward displayCorporateAddress(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		logger.info("In displayCorporateAddress()------------------------------->");
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+detail.getClass());
			if(userobj==null)
			{			
				logger.info("here displayCorporateAddress method of CorporateAddressAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
	
		 logger.info("In displayCorporateAddress"+request.getParameter("status"));
		 logger.info("In displayCorporateAddress"+session.getAttribute("operation"));
		 String statusCase="";
		 String updateFlag="";
		 String updateInMaker="";
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
			ArrayList<CustomerSaveVo>  defaultcountry=detail.defaultcountry() ;
		 request.setAttribute("defaultcountry",defaultcountry);
		 if(session.getAttribute("corporateId")!=null )
		 {
			 String code="";
			 code = session.getAttribute("corporateId").toString();
			 			
		
			
		 ArrayList<Object>addrList = detail.getAddressList();
		 ArrayList<Object>countryList = detail.getCountryList();

		 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null)
		 {
			 	
			    Object pageStatus = session.getAttribute("approve");
			    //neeraj code
			    String gcdReq = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag1 =updateFlag;
				  if(gcdReq!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
					  
				  
				ArrayList<Object> addressInfo = detail.getAdressAll(code,pageStatus,updateFlag,source);
				pageStatus=pageStatus1;
				updateFlag =updateFlag1;
				
				logger.info("addressInfo: "+addressInfo.size());
				session.setAttribute("addressInfo", addressInfo);
		 }
		 session.setAttribute("addrList", addrList);
		 session.setAttribute("countryList", countryList);
		 request.setAttribute("defaultcountry",defaultcountry);
		 session.removeAttribute("detailcountryList");
		 session.removeAttribute("detailcityList");
		 session.removeAttribute("detailregionList");
		 
		 if(session.getAttribute("statusCase")!=null)
			{
				statusCase = session.getAttribute("statusCase").toString();
			}
		
		 if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
		 String pageStatuss="";
		 if(session.getAttribute("pageStatuss")!=null)
		 {
			 pageStatuss = session.getAttribute("pageStatuss").toString();
		 }
		 String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
		 String gcdReq = (String)session.getAttribute("gcdReq");
		  String pageStatuss1=pageStatuss;
		  String updateFlag1 =updateFlag;
		  if(gcdReq!=null)
		  {
			  pageStatuss=null;
			  updateFlag=null;
		  }
		 ArrayList<Object> briefAddr = detail.getAddressDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		 pageStatuss=pageStatuss1;
		  updateFlag=updateFlag1;
		 session.setAttribute("briefAddr", briefAddr);
		 
		  
		 ArrayList<Object> list=new ArrayList<Object>(); 
		  list=detail.getRelationShipFlagCorporate();
		  request.setAttribute("relationType",list);
		 return mapping.findForward("displaysuccess");
		 }
		 else
		 {
			 request.setAttribute("back", "ok");
			 return mapping.findForward("backsuccess");
		 }
 
	}
	public ActionForward displayIndividualAddress(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		logger.info("In displayIndividualAddress()------------------------>");
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null)
			{			
				logger.info("here displayIndividualAddress method of CorporateAddressAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}

			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
			
		 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+detail.getClass());
		 String statusCase="";
		 String updateFlag="";
		 String updateInMaker="";
		 logger.info("In displayIndividualAddress"+session.getAttribute("idividualId"));
		 
		 if((session!=null && session.getAttribute("idividualId")!=null))
		 {
			 String code = session.getAttribute("idividualId").toString();
			
	
		 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
		 {
			
			 Object pageStatus = session.getAttribute("approve");
			 updateFlag = (String)session.getAttribute("updateFlag");
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  Object pageStatus1=pageStatus;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatus=null;
				  updateFlag=null;
			  }
				  
			 	ArrayList<Object> addressInfo = detail.getAdressAll(code,pageStatus,updateFlag,source);
				pageStatus=pageStatus1;
				  updateFlag=updateFlag1;
				logger.info("addressInfo: "+addressInfo.size());
				session.setAttribute("addressInfo", addressInfo);
		 }
		 ArrayList<CustomerSaveVo>  defaultcountry=detail.defaultcountry() ;
		 ArrayList<Object>addrList = detail.getAddressList();
		 ArrayList<Object>countryList = detail.getCountryList();
		 session.setAttribute("addrList", addrList);
		 session.setAttribute("countryList", countryList);
		 request.setAttribute("defaultcountry",defaultcountry);
		 session.removeAttribute("detailcountryList");
		 session.removeAttribute("detailcityList");
		 session.removeAttribute("detailregionList");
		 
		 
			ArrayList<Object> list=new ArrayList<Object>(); 
			  list=detail.getRelationShipFlagIndividual();
			  request.setAttribute("relationType",list);
			
		 if(session.getAttribute("statusCase")!=null)
		 {
				statusCase = session.getAttribute("statusCase").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
		 if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
		 String pageStatuss="";
		 if(session.getAttribute("pageStatuss")!=null)
		 {
			 pageStatuss = session.getAttribute("pageStatuss").toString();
		 }
		 String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
		 String gcdReq = (String)session.getAttribute("gcdReq");
		  String pageStatuss1=pageStatuss;
		  String updateFlag1 =updateFlag;
		  if(gcdReq!=null)
		  {
			  pageStatuss=null;
			  updateFlag=null;
		  }
		 ArrayList<Object> briefAddr = detail.getAddressDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		 pageStatuss=pageStatuss1;
		  updateFlag=updateFlag1;
		 logger.info("Size of getAddressDetails.....CorporateAddressAction.............................."+briefAddr.size());
		 session.setAttribute("briefAddr", briefAddr);
		 
		 return mapping.findForward("displaysuccess");
		 }
		 else
		 {
			 request.setAttribute("back", "ok");
			 return mapping.findForward("indBacksuccess");
		 }
		}
	
	public ActionForward displayIndividualReference(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		logger.info("In displayIndividualReference()---------------------------->");
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null)
			{			
				logger.info("here displayIndividualReference method of CorporateAddressAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+detail.getClass());
		 String statusCase="";
		 String updateFlag="";
		 String updateInMaker="";
		 logger.info("In displayIndividualReference"+session.getAttribute("idividualId"));
		 
		 if((session!=null && session.getAttribute("idividualId")!=null))
		 {
			 String code = session.getAttribute("idividualId").toString();
			
	
		 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
		 {
			
			 Object pageStatus = session.getAttribute("approve");
			 updateFlag = (String)session.getAttribute("updateFlag");
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  Object pageStatus1=pageStatus;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatus=null;
				  updateFlag=null;
			  }
				  
			 	ArrayList<Object> addressInfo = detail.getReferenceAll(code,pageStatus,updateFlag,source);
				pageStatus=pageStatus1;
				  updateFlag=updateFlag1;
				logger.info("addressInfo: "+addressInfo.size());
				session.setAttribute("addressInfo", addressInfo);
		 }

		 if(session.getAttribute("statusCase")!=null)
		 {
				statusCase = session.getAttribute("statusCase").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
		 if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
		 String pageStatuss="";
		 if(session.getAttribute("pageStatuss")!=null)
		 {
			 pageStatuss = session.getAttribute("pageStatuss").toString();
		 }
		 String gcdReq = (String)session.getAttribute("gcdReq");
		  String pageStatuss1=pageStatuss;
		  String updateFlag1 =updateFlag;
		  if(gcdReq!=null)
		  {
			  pageStatuss=null;
			  updateFlag=null;
		  }
		  String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
			 ArrayList<Object> list=new ArrayList<Object>(); 
			  list=detail.getRelationDeatil();
			 
		 ArrayList<Object> briefAddr = detail.getRefrenceDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		 pageStatuss=pageStatuss1;
		  updateFlag=updateFlag1;
		 logger.info("Size of getAddressDetails.....CorporateAddressAction.............................."+briefAddr.size());
		 session.setAttribute("briefAddr", briefAddr);
		 request.setAttribute("relationType",list);
		 return mapping.findForward("displayIndsuccess");
		 }
		 else
		 {
			 request.setAttribute("back", "ok");
			 return mapping.findForward("indBacksuccess");
		 }
	}
//Rohit Changes Starts For Sarv Suraksha	
	public ActionForward displaySarvSurakshaDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {

	logger.info("In displaySarvSurakshaDetails()---------------------------->");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null)
		{			
			logger.info("here displaySarvSurakshaDetails method of CorporateAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	 logger.info("Implementation class: "+detail.getClass());
	 String statusCase="";
	 String updateFlag="";
	 String updateInMaker="";
	 logger.info("In displaySarvSurakshaDetails"+session.getAttribute("idividualId"));
	 
	 if((session!=null && session.getAttribute("idividualId")!=null))
	 {
		 String code = session.getAttribute("idividualId").toString();
		

	 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
	 {
		
		 Object pageStatus = session.getAttribute("approve");
		 updateFlag = (String)session.getAttribute("updateFlag");
		 String gcdReq = (String)session.getAttribute("gcdReq");
		  Object pageStatus1=pageStatus;
		  String updateFlag1 =updateFlag;
		  if(gcdReq!=null)
		  {
			  pageStatus=null;
			  updateFlag=null;
		  }
			  
		 	ArrayList<Object> addressInfo = detail.getSarvSurakshaAll(code,pageStatus,updateFlag,source);
			pageStatus=pageStatus1;
			  updateFlag=updateFlag1;
			logger.info("addressInfo: "+addressInfo.size());
			session.setAttribute("addressInfo", addressInfo);
	 }

	 if(session.getAttribute("statusCase")!=null)
	 {
			statusCase = session.getAttribute("statusCase").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	 {
		 
		 updateFlag = session.getAttribute("updateFlag").toString();
	 }
	 if(session.getAttribute("updateInMaker")!=null)
		{
			updateInMaker = session.getAttribute("updateInMaker").toString();
		}
	 String pageStatuss="";
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 String gcdReq = (String)session.getAttribute("gcdReq");
	  String pageStatuss1=pageStatuss;
	  String updateFlag1 =updateFlag;
	  if(gcdReq!=null)
	  {
		  pageStatuss=null;
		  updateFlag=null;
	  }
	  String cuaStatus="";
	  if(session.getAttribute("CUA")!=null)
		 {
		  cuaStatus = session.getAttribute("CUA").toString();
		 }
		 ArrayList<Object> list=new ArrayList<Object>(); 
		  list=detail.getRelationDeatil();
		 
	 ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
	 pageStatuss=pageStatuss1;
	  updateFlag=updateFlag1;
	 logger.info("Size of getSarvSurkshaDetails.....CorporateAddressAction.............................."+briefAddr.size());
	 session.setAttribute("briefAddr", briefAddr);
	 request.setAttribute("relationType",list);
	 return mapping.findForward("displayIndsarvsuccess");
	 }
	 else
	 {
		 request.setAttribute("back", "ok");
		 return mapping.findForward("indBacksuccess");
	 }
}
	
	public ActionForward displayCorporateSarvaSurksha(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		logger.info("In displayCorporateReference()---------------------------->");
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null)
			{			
				logger.info("here displayCorporateSarvaSurksha method of CorporateAddressAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			request.setAttribute("corporate", "corporate"); 
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+detail.getClass());
		 String statusCase="";
		 String updateFlag="";
		 String updateInMaker="";
		 logger.info("In displayCorporateSarvaSurksha"+session.getAttribute("corporateId"));
		 
		 if((session!=null && session.getAttribute("corporateId")!=null))
		 {
			 String code = session.getAttribute("corporateId").toString();
			
	
		 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
		 {
			
			 Object pageStatus = session.getAttribute("approve");
			 updateFlag = (String)session.getAttribute("updateFlag");
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  Object pageStatus1=pageStatus;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatus=null;
				  updateFlag=null;
			  }
				  
			 	ArrayList<Object> addressInfo = detail.getSarvSurakshaAll(code,pageStatus,updateFlag,source);
				pageStatus=pageStatus1;
				  updateFlag=updateFlag1;
				logger.info("addressInfo: "+addressInfo.size());
				session.setAttribute("addressInfo", addressInfo);
		 }

		 if(session.getAttribute("statusCase")!=null)
		 {
				statusCase = session.getAttribute("statusCase").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
		 if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
		 String pageStatuss="";
		 if(session.getAttribute("pageStatuss")!=null)
		 {
			 pageStatuss = session.getAttribute("pageStatuss").toString();
		 }
		 String gcdReq = (String)session.getAttribute("gcdReq");
		  String pageStatuss1=pageStatuss;
		  String updateFlag1 =updateFlag;
		  if(gcdReq!=null)
		  {
			  pageStatuss=null;
			  updateFlag=null;
		  }
		  String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
		  logger.info("code......Ritu"+code);
		  
		 ArrayList<Object> list=new ArrayList<Object>(); 
		  list=detail.getRelationDeatil();
		  
		 ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		 pageStatuss=pageStatuss1;
		  updateFlag=updateFlag1;
		 logger.info("Size of getSarvSurkshaDetails.....CorporateAddressAction.............................."+briefAddr.size());
		 session.setAttribute("briefAddr", briefAddr);
		 
		 
		 request.setAttribute("relationType",list);
		 return mapping.findForward("displayIndsarvsuccess");
		 }
		 else
		 {
			 request.setAttribute("back", "ok");
			 return mapping.findForward("indBacksuccess");
		 }
	}
	//Rohit Changes end For Sarv Suraksha	
	
	public ActionForward fetchCustomerAddress(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		 logger.info("In fetchCustomerAddress ()------------> ");
		 
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null)
			{			
				logger.info("here fetchCustomerAddress method of CorporateAddressAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		String statusCase="";
		String updateFlag="";
		String updateInMaker="";
		String addr_id="";
		 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+detail.getClass());
		 if(request.getParameter("chk")!=null)
		 {
			 addr_id = request.getParameter("chk");
		 }
		 
		 Object pageStatus = session.getAttribute("approve");	
		 if(session.getAttribute("statusCase")!=null)
		 {
				statusCase = session.getAttribute("statusCase").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
		 
		 if(session.getAttribute("updateInMaker")!=null)
		 {
			 updateInMaker = session.getAttribute("updateInMaker").toString();
		 }
		 String pageStatuss="";
		  if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
		  String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
		 
			String query = "Select customer_id from gcd_customer_m_temp where customer_id= (select BPID from com_address_m where ADDRESS_ID="+addr_id+")";
			String checkFlag = ConnectionDAO.singleReturn(query);
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  Object pageStatus1=pageStatus;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatus=null;
				  updateFlag=null;
			  }
		 ArrayList<CustomerSaveVo> customerList = detail.getCustomerAddressDetail(addr_id,pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
		 pageStatus=pageStatus1;
		  updateFlag=updateFlag1;
		 session.removeAttribute("strParentOption");
		 String tableName="";
		 if (((pageStatuss != null) && (pageStatuss.equals("fromLeads"))) || ((updateFlag != null) && (updateFlag.equals("updateFlag"))) || ((updateFlag != null) && (updateFlag.equals("notEdit"))))
		    {
		      tableName = "cr_deal_address_m";
		    }
		 else{
		 if (((pageStatus != null) && (pageStatus.equals("approve"))) || ((updateInMaker != null) && (updateInMaker.equals("updateInMaker"))) || ((statusCase != null) && (!statusCase.equals(""))))
	      {
	        if ((statusCase != null) && (statusCase.equalsIgnoreCase("Approved")) && ((updateInMaker == null) || (updateInMaker.equals(""))))
	        {
	          tableName = "com_address_m";
	          if (CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
	            tableName = "com_address_m_edit";
	        }
	        else
	        {
	          tableName = "com_address_m_temp";
	        }
	      }
	      else
	      {
	        tableName = "com_address_m";
	        if (CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED")) {
	          tableName = "com_address_m_edit";
	        }
	      }
	      if (CommonFunction.checkNull(cuaStatus).equalsIgnoreCase("CUA"))
	      {
	        tableName = "com_address_m_temp";
	      }
		 }
		 String q1="select customer_type from gcd_customer_m where customer_id=(select BPID from "+tableName+" where ADDRESS_ID="+addr_id+")";
		 String customerType=ConnectionDAO.singleReturn(q1);
		 if(CommonFunction.checkNull(customerType).equalsIgnoreCase("I")){
			 ArrayList<Object> list=new ArrayList<Object>(); 
			  list=detail.getRelationShipFlagIndividual();
			  request.setAttribute("relationType",list);
		 }else{
			 ArrayList<Object> list=new ArrayList<Object>(); 
			  list=detail.getRelationShipFlagCorporate();
			  request.setAttribute("relationType",list);
		 }
		 request.setAttribute("customerList", customerList);
		 logger.info("list is......................................... "+customerList);
//Shashank Starts Here
		 String queryss = "Select MobileVerificationFlag from "+tableName+" where ADDRESS_ID="+addr_id;
			logger.info("Query for checking record is verified or not  :  "+queryss);
			String MobileVerificationFlag = ConnectionDAO.singleReturn(queryss);
			  logger.info("MobileVerificationFlag: "+MobileVerificationFlag);
			  request.setAttribute("MobileVerificationFlag",MobileVerificationFlag);
			//Shashank Ends Here
		return mapping.getInputForward();
 
	}

		public ActionForward fetchIndividualReference(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)throws Exception {
			 logger.info("In fetchIndividualReference ()------------------> ");
			 
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				if(userobj==null)
				{			
					logger.info("here fetchIndividualReference method of CorporateAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				//neeraj space end
			String statusCase="";
			String updateFlag="";
			String updateInMaker="";
			String addr_id="";
			 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+detail.getClass());
			 if(request.getParameter("chk")!=null)
			 {
				 addr_id = request.getParameter("chk");
				 logger.info("addr_id::::::::::::::::"+addr_id);
			 }
			 
			 Object pageStatus = session.getAttribute("approve");	
			 if(session.getAttribute("statusCase")!=null)
			 {
					statusCase = session.getAttribute("statusCase").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			 
			 if(session.getAttribute("updateInMaker")!=null)
			 {
				 updateInMaker = session.getAttribute("updateInMaker").toString();
			 }
			 String pageStatuss="";
			  if(session.getAttribute("pageStatuss")!=null)
				 {
					 pageStatuss = session.getAttribute("pageStatuss").toString();
				 }
			
				 String gcdReq = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag1 =updateFlag;
				  if(gcdReq!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
					 ArrayList<Object> list=new ArrayList<Object>(); 
					  list=detail.getRelationDeatil();
					  
					
			 ArrayList<CustomerSaveVo> customerList = detail.getIndReferenceDetail(addr_id,pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,source);
			 pageStatus=pageStatus1;
			  updateFlag=updateFlag1;
			 
			 request.setAttribute("customerList", customerList);
			 request.setAttribute("relationType",list);
			 logger.info("list is......................................... "+customerList);

			return mapping.findForward("fetchIndReference");
	 
		}
		
		//Rohit Changes for Sarva Surakhsha Starts
		public ActionForward fetchSarvaSuraksha(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)throws Exception {
			 logger.info("In fetchSarvaSuraksha ()------------------> ");
			 
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				if(userobj==null)
				{			
					logger.info("here fetchSarvaSuraksha method of CorporateAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				//neeraj space end
			String statusCase="";
			String updateFlag="";
			String updateInMaker="";
			String addr_id="";
			 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+detail.getClass());
			 if(request.getParameter("chk")!=null)
			 {
				 addr_id = request.getParameter("chk");
				 logger.info("addr_id::::::::::::::::"+addr_id);
			 }
			 
			 Object pageStatus = session.getAttribute("approve");	
			 if(session.getAttribute("statusCase")!=null)
			 {
					statusCase = session.getAttribute("statusCase").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			 
			 if(session.getAttribute("updateInMaker")!=null)
			 {
				 updateInMaker = session.getAttribute("updateInMaker").toString();
			 }
			 String pageStatuss="";
			  if(session.getAttribute("pageStatuss")!=null)
				 {
					 pageStatuss = session.getAttribute("pageStatuss").toString();
				 }
			
				 String gcdReq = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag1 =updateFlag;
				  if(gcdReq!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
					 ArrayList<Object> list=new ArrayList<Object>(); 
					  list=detail.getRelationDeatil();
					  
					
			 ArrayList<CustomerSaveVo> customerList = detail.getSarvaSurakshaDetail(addr_id,pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,source);
			 pageStatus=pageStatus1;
			  updateFlag=updateFlag1;
			 
			 request.setAttribute("customerList", customerList);
			 request.setAttribute("relationType",list);
			 logger.info("list is......................................... "+customerList);

			return mapping.findForward("fetchsarvaSuraksha");
	 
		}
		
		//Rohit Changes for Sarva Suraksha end......
		
//Ritu
		public ActionForward displayCorporateReference(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)throws Exception {
			logger.info("In displayCorporateReference()---------------------------->");
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				if(userobj==null)
				{			
					logger.info("here displayCorporateReference method of CorporateAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				request.setAttribute("corporate", "corporate"); 
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				//neeraj space end
			 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+detail.getClass());
			 String statusCase="";
			 String updateFlag="";
			 String updateInMaker="";
			 logger.info("In displayCorporateReference"+session.getAttribute("corporateId"));
			 
			 if((session!=null && session.getAttribute("corporateId")!=null))
			 {
				 String code = session.getAttribute("corporateId").toString();
				
		
			 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
			 {
				
				 Object pageStatus = session.getAttribute("approve");
				 updateFlag = (String)session.getAttribute("updateFlag");
				 String gcdReq = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag1 =updateFlag;
				  if(gcdReq!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
					  
				 	ArrayList<Object> addressInfo = detail.getReferenceAll(code,pageStatus,updateFlag,source);
					pageStatus=pageStatus1;
					  updateFlag=updateFlag1;
					logger.info("addressInfo: "+addressInfo.size());
					session.setAttribute("addressInfo", addressInfo);
			 }

			 if(session.getAttribute("statusCase")!=null)
			 {
					statusCase = session.getAttribute("statusCase").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 String pageStatuss="";
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  String pageStatuss1=pageStatuss;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatuss=null;
				  updateFlag=null;
			  }
			  String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
			  logger.info("code......Ritu"+code);
			  
			 ArrayList<Object> list=new ArrayList<Object>(); 
			  list=detail.getRelationDeatil();
			  
			 ArrayList<Object> briefAddr = detail.getRefrenceDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 pageStatuss=pageStatuss1;
			  updateFlag=updateFlag1;
			 logger.info("Size of getAddressDetails.....CorporateAddressAction.............................."+briefAddr.size());
			 session.setAttribute("briefAddr", briefAddr);
			 
			 
			 request.setAttribute("relationType",list);
			 return mapping.findForward("displayIndsuccess");
			 }
			 else
			 {
				 request.setAttribute("back", "ok");
				 return mapping.findForward("backsuccess");
			 }
		}
		
//Ritu Code Start here
		public ActionForward displayIndividualProfile(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)throws Exception {
			logger.info("In displayIndividualProfile()---------------------------->");
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				if(userobj==null)
				{			
					logger.info("here displayIndividualProfile method of CorporateAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				if(funid==3000296)
				{
					request.setAttribute("profileMode", "EDITPROFILEUNDERWRITER");
				}
				
				//neeraj space end
			 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+detail.getClass());
			 String statusCase="";
			 String updateFlag="";
			 String updateInMaker="";
			 logger.info("In displayIndividualProfile"+session.getAttribute("idividualId"));
			 
			 if((session!=null && session.getAttribute("idividualId")!=null))
			 {
				 String code = session.getAttribute("idividualId").toString();
				
		
			 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
			 {
				
				 Object pageStatus = session.getAttribute("approve");
				 updateFlag = (String)session.getAttribute("updateFlag");
				 String gcdReq = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag1 =updateFlag;
				  if(gcdReq!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
					  
				 	ArrayList<Object> addressInfo = detail.getProfileAll(code,pageStatus,updateFlag,source);
					pageStatus=pageStatus1;
					  updateFlag=updateFlag1;
					logger.info("addressInfo: "+addressInfo.size());
					session.setAttribute("addressInfo", addressInfo);
			 }

			 if(session.getAttribute("statusCase")!=null)
			 {
					statusCase = session.getAttribute("statusCase").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 String pageStatuss="";
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  String pageStatuss1=pageStatuss;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatuss=null;
				  updateFlag=null;
			  }
			  String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
			 ArrayList<Object> briefAddr = detail.getProfileDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 pageStatuss=pageStatuss1;
			  updateFlag=updateFlag1;
			 logger.info("Size of getAddressDetails.....CorporateAddressAction.............................."+briefAddr.size());
			 session.setAttribute("briefAddr", briefAddr);
			 return mapping.findForward("indCustProfile");
			 }
			 else
			 {
				 request.setAttribute("back", "ok");
				 return mapping.findForward("backIndCustProfile");
			 }
		}
		
		public ActionForward displayCorporateProfile(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response)throws Exception {
			logger.info("In displayCorporateProfile()---------------------------->");
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				if(userobj==null)
				{			
					logger.info("here displayCorporateProfile method of CorporateAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				if(funid==3000296)
				{
					request.setAttribute("profileMode", "EDITPROFILEUNDERWRITER");
				}
				//neeraj space end
			 CorporateDAO detail =(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+detail.getClass());
			 String statusCase="";
			 String updateFlag="";
			 String updateInMaker="";
			 logger.info("In displayCorporateProfile"+session.getAttribute("corporateId"));
			 
			 if((session!=null && session.getAttribute("corporateId")!=null))
			 {
				 String code = session.getAttribute("corporateId").toString();
				
		
			 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null||session.getAttribute("updateFlag")!=null)
			 {
				
				 Object pageStatus = session.getAttribute("approve");
				 updateFlag = (String)session.getAttribute("updateFlag");
				 String gcdReq = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag1 =updateFlag;
				  if(gcdReq!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
					  
				 	ArrayList<Object> addressInfo = detail.getProfileAll(code,pageStatus,updateFlag,source);
					pageStatus=pageStatus1;
					  updateFlag=updateFlag1;
					logger.info("addressInfo: "+addressInfo.size());
					session.setAttribute("addressInfo", addressInfo);
			 }

			 if(session.getAttribute("statusCase")!=null)
			 {
					statusCase = session.getAttribute("statusCase").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 String pageStatuss="";
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  String pageStatuss1=pageStatuss;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatuss=null;
				  updateFlag=null;
			  }
			  String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
			 ArrayList<Object> briefAddr = detail.getProfileDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 pageStatuss=pageStatuss1;
			  updateFlag=updateFlag1;
			 logger.info("Size of getAddressDetails.....CorporateAddressAction.............................."+briefAddr.size());
			 session.setAttribute("briefAddr", briefAddr);
			 return mapping.findForward("indCustProfile");
			 }
			 else
			 {
				 request.setAttribute("backCor", "ok");
				 return mapping.findForward("backsuccess");
			 }
		}		
}