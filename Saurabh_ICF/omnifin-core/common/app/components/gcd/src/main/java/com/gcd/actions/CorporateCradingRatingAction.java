/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;

import java.util.ArrayList;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.VO.InstitutionNameVo;
import com.connect.DaoImplInstanceFactory;
import com.gcd.dao.CorporateDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 02-11-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class CorporateCradingRatingAction extends Action {
	private static final Logger logger = Logger.getLogger(CorporateCradingRatingAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception
	{
		  boolean flag =false;
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
			
		 String statusCase="";
		 String updateFlag="";
		 String updateInMaker="";
		 if(session!=null && session.getAttribute("corporateId")!=null)
		 {
			 CorporateDAO dao=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			 logger.info("Implementation class: "+dao.getClass());
			 ArrayList<InstitutionNameVo>institutionNameList=dao.getInstitutionName();
			 if(session.getAttribute("statusCase")!=null)
			 {
					statusCase = session.getAttribute("statusCase").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			 int cid = Integer.parseInt(session.getAttribute("corporateId").toString());
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 String pageStatuss="";
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String gcdReq = (String)session.getAttribute("gcdReq");
			  String pageStatuss1=pageStatuss;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatuss=null;
				  updateFlag=null;
			  }
			  String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }	  
			 ArrayList<Object> creditRatingDetail = dao.getcreditRatingDetails(cid,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 pageStatuss=pageStatuss1;
			  updateFlag=updateFlag1;
			 logger.info("operation: "+session.getAttribute("operation"));
			 
			 if(session.getAttribute("operation")!=null||session.getAttribute("approve")!=null)
			 {	
				 Object pageStatus = session.getAttribute("approve");
				 String gcdReq1 = (String)session.getAttribute("gcdReq");
				  Object pageStatus1=pageStatus;
				  String updateFlag12 =updateFlag;
				  if(gcdReq1!=null)
				  {
					  pageStatus=null;
					  updateFlag=null;
				  }
				 ArrayList<Object> ratingList = dao.getRatingDetails(cid,pageStatus,statusCase,updateFlag,updateInMaker,cuaStatus,source);
				 pageStatus=pageStatus1;
				  updateFlag=updateFlag12;
				 session.setAttribute("ratingList", ratingList);
			 }
			 session.setAttribute("institutionNameList", institutionNameList);
			 session.setAttribute("creditRatingDetail", creditRatingDetail);
			 return mapping.findForward("corporateRating");
		 }
		 else
		 {
			 request.setAttribute("back", "ok");
			 return mapping.findForward("backsuccess");
		 }
	}
}