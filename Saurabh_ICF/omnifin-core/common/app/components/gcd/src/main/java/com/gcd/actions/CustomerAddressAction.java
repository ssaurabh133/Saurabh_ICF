/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.VO.CustomerSaveVo;
import com.connect.CommonFunction;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.gcd.dao.CorporateDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 02-09-2011
 * 
 * XDoclet definition:
 * @struts.action input="/JSP/gcdJSP/corporateCustomerAddress.jsp" parameter="method" scope="request" validate="true"
 */
public class CustomerAddressAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(CustomerAddressAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	public ActionForward save_address(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IllegalAccessException, InvocationTargetException,Exception {
		
		 logger.info("In CustomerAddressAction in save_address");
	 
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}else{
				logger.info("here save_address method of CustomerAddressAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}

			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
			
        String pageStatuss="";
        String updateFlag="";
        String statusCase="";
    	String dealId = "";
		
  		if(session.getAttribute("dealId")!=null)
  		{
  			
  			dealId=session.getAttribute("dealId").toString();
  		}
  		else if(session.getAttribute("maxId")!=null)
  		{
  			dealId=session.getAttribute("maxId").toString();
  		}
        if(session.getAttribute("pageStatuss")!=null)
		 {
			 pageStatuss = session.getAttribute("pageStatuss").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		    {
		    	updateFlag=session.getAttribute("updateFlag").toString();
		    		
		    }
		 
		 if(session.getAttribute("statusCase")!=null)
			{
				statusCase = session.getAttribute("statusCase").toString();
			}
		CustomerSaveVo vo = new CustomerSaveVo();
		org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
		
		//added by Virender
		logger.info("Virender");
		ArrayList alDeleteQuery = new ArrayList(1);
		String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
		logger.info("hunterQry "+ hunterQry);
		alDeleteQuery.add(hunterQry);
		boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
		hunterQry = null;
		//Virender changes end
		
		vo.setSource(source);
		vo.setDealId(dealId);
		
		int chTest=0;
		if(!CommonFunction.checkNull(request.getParameter("chTest")).equalsIgnoreCase("")){
		 chTest=Integer.parseInt(CommonFunction.checkNull(request.getParameter("chTest")));
		}
		
		if(chTest==1){
			vo.setCommunicationAddress("Y");			
		}
		else{
			vo.setCommunicationAddress("N");			
		}
		
		vo.setPageStatus(pageStatuss);
		vo.setUpdateFlag(updateFlag);
		vo.setMakerId(userId);
		vo.setMakerDate(bDate);
		CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+detail.getClass());
		String commAddressCheck="";
		String updateInMaker="";
		if(session.getAttribute("updateInMaker")!=null)
		{
			updateInMaker = session.getAttribute("updateInMaker").toString();
		}
		String code = session.getAttribute("corporateId").toString();
		String tableName="";
		 
		
		 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
			{
				tableName="com_address_m_temp";
			}
			else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
			 {
				tableName="cr_deal_address_m";
			 }
			 else
			{
				 if(statusCase!=null && statusCase.equals("UnApproved"))
				 {
					 tableName="com_address_m_temp";
				 }
				 else
				 {
						tableName="com_address_m";
						if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
							tableName="com_address_m_edit";
				 }
				
			}
		 
		 String q1="select customer_type from gcd_customer_m where customer_id='"+vo.getBp_id()+"'";
			String customerType=ConnectionDAO.singleReturn(q1);
			if(CommonFunction.checkNull(customerType).equalsIgnoreCase("I")){
				 ArrayList<Object> list=new ArrayList<Object>(); 
				  list=detail.getRelationShipFlagIndividual();
				  request.setAttribute("relationType",list);
			 }else{
				 ArrayList<Object> list=new ArrayList<Object>(); 
				  list=detail.getRelationShipFlagCorporate();
				  request.setAttribute("relationType",list);
			 }
			String gstQuery="select count(1) from com_address_m where BPID<>'"+vo.getBp_id()+"'  and (GST_NO='" + vo.getGstIn() + "' AND GST_NO<>'')";
			 int gstCount=Integer.parseInt(ConnectionDAO.singleReturn(gstQuery));
			 if(gstCount>0){

				 request.setAttribute("gstNoExist","Y");
				 session.removeAttribute("briefAddr");
				 
				 if(session.getAttribute("updateInMaker")!=null)
					{
						updateInMaker = session.getAttribute("updateInMaker").toString();
					}
				 if(session.getAttribute("pParentGroup")!=null)
					{
						session.removeAttribute("pParentGroup");
					}
					if(session.getAttribute("strParentOption")!=null)
					{
						session.removeAttribute("strParentOption");
					}
					String cuaStatus="";
					  if(session.getAttribute("CUA")!=null)
						 {
						  cuaStatus = session.getAttribute("CUA").toString();
						 }
				
				 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
				 customerList.add(vo);
				 request.setAttribute("customerList", customerList);
				 
				 ArrayList<Object> briefAddr = detail.getAddressDetails(vo.getBp_id(),statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
				 session.setAttribute("briefAddr", briefAddr);
				 session.removeAttribute("strParentOption");
				 return mapping.getInputForward();
			
			}
		  // Start Change for check duplicate mobile no
			String mobileCheckPass=CommonFunction.checkNull(request.getParameter("mobileCheckPass"));
			logger.info("mobileCheckPass: "+mobileCheckPass+" tableName: "+tableName+" Mobile No "+vo.getPrimaryPhoneNo()+" customer Id "+vo.getBp_id());
			if(CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS")){
				String qry1="select count(1) from "+tableName+" where bpid='"+vo.getBp_id()+"' and PRIMARY_PHONE='"+vo.getPrimaryPhoneNo()+"' ";
			int count=Integer.parseInt(ConnectionDAO.singleReturn(qry1));
			if(count<1){
				String relation="N";
				vo.setRelation(relation);
			}
		}
			if(!CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS"))
			{
				
				String countCheckMobileNo=detail.getMobileNoStatus(tableName,CommonFunction.checkNull(vo.getPrimaryPhoneNo()),"",vo.getBp_id());
				
				if(CommonFunction.checkNull(countCheckMobileNo).equalsIgnoreCase(""))
				{
					countCheckMobileNo="0";
				}
				int countCheckMobile=Integer.parseInt(countCheckMobileNo);
				countCheckMobileNo=null;
				
				
				if(countCheckMobile>0)
				{
					 request.setAttribute("mobileNoCheckInsert","Y");
					 session.removeAttribute("briefAddr");
					 
					 if(session.getAttribute("updateInMaker")!=null)
						{
							updateInMaker = session.getAttribute("updateInMaker").toString();
						}
					 if(session.getAttribute("pParentGroup")!=null)
						{
							session.removeAttribute("pParentGroup");
						}
						if(session.getAttribute("strParentOption")!=null)
						{
							session.removeAttribute("strParentOption");
						}
						String cuaStatus="";
						  if(session.getAttribute("CUA")!=null)
							 {
							  cuaStatus = session.getAttribute("CUA").toString();
							 }
					
					 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
					 customerList.add(vo);
					 request.setAttribute("customerList", customerList);
					 
					 ArrayList<Object> briefAddr = detail.getAddressDetails(vo.getBp_id(),statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
					 session.setAttribute("briefAddr", briefAddr);
					 session.removeAttribute("strParentOption");
					 return mapping.getInputForward();
				}
				/*else if(countCheckMobile>0 && CommonFunction.checkNull(relationFlag).equalsIgnoreCase("N")){

					 request.setAttribute("mobileNoCheckInsertRelationFlag","Y");
					 session.removeAttribute("briefAddr");
					 
					 if(session.getAttribute("updateInMaker")!=null)
						{
							updateInMaker = session.getAttribute("updateInMaker").toString();
						}
					 if(session.getAttribute("pParentGroup")!=null)
						{
							session.removeAttribute("pParentGroup");
						}
						if(session.getAttribute("strParentOption")!=null)
						{
							session.removeAttribute("strParentOption");
						}
						String cuaStatus="";
						  if(session.getAttribute("CUA")!=null)
							 {
							  cuaStatus = session.getAttribute("CUA").toString();
							 }
					
					 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
					 customerList.add(vo);
					 request.setAttribute("customerList", customerList);
					 
					 ArrayList<Object> briefAddr = detail.getAddressDetails(vo.getBp_id(),statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
					 session.setAttribute("briefAddr", briefAddr);
					 session.removeAttribute("strParentOption");
					 return mapping.getInputForward();
				
				}*/
				
         }
			// End Change for check duplicate mobile no
		
		 String query="Select COMMUNICATION_ADDRESS from "+tableName+" where BPID="+vo.getBp_id();
		commAddressCheck=ConnectionDAO.singleReturn(query);
		
		if(commAddressCheck!=null)
		{
			 if(commAddressCheck.equals("Y"))
			 {
				 request.setAttribute("comm", "commAddExist");
				 request.setAttribute("commAddressCheck", "Communcation Address is Already Exist!!!");
				 vo.setCommunicationAddress("N");
			 }
			 else
			 {
				 request.setAttribute("comm","");
				 vo.setCommunicationAddress("Y");
			 }
		}
		else
		{
			if(vo.getCommunicationAddress().equals("Y"))
			{
				vo.setCommunicationAddress("Y");
			}
			else
			{
				vo.setCommunicationAddress("N");
			}
		}
		
		
		vo.setStatusCase(statusCase);
		int id=0;
		String insertInTempFlag="";
		String cusType="";
		 boolean status =false;
		 
		if(!statusCase.equals("") )
		{
			if(session.getAttribute("corporateId")!=null)
			 {
			    id = Integer.parseInt(session.getAttribute("corporateId").toString());
			    
			 }  
			if(session.getAttribute("cusType")!=null)
			{
				cusType=session.getAttribute("cusType").toString();
				logger.info("Customer type is ....getApproval................"+cusType);
			}
			String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			logger.info("Query   :   "+query1);
			String custCheckInTemp = ConnectionDAO.singleReturn(query1);
			logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
			if(custCheckInTemp==null)
			{
				insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
				
				 session.setAttribute("updateInMaker", "updateInMaker");
				 request.setAttribute("procval",insertInTempFlag );
				 logger.info("status: "+insertInTempFlag);
				 if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
				 {
					 logger.info("Save Only Customer address: ");
					 status = detail.saveCustomerAddress(vo);
				 }
			}
			else
				status = detail.saveCustomerAddress(vo);
			
		}
		else
		{
			status = detail.saveCustomerAddress(vo);
		}
	
		
		 if(status)
		 {
//			 String custStatus="";
//		    	custStatus=detail.checkCustomerStatus(id,cusType);
//		        session.setAttribute("custStatus", custStatus);
			 
			 session.removeAttribute("briefAddr");
			 
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 if(session.getAttribute("pParentGroup")!=null)
				{
					session.removeAttribute("pParentGroup");
				}
				if(session.getAttribute("strParentOption")!=null)
				{
					session.removeAttribute("strParentOption");
				}
				String cuaStatus="";
				  if(session.getAttribute("CUA")!=null)
					 {
					  cuaStatus = session.getAttribute("CUA").toString();
					 }
			 ArrayList<Object> briefAddr = detail.getAddressDetails(code,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("sms","S");
			 request.setAttribute("status", "");
			 if(session.getAttribute("pParentGroup")!=null)
				{
					session.removeAttribute("pParentGroup");
				}
				if(session.getAttribute("strParentOption")!=null)
					session.removeAttribute("strParentOption");
								
		 }
		 else
		 {		 request.setAttribute("sms","E");
			 request.setAttribute("status", "Insertion is failed!!!"); 
		 }
		 logger.info("save_address status: "+status);
		
		return mapping.getInputForward();
	}
	
	
	
	 public ActionForward save_individual_address(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception {
			
			 logger.info("In CustomerAddressAction in save_individual_address");
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				String userId="";
				String bDate="";
				if(userobj!=null)
				{
						userId=userobj.getUserId();
						bDate=userobj.getBusinessdate();
				}else{
					logger.info("here save_individual_address method of CustomerAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}

				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				//neeraj space end
				
			 String id="";
			 String pageStatuss="";
			 String updateFlag="";
			 String statusCase="";
			 String dealId = "";
				
	      		if(session.getAttribute("dealId")!=null)
	      		{
	      			
	      			dealId=session.getAttribute("dealId").toString();
	      		}
	      		else if(session.getAttribute("maxId")!=null)
	      		{
	      			dealId=session.getAttribute("maxId").toString();
	      		}
			 if(session.getAttribute("idividualId")!=null)
			 {
				 id = session.getAttribute("idividualId").toString();
			 }
			
			
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			    {
			    	updateFlag=session.getAttribute("updateFlag").toString();
			    		
			    }
			 if(session.getAttribute("statusCase")!=null)
				{
					statusCase = session.getAttribute("statusCase").toString();
				}
			CustomerSaveVo vo = new CustomerSaveVo();
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
			
			//added by Virender
			logger.info("Virender");
			ArrayList alDeleteQuery = new ArrayList(1);
			String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
			logger.info("hunterQry "+ hunterQry);
			alDeleteQuery.add(hunterQry);
			boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
			hunterQry = null;
			//Virender changes end
			
			vo.setSource(source);
			vo.setDealId(dealId);
			int chTest=0;
			if(!CommonFunction.checkNull(request.getParameter("chTest")).equalsIgnoreCase("")){
			 chTest=Integer.parseInt(CommonFunction.checkNull(request.getParameter("chTest")));
			}
			
			if(chTest==1){
				vo.setCommunicationAddress("Y");				
			}
			else{
				vo.setCommunicationAddress("N");				
			}
			vo.setPageStatus(pageStatuss);
			vo.setUpdateFlag(updateFlag);
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			logger.info("Implementation class: "+detail.getClass());
			 String commAddressCheck="";
			 String tableName="";
			 String updateInMaker="";
			 if(session.getAttribute("updateInMaker")!=null)
				{
				 updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
				{
					tableName="com_address_m_temp";
				}
				else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
				 {
					 tableName="cr_deal_address_m";
				 }
				 else
				{
					 if(statusCase!=null && statusCase.equals("UnApproved"))
					 {
						 tableName="com_address_m_temp";
					 }
					 else
					 {
							tableName="com_address_m";
							if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
								tableName="com_address_m_edit";
					 }
					
				}
			 String q1="select customer_type from gcd_customer_m where customer_id='"+vo.getBp_id1()+"'";
				String customerType=ConnectionDAO.singleReturn(q1);
				if(CommonFunction.checkNull(customerType).equalsIgnoreCase("I")){
					 ArrayList<Object> list=new ArrayList<Object>(); 
					  list=detail.getRelationShipFlagIndividual();
					  request.setAttribute("relationType",list);
				 }else{
					 ArrayList<Object> list=new ArrayList<Object>(); 
					  list=detail.getRelationShipFlagCorporate();
					  request.setAttribute("relationType",list);
				 }
				String gstQuery="select count(1) from com_address_m where BPID<>'"+vo.getBp_id1()+"'  and (GST_NO='" + vo.getGstIn() + "' AND GST_NO<>'')";
				 int gstCount=Integer.parseInt(ConnectionDAO.singleReturn(gstQuery));
				 if(gstCount>0){
					 request.setAttribute("gstNoExist","Y");
					 session.removeAttribute("briefAddr");
					 if(session.getAttribute("statusCase")!=null)
						{
							statusCase = session.getAttribute("statusCase").toString();
						}
					 if(session.getAttribute("updateInMaker")!=null)
						{
							updateInMaker = session.getAttribute("updateInMaker").toString();
						}
					
					 if(session.getAttribute("pParentGroup")!=null)
						{
							session.removeAttribute("pParentGroup");
						}
						if(session.getAttribute("strParentOption")!=null)
						{
							session.removeAttribute("strParentOption");
						}
						 String cuaStatus="";
						  if(session.getAttribute("CUA")!=null)
							 {
							  cuaStatus = session.getAttribute("CUA").toString();
							 }
					
					 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
					 customerList.add(vo);
					 request.setAttribute("customerList", customerList);
					 
					 ArrayList<Object> briefAddr = detail.getAddressDetails(vo.getBp_id1(),statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
					 session.setAttribute("briefAddr", briefAddr);
					 session.removeAttribute("strParentOption");
					 return mapping.getInputForward();
				}
			 // Start Change for check duplicate mobile no
				String mobileCheckPass=CommonFunction.checkNull(request.getParameter("mobileCheckPass"));
				logger.info("mobileCheckPass: "+mobileCheckPass+" tableName: "+tableName+" Mobile No "+vo.getPrimaryPhoneNo()+" customer Id "+vo.getBp_id1());
				if(CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS")){
					String qry1="select count(1) from "+tableName+" where bpid='"+vo.getBp_id1()+"' and PRIMARY_PHONE='"+vo.getPrimaryPhoneNo()+"' ";
					int count=Integer.parseInt(ConnectionDAO.singleReturn(qry1));
					if(count<1){
						String relation="N";
						vo.setRelation(relation);
					}
			}
				if(!CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS"))
				{
					String countCheckMobileNo=detail.getMobileNoStatus(tableName,CommonFunction.checkNull(vo.getPrimaryPhoneNo()),"",vo.getBp_id1());
								
					if(CommonFunction.checkNull(countCheckMobileNo).equalsIgnoreCase(""))
					{
						countCheckMobileNo="0";
					}
					int countCheckMobile=Integer.parseInt(countCheckMobileNo);
					countCheckMobileNo=null;
					
					
					if(countCheckMobile>0 )
					{
						 request.setAttribute("mobileNoCheckInsert","Y");
						 session.removeAttribute("briefAddr");
						 if(session.getAttribute("statusCase")!=null)
							{
								statusCase = session.getAttribute("statusCase").toString();
							}
						 if(session.getAttribute("updateInMaker")!=null)
							{
								updateInMaker = session.getAttribute("updateInMaker").toString();
							}
						
						 if(session.getAttribute("pParentGroup")!=null)
							{
								session.removeAttribute("pParentGroup");
							}
							if(session.getAttribute("strParentOption")!=null)
							{
								session.removeAttribute("strParentOption");
							}
							 String cuaStatus="";
							  if(session.getAttribute("CUA")!=null)
								 {
								  cuaStatus = session.getAttribute("CUA").toString();
								 }
						
						 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
						 customerList.add(vo);
						 request.setAttribute("customerList", customerList);
						 
						 ArrayList<Object> briefAddr = detail.getAddressDetails(vo.getBp_id1(),statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
						 session.setAttribute("briefAddr", briefAddr);
						 session.removeAttribute("strParentOption");
						 return mapping.getInputForward();
					}
					/*else if(countCheckMobile>0 && CommonFunction.checkNull(relationFlag).equalsIgnoreCase("N")){
						 request.setAttribute("mobileNoCheckInsertRelationFlag","Y");
						 session.removeAttribute("briefAddr");
						 if(session.getAttribute("statusCase")!=null)
							{
								statusCase = session.getAttribute("statusCase").toString();
							}
						 if(session.getAttribute("updateInMaker")!=null)
							{
								updateInMaker = session.getAttribute("updateInMaker").toString();
							}
						
						 if(session.getAttribute("pParentGroup")!=null)
							{
								session.removeAttribute("pParentGroup");
							}
							if(session.getAttribute("strParentOption")!=null)
							{
								session.removeAttribute("strParentOption");
							}
							 String cuaStatus="";
							  if(session.getAttribute("CUA")!=null)
								 {
								  cuaStatus = session.getAttribute("CUA").toString();
								 }
						
						 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
						 customerList.add(vo);
						 request.setAttribute("customerList", customerList);
						 
						 ArrayList<Object> briefAddr = detail.getAddressDetails(vo.getBp_id1(),statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
						 session.setAttribute("briefAddr", briefAddr);
						 session.removeAttribute("strParentOption");
						 return mapping.getInputForward();
					}*/
	         }
				// End Change for check duplicate mobile no
			
			 String query="Select COMMUNICATION_ADDRESS from "+tableName+" where BPID="+vo.getBp_id1();
			 logger.info("query   :   "+query);
			 commAddressCheck=ConnectionDAO.singleReturn(query);
			 if(commAddressCheck!=null)
				{
					 if(commAddressCheck.equals("Y"))
					 {
						 request.setAttribute("commAddressCheck", "Communcation Address is Already Exist!!!");
						 request.setAttribute("comm", "commAddExist");
						 vo.setCommunicationAddress("N");
					 }
					 else
					 {
						request.setAttribute("comm","");
						 vo.setCommunicationAddress("Y");
					 }
				}
				else
				{
					if(vo.getCommunicationAddress().equals("Y"))
					{
						vo.setCommunicationAddress("Y");
					}
					else
					{
						vo.setCommunicationAddress("N");
					}
					
				}
			
			vo.setStatusCase(statusCase);
			String insertInTempFlag="";
			String cusType="";
			 boolean status =false;
			 
			if(!statusCase.equals("") )
			{
				if(session.getAttribute("cusType")!=null)
				{
					cusType=session.getAttribute("cusType").toString();
				}
				String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
				logger.info("Query  :  "+query1);
				String custCheckInTemp = ConnectionDAO.singleReturn(query1);
				logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
				if(custCheckInTemp==null)
				{
					insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
					 session.setAttribute("updateInMaker", "updateInMaker");
					 logger.info("status: "+insertInTempFlag);
					 if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
					 {
						 logger.info("Save Only Customer Address: ");
						 status = detail.saveCustomerAddress(vo);
					 }
					 request.setAttribute("procval",insertInTempFlag );
					// logger.info("procval-1111111111------->"+request.getAttribute("procval"));
				}
				else
					 status = detail.saveCustomerAddress(vo);
			
			}
			else
			{
				 logger.info("ELSE Save Only Customer Address: ");
				status = detail.saveCustomerAddress(vo);
			}
			 
			 if(status)
			 {
				 
//				 String custStatus="";
//			    	custStatus=detail.checkCustomerStatus(Integer.parseInt(id),cusType);
//			        session.setAttribute("custStatus", custStatus);
				 session.removeAttribute("briefAddr");
				 if(session.getAttribute("statusCase")!=null)
					{
						statusCase = session.getAttribute("statusCase").toString();
					}
				 if(session.getAttribute("updateInMaker")!=null)
					{
						updateInMaker = session.getAttribute("updateInMaker").toString();
					}
				
				 if(session.getAttribute("pParentGroup")!=null)
					{
						session.removeAttribute("pParentGroup");
					}
					if(session.getAttribute("strParentOption")!=null)
					{
						session.removeAttribute("strParentOption");
					}
					 String cuaStatus="";
					  if(session.getAttribute("CUA")!=null)
						 {
						  cuaStatus = session.getAttribute("CUA").toString();
						 }
				 ArrayList<Object> briefAddr = detail.getAddressDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
				 session.setAttribute("briefAddr", briefAddr);
				 request.setAttribute("sms","I");
				 request.setAttribute("status", "");
			 }
			 else
			 {
				 request.setAttribute("sms","E");
				 request.setAttribute("status", ""); 
			 }
			 logger.info(" save_individual_address status: "+status);
			 logger.info("procval--save_individual_address------>");
			return mapping.getInputForward();
		}
	 
	 public ActionForward save_individual_reference(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception {
			
			 logger.info("In CustomerAddressAction in save_individual_reference");
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				String userId="";
				String bDate="";
				if(userobj!=null)
				{
						userId=userobj.getUserId();
						bDate=userobj.getBusinessdate();
				}else{
					logger.info("here save_individual_reference method of CustomerAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				//neeraj space end
			 String id="";
			 String pageStatuss="";
			 String updateFlag="";
			 String statusCase="";
			 String CommonId="";
			 if(session.getAttribute("dealId")!=null)
	      		{
	      			
				 CommonId=session.getAttribute("dealId").toString();
	      		}
	      		else if(session.getAttribute("maxId")!=null)
	      		{
	      			CommonId=session.getAttribute("maxId").toString();
	      		}
			 if(session.getAttribute("loanId")!=null){
				 CommonId=(String) session.getAttribute("loanId").toString();
						
					}
			 request.setAttribute("CommonId",CommonId);
			 if(session.getAttribute("idividualId")!=null)
			 {
				 id = session.getAttribute("idividualId").toString();
			 }
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			    {
			    	updateFlag=session.getAttribute("updateFlag").toString();
			    		
			    }
			 if(session.getAttribute("statusCase")!=null)
				{
					statusCase = session.getAttribute("statusCase").toString();
				}
			 String dealId = "";
				
	      		if(session.getAttribute("dealId")!=null)
	      		{
	      			
	      			dealId=session.getAttribute("dealId").toString();
	      		}
	      		else if(session.getAttribute("maxId")!=null)
	      		{
	      			dealId=session.getAttribute("maxId").toString();
	      		}
				//added by Virender
				logger.info("Virender");
				ArrayList alDeleteQuery = new ArrayList(1);
				String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
				logger.info("hunterQry "+ hunterQry);
				alDeleteQuery.add(hunterQry);
				boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
				hunterQry = null;
				//Virender changes end
			 
			CustomerSaveVo vo = new CustomerSaveVo();
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
			vo.setPageStatus(pageStatuss);
			vo.setUpdateFlag(updateFlag);
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			vo.setSource(source);
			if(CommonFunction.checkNull(vo.getBp_type()).equalsIgnoreCase("")){
				vo.setBp_type("CS");
			}
			 if(funid==2000310 || funid==2000311){
				 vo.setTxnId("");
			  }else{
				  vo.setTxnId(CommonId); 
			  }
			CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
			logger.info("Implementation class: "+detail.getClass());
			String tableName="";
			String updateInMaker="";
			
			 if(session.getAttribute("updateInMaker")!=null)
				{
				 updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
				{
					tableName="com_reference_m_temp";
				}
				else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
				 {
					 tableName="cr_deal_reference_m";
				 }
				 else
				{
					 if(statusCase!=null && statusCase.equals("UnApproved"))
					 {
						 tableName="com_reference_m_temp";
					 }
					 else
					 {
							tableName="com_reference_m";
							if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
								tableName="com_reference_m_edit";
					 }
					
				}
			vo.setTableToInsert(tableName);
			vo.setStatusCase(statusCase);
			String insertInTempFlag="";
			String cusType="";
			boolean status =false;
			boolean firstNameCheck=detail.getFirstNameStatus(vo); 
			logger.info("firstNameCheck: "+firstNameCheck);
			if(!firstNameCheck)
			{
				if(!statusCase.equals("") )
				{
					if(session.getAttribute("cusType")!=null)
					{
						cusType=session.getAttribute("cusType").toString();
					}
					String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
					logger.info("Query  :  "+query1);
					String custCheckInTemp = ConnectionDAO.singleReturn(query1);
					logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
					if(custCheckInTemp==null)
					{
						
						insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
						 logger.info("status: "+insertInTempFlag);
						if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
						{
							logger.info("Save Only Customer Reference: ");
							status = detail.saveCustomerReference(vo);
							
						}
						session.setAttribute("updateInMaker", "updateInMaker");
						request.setAttribute("procval",insertInTempFlag );
					}
					else
						status = detail.saveCustomerReference(vo);
					
				}
				else
				{
					logger.info("ELSE Save Only Customer Reference: ");
					status = detail.saveCustomerReference(vo);
				}
				if(status)
				 {
					 session.removeAttribute("briefAddr");
					 if(session.getAttribute("statusCase")!=null)
						{
							statusCase = session.getAttribute("statusCase").toString();
						}
					 if(session.getAttribute("updateInMaker")!=null)
						{
							updateInMaker = session.getAttribute("updateInMaker").toString();
						}
					
					 if(session.getAttribute("pParentGroup")!=null)
						{
							session.removeAttribute("pParentGroup");
						}
						if(session.getAttribute("strParentOption")!=null)
						{
							session.removeAttribute("strParentOption");
						}
						String cuaStatus="";
						  if(session.getAttribute("CUA")!=null)
							 {
							  cuaStatus = session.getAttribute("CUA").toString();
							 }
					 ArrayList<Object> briefAddr = detail.getRefrenceDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
					 session.setAttribute("briefAddr", briefAddr);
					 request.setAttribute("sms","I");
					 request.setAttribute("status", "");
				 }
				 else
				 {
					 request.setAttribute("sms","E");
					 request.setAttribute("status", ""); 
				 }
				
			}else
			{
				  String cuaStatus="";
				  if(session.getAttribute("CUA")!=null)
					 {
					  cuaStatus = session.getAttribute("CUA").toString();
					 }
				 logger.info("dublicateName: "+vo.getFirstName());
				 ArrayList<Object> briefAddr = detail.getRefrenceDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
				
				session.setAttribute("briefAddr", briefAddr);
				request.setAttribute("dublicateName", "dublicateName");
			}
			 
			 logger.info("save_individual_reference status: "+status);
			 return mapping.findForward("successRef");
			 
	}	 
	 
	  public ActionForward update_address(ActionMapping mapping, ActionForm form,
				HttpServletRequest request, HttpServletResponse response) throws Exception {
		
			 logger.info("In CustomerAddressAction in update_address");
			
			    HttpSession session = request.getSession();
				UserObject userobj=(UserObject)session.getAttribute("userobject");
				
			 	String userId="";
				String bDate="";
				if(userobj!=null)
				{
						userId=userobj.getUserId();
						bDate=userobj.getBusinessdate();
				} else{
					logger.info("here in method of update_address CustomerAddressAction action the session is out----------------");
					return mapping.findForward("sessionOut");
				}
				DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
				Object sessionId = session.getAttribute("sessionID");
				ServletContext context = getServlet().getServletContext();
				String strFlag="";	
				if(sessionId!=null)
				{
					strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
				}
				
				logger.info("strFlag .............. "+strFlag);
				if(!strFlag.equalsIgnoreCase(""))
				{
					if(strFlag.equalsIgnoreCase("sameUserSession"))
					{
						context.removeAttribute("msg");
						context.removeAttribute("msg1");
					}
					else if(strFlag.equalsIgnoreCase("BODCheck"))
					{
						context.setAttribute("msg", "B");
					}
					return mapping.findForward("logout");
				}
				//code added by neeraj
				String source="NE";
				String functionId=(String)session.getAttribute("functionId");
				int funid=Integer.parseInt(functionId);		
				if(funid==4000122 || funid==4000123)
					source="ED";
				//neeraj space end
			 int id=0;
			 int addId=0;
			 int status=0;
			 String recStatus="";
			 String statusCase="";
			 String updateFlag="";
			 String pageStatuss="";
			 String dealId = "";
				
	      		if(session.getAttribute("dealId")!=null)
	      		{
	      			
	      			dealId=session.getAttribute("dealId").toString();
	      		}
	      		else if(session.getAttribute("maxId")!=null)
	      		{
	      			dealId=session.getAttribute("maxId").toString();
	      		}
	      		
	    		//added by Virender
	    		logger.info("Virender");
	    		ArrayList alDeleteQuery = new ArrayList(1);
	    		String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
	    		logger.info("hunterQry "+ hunterQry);
	    		alDeleteQuery.add(hunterQry);
	    		boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
	    		hunterQry = null;
	    		//Virender changes end
	      		
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
				logger.info("Implementation class: "+detail.getClass());
			 if(!CommonFunction.checkNull(request.getParameter("addId")).equalsIgnoreCase(""))
			 {
				 addId=Integer.parseInt(request.getParameter("addId"));
			 }
			 
			 if(session.getAttribute("recStatus")!=null)
			 {
			    	recStatus=session.getAttribute("recStatus").toString();
			 }
			 if(session.getAttribute("updateFlag")!=null)
			 {
				 updateFlag=session.getAttribute("updateFlag").toString();
				 
			 }
			 if(session.getAttribute("statusCase")!=null)
			    {
			    	statusCase=session.getAttribute("statusCase").toString();
			    		
			    }
			 String updateInMaker="";
			 if(session.getAttribute("updateInMaker")!=null)
			    {
			    	updateInMaker=session.getAttribute("updateInMaker").toString();
			    }
		
			 if(session.getAttribute("idividualId")!=null && !session.getAttribute("idividualId").equals(""))
			 {
				 id = Integer.parseInt(session.getAttribute("idividualId").toString());
					CustomerSaveVo vo = new CustomerSaveVo();
					org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
					vo.setDealId(dealId);
					int chTest=0;
					if(!CommonFunction.checkNull(request.getParameter("chTest")).equalsIgnoreCase("")){
					 chTest=Integer.parseInt(CommonFunction.checkNull(request.getParameter("chTest")));
					}
					
					if(chTest==1){						
						vo.setCommunicationAddress("Y");						
					}
					else{
						vo.setCommunicationAddress("N");						
					}
					
						 vo.setMakerId(userId);
						 vo.setMakerDate(bDate);
					 	String cusType="";
					
						if(session.getAttribute("cusType")!=null)
						{
							cusType=session.getAttribute("cusType").toString();
							logger.info("Customer type is ....getApproval................"+cusType);
						}
						String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
						String custCheckInTemp = ConnectionDAO.singleReturn(query);
						
						String insertInTempFlag="";
						
						String commAddressCheck="";
						String tableName="";
						if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
						{
							tableName="com_address_m_temp";
						}
						else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
						 {
							 tableName="cr_deal_address_m";
//							 session.setAttribute("updateInDeal", "updateInDeal");
						 }
						 else
						{
							 if(statusCase!=null && statusCase.equals("UnApproved"))
							 {
								 tableName="com_address_m_temp";
							 }
							 else
							 {
									tableName="com_address_m";
									if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
										tableName="com_address_m_edit";
							 }
							
						}
						String bpIdQuery="select bpid from "+tableName+" where address_id='"+addId+"'";
						String bpId=ConnectionDAO.singleReturn(bpIdQuery);
						String q1="select customer_type from gcd_customer_m where customer_id=(select bpid from "+tableName+" where address_id='"+addId+"')";
						String customerType=ConnectionDAO.singleReturn(q1);
						if(CommonFunction.checkNull(customerType).equalsIgnoreCase("I")){
							 ArrayList<Object> list=new ArrayList<Object>(); 
							  list=detail.getRelationShipFlagIndividual();
							  request.setAttribute("relationType",list);
						 }else{
							 ArrayList<Object> list=new ArrayList<Object>(); 
							  list=detail.getRelationShipFlagCorporate();
							  request.setAttribute("relationType",list);
						 }
						String gstQuery="select count(1) from com_address_m where BPID not in (select bpid from "+tableName+" where address_id='"+addId+"')  and (GST_NO='" + vo.getGstIn() + "' AND GST_NO<>'')";
						 int gstCount=Integer.parseInt(ConnectionDAO.singleReturn(gstQuery));
						 if(gstCount>0){
							 request.setAttribute("gstNoExist","Y");
							 if(session.getAttribute("updateInMaker")!=null)
								{
									updateInMaker = session.getAttribute("updateInMaker").toString();
								}
							 
							 if(session.getAttribute("pageStatuss")!=null)
							 {
								 pageStatuss = session.getAttribute("pageStatuss").toString();
							 }
							 String cuaStatus="";
							  if(session.getAttribute("CUA")!=null)
								 {
								  cuaStatus = session.getAttribute("CUA").toString();
								 }
							
							 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
							 vo.setAddId(addId+"");
							 logger.info("Country: "+vo.getCountry());
							 customerList.add(vo);
							 request.setAttribute("customerList", customerList);
							 
							 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
							 session.setAttribute("briefAddr", briefAddr);
							 session.removeAttribute("strParentOption");
							 return mapping.getInputForward();
						}
                     // Start Change for check duplicate mobile no
						String mobileCheckPass=CommonFunction.checkNull(request.getParameter("mobileCheckPass"));
						logger.info("mobileCheckPass: "+mobileCheckPass+" tableName: "+tableName+" Mobile No "+vo.getPrimaryPhoneNo()+" ADDRESS ID "+addId);
						if(CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS")){
							String qry1="select count(1) from "+tableName+" where bpid='"+bpId+"' and ADDRESS_ID<>'"+addId+"' and PRIMARY_PHONE='"+vo.getPrimaryPhoneNo()+"' ";
							int count=Integer.parseInt(ConnectionDAO.singleReturn(qry1));
							if(count<1){
								String relation="N";
								vo.setRelation(relation);
							}
					}
						if(!CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS"))
						{
							String countCheckMobileNo=detail.getMobileNoStatus(tableName,CommonFunction.checkNull(vo.getPrimaryPhoneNo()),CommonFunction.checkNull(addId),bpId);
							
							if(CommonFunction.checkNull(countCheckMobileNo).equalsIgnoreCase(""))
							{
								countCheckMobileNo="0";
							}
							int countCheckMobile=Integer.parseInt(countCheckMobileNo);
							countCheckMobileNo=null;
						
							if(countCheckMobile>0 )
							{
								 request.setAttribute("mobileNoCheck","Y");
								 if(session.getAttribute("updateInMaker")!=null)
									{
										updateInMaker = session.getAttribute("updateInMaker").toString();
									}
								 
								 if(session.getAttribute("pageStatuss")!=null)
								 {
									 pageStatuss = session.getAttribute("pageStatuss").toString();
								 }
								 String cuaStatus="";
								  if(session.getAttribute("CUA")!=null)
									 {
									  cuaStatus = session.getAttribute("CUA").toString();
									 }
								
								 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
								 vo.setAddId(addId+"");
								 logger.info("Country: "+vo.getCountry());
								 customerList.add(vo);
								 request.setAttribute("customerList", customerList);
								 
								 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
								 session.setAttribute("briefAddr", briefAddr);
								 session.removeAttribute("strParentOption");
								 return mapping.getInputForward();
							}
							/*else if(countCheckMobile>0 && CommonFunction.checkNull(relationFlag).equalsIgnoreCase("N"))
							{
								 request.setAttribute("mobileNoCheckRelationFlag","Y");
								 if(session.getAttribute("updateInMaker")!=null)
									{
										updateInMaker = session.getAttribute("updateInMaker").toString();
									}
								 
								 if(session.getAttribute("pageStatuss")!=null)
								 {
									 pageStatuss = session.getAttribute("pageStatuss").toString();
								 }
								 String cuaStatus="";
								  if(session.getAttribute("CUA")!=null)
									 {
									  cuaStatus = session.getAttribute("CUA").toString();
									 }
								
								 ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
								 vo.setAddId(addId+"");
								 logger.info("Country: "+vo.getCountry());
								 customerList.add(vo);
								 request.setAttribute("customerList", customerList);
								 
								 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
								 session.setAttribute("briefAddr", briefAddr);
								 session.removeAttribute("strParentOption");
								 return mapping.getInputForward();
							}*/
			            }
						// End Change for check duplicate mobile no
						int commNo=0;
						String addressId="";
						String query1="Select count(*) from (select * from "+tableName+" where BPID="+id+") t where t.COMMUNICATION_ADDRESS='Y'";
						String query2="Select ADDRESS_ID from (select * from "+tableName+" where BPID="+id+") t where t.COMMUNICATION_ADDRESS='Y'";
						logger.info("Query  :  "+query1);
						commAddressCheck=ConnectionDAO.singleReturn(query1);
						logger.info("Query  :  "+query2);
						addressId =ConnectionDAO.singleReturn(query2);
						commNo = Integer.parseInt(commAddressCheck);
						if(vo.getCommunicationAddress().equals("Y"))
						{
							logger.info("saurabh singh"+vo.getCommunicationAddress()+"value of count "+commNo+"kkkk"+vo.getCommunicationAddress().equals("Y"));
							if(commNo>=1)
							{
								if(Integer.parseInt(addressId)!=addId)
								{
									vo.setCommunicationAddress("N");
									request.setAttribute("comm", "commAddExist");
									
									request.setAttribute("commAddressCheck", "Communcation Address is Already Exist!!!");
								}
								else
								{
									vo.setCommunicationAddress("Y");
								}
							}
							else if(commNo<1)
								{
									if(vo.getCommunicationAddress().equals("Y"))
									{
										vo.setCommunicationAddress("Y");
									}
									else
									{
										vo.setCommunicationAddress("N");
									}
								}
								else
								{
									 
									 vo.setCommunicationAddress("N");
								}
						}
						else
						{
							vo.setCommunicationAddress("N");
						}
						
						if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
						{
							 insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
							 request.setAttribute("procval",insertInTempFlag );
							 logger.info("status: "+insertInTempFlag);
							 status = detail.updateCustomerAddress(vo,id,addId, recStatus,statusCase,updateFlag,pageStatuss,source);
							 if(status>0)
							 {
								 session.removeAttribute("detailcountryList");
								 session.removeAttribute("detailcityList");
								 session.removeAttribute("detailregionList");
								 session.removeAttribute("individualInfo");
								 session.removeAttribute("addressInfo");
								 request.setAttribute("sms","CI");
								 session.setAttribute("updateInMaker", "updateInMaker");
						
							 }
						}
					 else
					 {
						 status = detail.updateCustomerAddress(vo,id,addId, recStatus,statusCase,updateFlag,pageStatuss,source);
						 if(status>0)
						 {
							 request.setAttribute("sms","CI");
						 }
					 }
//						String custStatus="";
//				    	custStatus=detail.checkCustomerStatus(id,cusType);
//				        session.setAttribute("custStatus", custStatus);
				
				}
			 else if(session.getAttribute("corporateId")!=null)
			 {
				
				    id = Integer.parseInt(session.getAttribute("corporateId").toString());
				    logger.info("In CustomerAddressAction in update_address"+session.getAttribute("corporateId"));
					CustomerSaveVo vo = new CustomerSaveVo();
					org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
					vo.setDealId(dealId);
					int chTest=0;
					if(!CommonFunction.checkNull(request.getParameter("chTest")).equalsIgnoreCase("")){
					 chTest=Integer.parseInt(CommonFunction.checkNull(request.getParameter("chTest")));
					}
					
					if(chTest==1){						
						vo.setCommunicationAddress("Y");						
					}	else{
						vo.setCommunicationAddress("N");						
					}
					vo.setMakerId(userId);
					 vo.setMakerDate(bDate);
					 if(session.getAttribute("pageStatuss")!=null)
					 {
						 pageStatuss = session.getAttribute("pageStatuss").toString();
					 }
					String cusType="";
					
					if(session.getAttribute("cusType")!=null)
					{
						cusType=session.getAttribute("cusType").toString();
						logger.info("Customer type is ....getApproval................"+cusType);
					}
					String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
					String custCheckInTemp = ConnectionDAO.singleReturn(query);
					String insertInTempFlag="";

					String commAddressCheck="";
					String tableName="";
					if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
					{
						tableName="com_address_m_temp";
					}
					else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
					 {
						 tableName="cr_deal_address_m";
//						 session.setAttribute("updateInDeal", "updateInDeal");
					 }
					 else
					{
						 if(statusCase!=null && statusCase.equals("UnApproved"))
						 {
							 tableName="com_address_m_temp";
						 }
						 else
						 {
							 tableName="com_address_m";
							 if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
									tableName="com_address_m_edit";
							 
						 }
					}
					String bpIdQuery="select bpid from "+tableName+" where address_id='"+addId+"'";
					String bpId=ConnectionDAO.singleReturn(bpIdQuery);
					String q1="select customer_type from gcd_customer_m where customer_id=(select bpid from "+tableName+" where address_id='"+addId+"')";
					String customerType=ConnectionDAO.singleReturn(q1);
					if(CommonFunction.checkNull(customerType).equalsIgnoreCase("I")){
						 ArrayList<Object> list=new ArrayList<Object>(); 
						  list=detail.getRelationShipFlagIndividual();
						  request.setAttribute("relationType",list);
					 }else{
						 ArrayList<Object> list=new ArrayList<Object>(); 
						  list=detail.getRelationShipFlagCorporate();
						  request.setAttribute("relationType",list);
					 }
					String gstQuery="select count(1) from com_address_m where BPID not in (select bpid from "+tableName+" where address_id='"+addId+"') and (GST_NO='" + vo.getGstIn() + "' AND GST_NO<>'')";
					 int gstCount=Integer.parseInt(ConnectionDAO.singleReturn(gstQuery));
					 if(gstCount>0){
						 request.setAttribute("gstNoExist","Y");
						 if(session.getAttribute("updateInMaker")!=null)
							{
								updateInMaker = session.getAttribute("updateInMaker").toString();
							}
						 
						 if(session.getAttribute("pageStatuss")!=null)
						 {
							 pageStatuss = session.getAttribute("pageStatuss").toString();
						 }
						 String cuaStatus="";
						  if(session.getAttribute("CUA")!=null)
							 {
							  cuaStatus = session.getAttribute("CUA").toString();
							 }
						  
						   ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
						   vo.setAddId(addId+"");
							 customerList.add(vo);
							 request.setAttribute("customerList", customerList);
						 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
						 session.setAttribute("briefAddr", briefAddr);
						 session.removeAttribute("strParentOption");
						 return mapping.getInputForward();
					}
					// Start Change for check duplicate mobile no
					String mobileCheckPass=CommonFunction.checkNull(request.getParameter("mobileCheckPass"));
					logger.info("mobileCheckPass: "+mobileCheckPass+" tableName: "+tableName+" Mobile No "+vo.getPrimaryPhoneNo()+" customer Id "+id);
					if(CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS")){
						String qry1="select count(1) from "+tableName+" where bpid='"+bpId+"' and ADDRESS_ID<>'"+addId+"' and PRIMARY_PHONE='"+vo.getPrimaryPhoneNo()+"' ";
						int count=Integer.parseInt(ConnectionDAO.singleReturn(qry1));
						if(count<1){
							String relation="N";
							vo.setRelation(relation);
						}
				}
					if(!CommonFunction.checkNull(mobileCheckPass).equalsIgnoreCase("PASS"))
					{
						String countCheckMobileNo=detail.getMobileNoStatus(tableName,CommonFunction.checkNull(vo.getPrimaryPhoneNo()),CommonFunction.checkNull(addId),bpId);
						
						if(CommonFunction.checkNull(countCheckMobileNo).equalsIgnoreCase(""))
						{
							countCheckMobileNo="0";
						}
						int countCheckMobile=Integer.parseInt(countCheckMobileNo);
						countCheckMobileNo=null;
						
						if(countCheckMobile>0  )
						{
							 request.setAttribute("mobileNoCheck","Y");
							 if(session.getAttribute("updateInMaker")!=null)
								{
									updateInMaker = session.getAttribute("updateInMaker").toString();
								}
							 
							 if(session.getAttribute("pageStatuss")!=null)
							 {
								 pageStatuss = session.getAttribute("pageStatuss").toString();
							 }
							 String cuaStatus="";
							  if(session.getAttribute("CUA")!=null)
								 {
								  cuaStatus = session.getAttribute("CUA").toString();
								 }
							  
							   ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
							   vo.setAddId(addId+"");
								 customerList.add(vo);
								 request.setAttribute("customerList", customerList);
							 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
							 session.setAttribute("briefAddr", briefAddr);
							 session.removeAttribute("strParentOption");
							 return mapping.getInputForward();
						}
						/*if(countCheckMobile>0 && CommonFunction.checkNull(relationFlag).equalsIgnoreCase("N") )
						{
							 request.setAttribute("mobileNoCheckRelationFlag","Y");
							 if(session.getAttribute("updateInMaker")!=null)
								{
									updateInMaker = session.getAttribute("updateInMaker").toString();
								}
							 
							 if(session.getAttribute("pageStatuss")!=null)
							 {
								 pageStatuss = session.getAttribute("pageStatuss").toString();
							 }
							 String cuaStatus="";
							  if(session.getAttribute("CUA")!=null)
								 {
								  cuaStatus = session.getAttribute("CUA").toString();
								 }
							  
							   ArrayList<CustomerSaveVo> customerList = new ArrayList<CustomerSaveVo>();//detail.getCustomerAddressDetail(addId+"",pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
							   vo.setAddId(addId+"");
								 customerList.add(vo);
								 request.setAttribute("customerList", customerList);
							 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
							 session.setAttribute("briefAddr", briefAddr);
							 session.removeAttribute("strParentOption");
							 return mapping.getInputForward();
						}*/
		            }
					// End Change for check duplicate mobile no
					int commNo=0;
					String addressId ="";
					commAddressCheck=ConnectionDAO.singleReturn("Select count(*) from (select * from "+tableName+" where BPID="+id+") t where t.COMMUNICATION_ADDRESS='Y'");
					addressId =ConnectionDAO.singleReturn("Select ADDRESS_ID from (select * from "+tableName+" where BPID="+id+") t where t.COMMUNICATION_ADDRESS='Y'");
					commNo = Integer.parseInt(commAddressCheck);
					
					if(vo.getCommunicationAddress().equals("Y"))
					{
						
						if(commNo>=1)
						{
								if(Integer.parseInt(addressId)!=addId)
								{
									vo.setCommunicationAddress("N");									
									request.setAttribute("comm", "commAddExist");
									request.setAttribute("commAddressCheck", "Communcation Address is Already Exist!!!");
								}
								else
								{
									vo.setCommunicationAddress("Y");
								}
						}
						else if(commNo<1)
						{
							if(vo.getCommunicationAddress().equals("Y"))
							{
								vo.setCommunicationAddress("Y");
							}
							else
							{
							vo.setCommunicationAddress("N");
							}
						}
						else
						{
							 
							 vo.setCommunicationAddress("N");
						}
					}
					else
					{
						vo.setCommunicationAddress("N");
					}
										
					if((custCheckInTemp==null ||custCheckInTemp=="") && session.getAttribute("statusCase")!=null)
					{
						 insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
						 request.setAttribute("procval",insertInTempFlag );
						 logger.info("status: "+insertInTempFlag);
						 status = detail.updateCustomerAddress(vo,id,addId,recStatus,statusCase,updateFlag,pageStatuss,source);
					 if(status>0)
					 {
						 session.removeAttribute("detailcountryList");
						 session.removeAttribute("detailcityList");
						 session.removeAttribute("detailregionList");
						 session.removeAttribute("individualInfo");
						 session.removeAttribute("addressInfo");
						 request.setAttribute("sms","C");
						 request.setAttribute("sms","CU");
						 session.setAttribute("updateInMaker", "updateInMaker");
					 }
					}
					 else
					 {
						 logger.info("in update address without insert ................................");
						 status = detail.updateCustomerAddress(vo,id,addId,recStatus,statusCase,updateFlag,pageStatuss,source);
						 if(status>0)
						 {
							 request.setAttribute("sms","CU");
						 }
					 }
//					String custStatus="";
//			    	custStatus=detail.checkCustomerStatus(id,cusType);
//			        session.setAttribute("custStatus", custStatus);
					
			 }
					
					 if(session.getAttribute("updateInMaker")!=null)
						{
							updateInMaker = session.getAttribute("updateInMaker").toString();
						}
					 
					 if(session.getAttribute("pageStatuss")!=null)
					 {
						 pageStatuss = session.getAttribute("pageStatuss").toString();
					 }
					 String cuaStatus="";
					  if(session.getAttribute("CUA")!=null)
						 {
						  cuaStatus = session.getAttribute("CUA").toString();
						 }
					 ArrayList<Object> briefAddr = detail.getAddressDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
					 session.setAttribute("briefAddr", briefAddr);
					 session.removeAttribute("strParentOption");
					 //request.setAttribute("sms","S");
			 logger.info("update_address status: "+status);
			return mapping.getInputForward();
		}

public ActionForward update_Reference(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		logger.info("In update_Reference in update_Reference");

	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
	 	String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		} else{
			logger.info("here in method of update_Reference CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 int id=0;
	 int refId=0;
	 int status=0;
	 String recStatus="";
	 String statusCase="";
	 String updateFlag="";
	 String pageStatuss="";
 	 String CommonId="";
	 if(session.getAttribute("dealId")!=null)
  		{
  			
		 CommonId=session.getAttribute("dealId").toString();
  		}
  		else if(session.getAttribute("maxId")!=null)
  		{
  			CommonId=session.getAttribute("maxId").toString();
  		}
	 if(session.getAttribute("loanId")!=null){
		 CommonId=(String) session.getAttribute("loanId").toString();
				
			}
	 request.setAttribute("CommonId",CommonId);
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+detail.getClass());
	 if(request.getParameter("refId")!=null)
	 {
		 refId=Integer.parseInt(request.getParameter("refId"));
	 }
	 
	 if(session.getAttribute("recStatus")!=null)
	 {
	    	recStatus=session.getAttribute("recStatus").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	 {
		 updateFlag=session.getAttribute("updateFlag").toString();
		 
	 }
	 if(session.getAttribute("statusCase")!=null)
	    {
	    	statusCase=session.getAttribute("statusCase").toString();
	    		
	    }
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
	    {
	    	updateInMaker=session.getAttribute("updateInMaker").toString();
	    }

	 if(session.getAttribute("idividualId")!=null && !session.getAttribute("idividualId").equals(""))
	 {
		 id = Integer.parseInt(session.getAttribute("idividualId").toString());
			CustomerSaveVo vo = new CustomerSaveVo();
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
			
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			 	String cusType="";
			
				if(session.getAttribute("cusType")!=null)
				{
					cusType=session.getAttribute("cusType").toString();
					logger.info("Customer type is ....getApproval................"+cusType);
				}
				String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
				String custCheckInTemp = ConnectionDAO.singleReturn(query);
				
				String insertInTempFlag="";
										
				if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
				{
					 insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
					 request.setAttribute("procval",insertInTempFlag );
					 logger.info("status: "+insertInTempFlag);
					 status = detail.updateIndReference(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					 if(status>0)
					 {
						 session.removeAttribute("detailcountryList");
						 session.removeAttribute("detailcityList");
						 session.removeAttribute("detailregionList");
						 session.removeAttribute("individualInfo");
						 session.removeAttribute("addressInfo");
						 request.setAttribute("sms","CI");
						 session.setAttribute("updateInMaker", "updateInMaker");
				
					 }
				}
				else
				{
					status = detail.updateIndReference(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					if(status>0)
					{
						request.setAttribute("sms","CI");
					}
				}
		
		}			
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
				 ArrayList<Object> list=new ArrayList<Object>(); 
				  list=detail.getRelationDeatil();
				  
			 ArrayList<Object> briefAddr = detail.getRefrenceDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("relationType",list);
			 
			 logger.info("update_Reference status: "+status);
			 
			 return mapping.findForward("successRef");

	}

//Ritu
public ActionForward save_corporate_reference(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
	logger.info("RITU......");
	 logger.info("In save_corporate_reference in save_individual_reference");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here save_corporate_reference method of CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 String id="";
	 String pageStatuss="";
	 String updateFlag="";
	 String statusCase="";
	 if(session.getAttribute("corporateId")!=null)
	 {
		 id = session.getAttribute("corporateId").toString();
	 }
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	    {
	    	updateFlag=session.getAttribute("updateFlag").toString();
	    		
	    }
	 if(session.getAttribute("statusCase")!=null)
		{
			statusCase = session.getAttribute("statusCase").toString();
		}
	 
	 String dealId = "";
		
		if(session.getAttribute("dealId")!=null)
		{
			
			dealId=session.getAttribute("dealId").toString();
		}
		else if(session.getAttribute("maxId")!=null)
		{
			dealId=session.getAttribute("maxId").toString();
		}
		//added by Virender
		logger.info("Virender");
		ArrayList alDeleteQuery = new ArrayList(1);
		String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
		logger.info("hunterQry "+ hunterQry);
		alDeleteQuery.add(hunterQry);
		boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
		hunterQry = null;
		//Virender changes end
	 
	CustomerSaveVo vo = new CustomerSaveVo();
	org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
	vo.setSource(source);
	vo.setPageStatus(pageStatuss);
	vo.setUpdateFlag(updateFlag);
	vo.setMakerId(userId);
	vo.setMakerDate(bDate);			
	CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	logger.info("Implementation class: "+detail.getClass());
	String tableName="";
	String updateInMaker="";
	logger.info("getBpId.....ritu"+vo.getBpId());
	 if(session.getAttribute("updateInMaker")!=null)
		{
		 updateInMaker = session.getAttribute("updateInMaker").toString();
		}
	 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_reference_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			 tableName="cr_deal_reference_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_reference_m_temp";
			 }
			 else
			 {
					tableName="com_reference_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_reference_m_edit";
			 }
			
		}
	vo.setTableToInsert(tableName);
	vo.setStatusCase(statusCase);
	String insertInTempFlag="";
	String cusType="";
	boolean status =false;
	request.setAttribute("corporate", "corporate");
	boolean firstNameCheck=detail.getFirstNameStatus(vo); 
	logger.info("firstNameCheck: "+firstNameCheck);
	if(!firstNameCheck)
	{
		if(!statusCase.equals("") )
		{
			if(session.getAttribute("cusType")!=null)
			{
				cusType=session.getAttribute("cusType").toString();
			}
			String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			logger.info("Query  :  "+query1);
			String custCheckInTemp = ConnectionDAO.singleReturn(query1);
			logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
			if(custCheckInTemp==null)
			{
				
				insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
				 logger.info("status: "+insertInTempFlag);
				if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
				{
					logger.info("Save Only Customer Reference: ");
					status = detail.saveCustomerReference(vo);
					
				}
				session.setAttribute("updateInMaker", "updateInMaker");
				request.setAttribute("procval",insertInTempFlag );
			}
			else
				status = detail.saveCustomerReference(vo);
			
		}
		else
		{
			logger.info("ELSE Save Only Customer Reference: ");
			status = detail.saveCustomerReference(vo);
		}
		 
		 if(status)
		 {
			 session.removeAttribute("briefAddr");
			 if(session.getAttribute("statusCase")!=null)
				{
					statusCase = session.getAttribute("statusCase").toString();
				}
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			
			 if(session.getAttribute("pParentGroup")!=null)
				{
					session.removeAttribute("pParentGroup");
				}
				if(session.getAttribute("strParentOption")!=null)
				{
					session.removeAttribute("strParentOption");
				}
				 String cuaStatus="";
				  if(session.getAttribute("CUA")!=null)
					 {
					  cuaStatus = session.getAttribute("CUA").toString();
					 }
			ArrayList<Object> briefAddr = detail.getRefrenceDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("sms","S");
			 request.setAttribute("status", "");
		 }
		 else
		 {
			 request.setAttribute("sms","E");
			 request.setAttribute("status", ""); 
		 }
	}
	else
	{
		 String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
	      ArrayList<Object> briefAddr = detail.getRefrenceDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
	     session.setAttribute("briefAddr", briefAddr);
		 request.setAttribute("dublicateName", "dublicateName");
	  }
	
	request.setAttribute("corporate", "corporate");
	 logger.info("save_corporate_reference status: "+status);
	 return mapping.findForward("successRef");
	 
}	

public ActionForward update_corporate_Reference(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		logger.info("In update_Reference in update_Reference");

	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
	 	String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		} else{
			logger.info("here in method of update_Reference CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 int id=0;
	 int refId=0;
	 int status=0;
	 String recStatus="";
	 String statusCase="";
	 String updateFlag="";
	 String pageStatuss="";
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+detail.getClass());
	 if(request.getParameter("refId")!=null)
	 {
		 refId=Integer.parseInt(request.getParameter("refId"));
	 }
	 
	 if(session.getAttribute("recStatus")!=null)
	 {
	    	recStatus=session.getAttribute("recStatus").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	 {
		 updateFlag=session.getAttribute("updateFlag").toString();
		 
	 }
	 if(session.getAttribute("statusCase")!=null)
	    {
	    	statusCase=session.getAttribute("statusCase").toString();
	    		
	    }
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
	    {
	    	updateInMaker=session.getAttribute("updateInMaker").toString();
	    }

	 if(session.getAttribute("corporateId")!=null && !session.getAttribute("corporateId").equals(""))
	 {
		 id = Integer.parseInt(session.getAttribute("corporateId").toString());
			CustomerSaveVo vo = new CustomerSaveVo();
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
			
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			 	String cusType="";
			
				if(session.getAttribute("cusType")!=null)
				{
					cusType=session.getAttribute("cusType").toString();
					logger.info("Customer type is ....getApproval................"+cusType);
				}
				String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
				String custCheckInTemp = ConnectionDAO.singleReturn(query);
				
				String insertInTempFlag="";
										
				if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
				{
					 insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
					 request.setAttribute("procval",insertInTempFlag );
					 logger.info("status: "+insertInTempFlag);
					 status = detail.updateIndReference(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					 if(status>0)
					 {
						 session.removeAttribute("detailcountryList");
						 session.removeAttribute("detailcityList");
						 session.removeAttribute("detailregionList");
						 session.removeAttribute("individualInfo");
						 session.removeAttribute("addressInfo");
						 request.setAttribute("sms","U");
						 session.setAttribute("updateInMaker", "updateInMaker");
				
					 }
				}
				else
				{
					status = detail.updateIndReference(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					if(status>0)
					{
						request.setAttribute("sms","U");
					}
				}
		
		}			
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				  
				 }
				 ArrayList<Object> list=new ArrayList<Object>(); 
				  list=detail.getRelationDeatil();
				  
			 ArrayList<Object> briefAddr = detail.getRefrenceDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("relationType",list);
			 logger.info("update_Reference status: "+status);
			 
			 return mapping.findForward("successRef");

	}
//Ritu Code Start 
public ActionForward save_individual_profile(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
	
	 logger.info("In save_individual_profile in save_individual_address");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here save_individual_profile method of CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		if(funid==3000296)
		{
			request.setAttribute("profileMode", "EDITPROFILEUNDERWRITER");
		}
		//neeraj space end
	 String id="";
	 String pageStatuss="";
	 String updateFlag="";
	 String statusCase="";
	 if(session.getAttribute("idividualId")!=null)
	 {
		 id = session.getAttribute("idividualId").toString();
	 }
	
	
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	    {
	    	updateFlag=session.getAttribute("updateFlag").toString();
	    		
	    }
	 if(session.getAttribute("statusCase")!=null)
		{
			statusCase = session.getAttribute("statusCase").toString();
		}
	 String dealId = "";
		
		if(session.getAttribute("dealId")!=null)
		{
			
			dealId=session.getAttribute("dealId").toString();
		}
		else if(session.getAttribute("maxId")!=null)
		{
			dealId=session.getAttribute("maxId").toString();
		}
		//added by Virender
		logger.info("Virender");
		ArrayList alDeleteQuery = new ArrayList(1);
		String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
		logger.info("hunterQry "+ hunterQry);
		alDeleteQuery.add(hunterQry);
		boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
		hunterQry = null;
		//Virender changes end
	 
	CustomerSaveVo vo = new CustomerSaveVo();
	org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
	vo.setPageStatus(pageStatuss);
	vo.setUpdateFlag(updateFlag);
	vo.setMakerId(userId);
	vo.setMakerDate(bDate);
	CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	logger.info("Implementation class: "+detail.getClass());
	 String tableName="";
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
		{
		 updateInMaker = session.getAttribute("updateInMaker").toString();
		}
	 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_address_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			 tableName="cr_deal_address_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_address_m_temp";
			 }
			 else
			 {
					tableName="com_address_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_address_m_edit";
			 }
			
		}
	 
//	 String query="Select COMMUNICATION_ADDRESS from "+tableName+" where BPID="+vo.getBp_id1();
//	 logger.info("query   :   "+query);
//	 commAddressCheck=ConnectionDAO.singleReturn(query);
//	 if(commAddressCheck!=null)
//		{
//			 if(commAddressCheck.equals("Y"))
//			 {
//				 request.setAttribute("commAddressCheck", "Communcation Address is Already Exist!!!");
//				 request.setAttribute("comm", "commAddExist");
//				 vo.setCommunicationAddress("N");
//			 }
//			 else
//			 {
//				request.setAttribute("comm","");
//				 vo.setCommunicationAddress("Y");
//			 }
//		}
//		else
//		{
//			if(vo.getCommunicationAddress().equals("on"))
//			{
//				vo.setCommunicationAddress("Y");
//			}
//			else
//			{
//				vo.setCommunicationAddress("N");
//			}
//			
//		}
//	
	vo.setStatusCase(statusCase);
	String insertInTempFlag="";
	String cusType="";
	 boolean status =false;
	 
	if(!statusCase.equals("") )
	{
		if(session.getAttribute("cusType")!=null)
		{
			cusType=session.getAttribute("cusType").toString();
		}
		String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
		logger.info("Query  :  "+query1);
		String custCheckInTemp = ConnectionDAO.singleReturn(query1);
		logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
		if(custCheckInTemp==null)
		{
			insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
			 session.setAttribute("updateInMaker", "updateInMaker");
			 logger.info("status: "+insertInTempFlag);
			 if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
			 {
				 logger.info("Save Only Customer Profile: ");
				 status = detail.saveCustomerProfile(vo,id,source);
			 }
			 request.setAttribute("procval",insertInTempFlag );
			// logger.info("procval-1111111111------->"+request.getAttribute("procval"));
		}
		else
			 status = detail.saveCustomerProfile(vo,id,source);
	
	}
	else
	{
		 logger.info("ELSE Save Only Customer Address: ");
		status = detail.saveCustomerProfile(vo,id,source);
	}
	 
	 if(status)
	 {
		 
//		 String custStatus="";
//	    	custStatus=detail.checkCustomerStatus(Integer.parseInt(id),cusType);
//	        session.setAttribute("custStatus", custStatus);
		 session.removeAttribute("briefAddr");
		 if(session.getAttribute("statusCase")!=null)
			{
				statusCase = session.getAttribute("statusCase").toString();
			}
		 if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
		
		 if(session.getAttribute("pParentGroup")!=null)
			{
				session.removeAttribute("pParentGroup");
			}
			if(session.getAttribute("strParentOption")!=null)
			{
				session.removeAttribute("strParentOption");
			}
			String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }	
		 ArrayList<Object> briefAddr = detail.getProfileDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		 session.setAttribute("briefAddr", briefAddr);
		 request.setAttribute("sms","I");
		 request.setAttribute("status", "");
	 }
	 else
	 {
		 request.setAttribute("sms","E");
		 request.setAttribute("status", ""); 
	 }
	 logger.info(" save_individual_address status: "+status);
	 logger.info("procval--save_individual_address------>");
	 return mapping.findForward("successProfile");
}

public ActionForward save_corporate_profile(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
	
	 logger.info("In save_corporate_profile in save_individual_address");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here save_corporate_profile method of CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		if(funid==3000296)
		{
			request.setAttribute("profileMode", "EDITPROFILEUNDERWRITER");
		}
		//neeraj space end
		
	 String id="";
	 String pageStatuss="";
	 String updateFlag="";
	 String statusCase="";
	 if(session.getAttribute("corporateId")!=null)
	 {
		 id = session.getAttribute("corporateId").toString();
	 }
	
	
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	    {
	    	updateFlag=session.getAttribute("updateFlag").toString();
	    		
	    }
	 if(session.getAttribute("statusCase")!=null)
		{
			statusCase = session.getAttribute("statusCase").toString();
		}
	 String dealId = "";
		
		if(session.getAttribute("dealId")!=null)
		{
			
			dealId=session.getAttribute("dealId").toString();
		}
		else if(session.getAttribute("maxId")!=null)
		{
			dealId=session.getAttribute("maxId").toString();
		}
		//added by Virender
		logger.info("Virender");
		ArrayList alDeleteQuery = new ArrayList(1);
		String hunterQry="delete from cr_hunter_marking_dtl where deal_id='"+dealId+"'";
		logger.info("hunterQry "+ hunterQry);
		alDeleteQuery.add(hunterQry);
		boolean status1 = ConnectionDAO.sqlInsUpdDelete(alDeleteQuery);
		hunterQry = null;
		//Virender changes end
	 
	CustomerSaveVo vo = new CustomerSaveVo();
	org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
	vo.setPageStatus(pageStatuss);
	vo.setUpdateFlag(updateFlag);
	vo.setMakerId(userId);
	vo.setMakerDate(bDate);
	CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	logger.info("Implementation class: "+detail.getClass());
	 String tableName="";
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
		{
		 updateInMaker = session.getAttribute("updateInMaker").toString();
		}
	 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_address_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			 tableName="cr_deal_address_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_address_m_temp";
			 }
			 else
			 {
					tableName="com_address_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_address_m_edit";
			 }
			
		}
	 
//	 String query="Select COMMUNICATION_ADDRESS from "+tableName+" where BPID="+vo.getBp_id1();
//	 logger.info("query   :   "+query);
//	 commAddressCheck=ConnectionDAO.singleReturn(query);
//	 if(commAddressCheck!=null)
//		{
//			 if(commAddressCheck.equals("Y"))
//			 {
//				 request.setAttribute("commAddressCheck", "Communcation Address is Already Exist!!!");
//				 request.setAttribute("comm", "commAddExist");
//				 vo.setCommunicationAddress("N");
//			 }
//			 else
//			 {
//				request.setAttribute("comm","");
//				 vo.setCommunicationAddress("Y");
//			 }
//		}
//		else
//		{
//			if(vo.getCommunicationAddress().equals("on"))
//			{
//				vo.setCommunicationAddress("Y");
//			}
//			else
//			{
//				vo.setCommunicationAddress("N");
//			}
//			
//		}
//	
	vo.setStatusCase(statusCase);
	String insertInTempFlag="";
	String cusType="";
	 boolean status =false;
	 
	if(!statusCase.equals("") )
	{
		if(session.getAttribute("cusType")!=null)
		{
			cusType=session.getAttribute("cusType").toString();
		}
		String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
		logger.info("Query  :  "+query1);
		String custCheckInTemp = ConnectionDAO.singleReturn(query1);
		logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
		if(custCheckInTemp==null)
		{
			insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
			 session.setAttribute("updateInMaker", "updateInMaker");
			 logger.info("status: "+insertInTempFlag);
			 if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
			 {
				 logger.info("Save Only Customer Profile: ");
				 status = detail.saveCustomerProfile(vo,id,source);
			 }
			 request.setAttribute("procval",insertInTempFlag );
			// logger.info("procval-1111111111------->"+request.getAttribute("procval"));
		}
		else
			 status = detail.saveCustomerProfile(vo,id,source);
	
	}
	else
	{
		 logger.info("ELSE Save Only Customer Address: ");
		status = detail.saveCustomerProfile(vo,id,source);
	}
	 
	 if(status)
	 {
		 
//		 String custStatus="";
//	    	custStatus=detail.checkCustomerStatus(Integer.parseInt(id),cusType);
//	        session.setAttribute("custStatus", custStatus);
		 session.removeAttribute("briefAddr");
		 if(session.getAttribute("statusCase")!=null)
			{
				statusCase = session.getAttribute("statusCase").toString();
			}
		 if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
		
		 if(session.getAttribute("pParentGroup")!=null)
			{
				session.removeAttribute("pParentGroup");
			}
			if(session.getAttribute("strParentOption")!=null)
			{
				session.removeAttribute("strParentOption");
			}
			String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }	
		 ArrayList<Object> briefAddr = detail.getProfileDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		 session.setAttribute("briefAddr", briefAddr);
		 request.setAttribute("sms","S");
		 request.setAttribute("status", "");
	 }
	 else
	 {
		 request.setAttribute("sms","E");
		 request.setAttribute("status", ""); 
	 }
	 logger.info(" save_individual_address status: "+status);
	 logger.info("procval--save_individual_address------>");
	 return mapping.findForward("successProfile");
}
//Rohit Changes  Starts for Sarva Suraksha
public ActionForward update_SarvaSuraksha(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		logger.info("In update_SarvaSuraksha in update_Reference");

	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
	 	String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		} else{
			logger.info("here in method of update_SarvaSuraksha CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 int id=0;
	 int refId=0;
	 int status=0;
	 String recStatus="";
	 String statusCase="";
	 String updateFlag="";
	 String pageStatuss="";
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+detail.getClass());
	 if(request.getParameter("refId")!=null)
	 {
		 refId=Integer.parseInt(request.getParameter("refId"));
	 }
	 
	 if(session.getAttribute("recStatus")!=null)
	 {
	    	recStatus=session.getAttribute("recStatus").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	 {
		 updateFlag=session.getAttribute("updateFlag").toString();
		 
	 }
	 if(session.getAttribute("statusCase")!=null)
	    {
	    	statusCase=session.getAttribute("statusCase").toString();
	    		
	    }
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
	    {
	    	updateInMaker=session.getAttribute("updateInMaker").toString();
	    }

	 if(session.getAttribute("idividualId")!=null && !session.getAttribute("idividualId").equals(""))
	 {
		 id = Integer.parseInt(session.getAttribute("idividualId").toString());
			CustomerSaveVo vo = new CustomerSaveVo();
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
			
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			 	String cusType="";
			
				if(session.getAttribute("cusType")!=null)
				{
					cusType=session.getAttribute("cusType").toString();
					logger.info("Customer type is ....getApproval................"+cusType);
				}
				String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
				String custCheckInTemp = ConnectionDAO.singleReturn(query);
				
				String insertInTempFlag="";
										
				if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
				{
					 insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
					 request.setAttribute("procval",insertInTempFlag );
					 logger.info("status: "+insertInTempFlag);
					 status = detail.updateSarvaSuraksha(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					 if(status>0)
					 {
						 session.removeAttribute("detailcountryList");
						 session.removeAttribute("detailcityList");
						 session.removeAttribute("detailregionList");
						 session.removeAttribute("individualInfo");
						 session.removeAttribute("addressInfo");
						 request.setAttribute("sms","CI");
						 session.setAttribute("updateInMaker", "updateInMaker");
				
					 }
				}
				else
				{
					status = detail.updateSarvaSuraksha(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					if(status>0)
					{
						request.setAttribute("sms","CI");
					}
				}
		
		}			
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
				 ArrayList<Object> list=new ArrayList<Object>(); 
				  list=detail.getRelationDeatil();
				  
			 ArrayList<Object> briefAddr = detail.getRefrenceDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("relationType",list);
			 
			 logger.info("update_Reference status: "+status);
			 
			 return mapping.findForward("successSarv");

	}


public ActionForward save_Sarva_Suraksha(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
	
	 logger.info("In CustomerAddressAction in save_Sarva_Suraksha");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here save_Sarva_Suraksha method of CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 String id="";
	 String pageStatuss="";
	 String updateFlag="";
	 String statusCase="";
	 if(session.getAttribute("idividualId")!=null)
	 {
		 id = session.getAttribute("idividualId").toString();
	 }
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	    {
	    	updateFlag=session.getAttribute("updateFlag").toString();
	    		
	    }
	 if(session.getAttribute("statusCase")!=null)
		{
			statusCase = session.getAttribute("statusCase").toString();
		}
	CustomerSaveVo vo = new CustomerSaveVo();
	org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
	vo.setPageStatus(pageStatuss);
	vo.setUpdateFlag(updateFlag);
	vo.setMakerId(userId);
	vo.setMakerDate(bDate);
	vo.setSource(source);
	CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	logger.info("Implementation class: "+detail.getClass());
	String tableName="";
	String updateInMaker="";
	
	 if(session.getAttribute("updateInMaker")!=null)
		{
		 updateInMaker = session.getAttribute("updateInMaker").toString();
		}
	 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_sarva_Suraksha_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			 tableName="cr_deal_sarva_Suraksha_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_sarva_Suraksha_m_temp";
			 }
			 else
			 {
					tableName="com_sarva_Suraksha_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_sarva_Suraksha_m_edit";
			 }
			
		}
	vo.setTableToInsert(tableName);
	vo.setStatusCase(statusCase);
	String insertInTempFlag="";
	String cusType="";
	boolean status =false;
	boolean firstNameCheck=detail.getFirstNameStatus(vo); 
	logger.info("firstNameCheck: "+firstNameCheck);
	if(!firstNameCheck)
	{
		if(!statusCase.equals("") )
		{
			if(session.getAttribute("cusType")!=null)
			{
				cusType=session.getAttribute("cusType").toString();
			}
			String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			logger.info("Query  :  "+query1);
			String custCheckInTemp = ConnectionDAO.singleReturn(query1);
			logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
			if(custCheckInTemp==null)
			{
				
				insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
				 logger.info("status: "+insertInTempFlag);
				if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
				{
					logger.info("Save Only Customer Reference: ");
					status = detail.savesavaSuraksha(vo);
					
				}
				session.setAttribute("updateInMaker", "updateInMaker");
				request.setAttribute("procval",insertInTempFlag );
			}
			else
				status = detail.savesavaSuraksha(vo);
			
		}
		else
		{
			logger.info("ELSE Save Only Customer Reference: ");
			status = detail.savesavaSuraksha(vo);
		}
		if(status)
		 {
			 session.removeAttribute("briefAddr");
			 if(session.getAttribute("statusCase")!=null)
				{
					statusCase = session.getAttribute("statusCase").toString();
				}
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			
			 if(session.getAttribute("pParentGroup")!=null)
				{
					session.removeAttribute("pParentGroup");
				}
				if(session.getAttribute("strParentOption")!=null)
				{
					session.removeAttribute("strParentOption");
				}
				String cuaStatus="";
				  if(session.getAttribute("CUA")!=null)
					 {
					  cuaStatus = session.getAttribute("CUA").toString();
					 }
			 ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("sms","I");
			 request.setAttribute("status", "");
		 }
		 else
		 {
			 request.setAttribute("sms","E");
			 request.setAttribute("status", ""); 
		 }
		
	}else
	{
		  String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
		 logger.info("dublicateName: "+vo.getFirstName());
		 ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
		
		session.setAttribute("briefAddr", briefAddr);
		request.setAttribute("dublicateName", "dublicateName");
	}
	 
	 logger.info("save_Sarva_Suraksha status: "+status);
	 return mapping.findForward("successSarv");
	 
}	
public ActionForward save_corporate_SravaSuraksha(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
	logger.info("RITU......");
	 logger.info("In save_corporate_reference in save_individual_reference");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here save_corporate_SravaSuraksha method of CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 String id="";
	 String pageStatuss="";
	 String updateFlag="";
	 String statusCase="";
	 if(session.getAttribute("corporateId")!=null)
	 {
		 id = session.getAttribute("corporateId").toString();
	 }
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	    {
	    	updateFlag=session.getAttribute("updateFlag").toString();
	    		
	    }
	 if(session.getAttribute("statusCase")!=null)
		{
			statusCase = session.getAttribute("statusCase").toString();
		}
	CustomerSaveVo vo = new CustomerSaveVo();
	org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
	vo.setSource(source);
	vo.setPageStatus(pageStatuss);
	vo.setUpdateFlag(updateFlag);
	vo.setMakerId(userId);
	vo.setMakerDate(bDate);			
	CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	logger.info("Implementation class: "+detail.getClass());
	String tableName="";
	String updateInMaker="";
	logger.info("getBpId.....ritu"+vo.getBpId());
	 if(session.getAttribute("updateInMaker")!=null)
		{
		 updateInMaker = session.getAttribute("updateInMaker").toString();
		}
	 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_sarva_Suraksha_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			 tableName="cr_deal_sarva_Suraksha_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_sarva_Suraksha_m_temp";
			 }
			 else
			 {
					tableName="com_sarva_Suraksha_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_sarva_Suraksha_m_edit";
			 }
			
		}
	vo.setTableToInsert(tableName);
	vo.setStatusCase(statusCase);
	String insertInTempFlag="";
	String cusType="";
	boolean status =false;
	request.setAttribute("corporate", "corporate");
	boolean firstNameCheck=detail.getFirstNameStatus(vo); 
	logger.info("firstNameCheck: "+firstNameCheck);
	if(!firstNameCheck)
	{
		if(!statusCase.equals("") )
		{
			if(session.getAttribute("cusType")!=null)
			{
				cusType=session.getAttribute("cusType").toString();
			}
			String query1 = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			logger.info("Query  :  "+query1);
			String custCheckInTemp = ConnectionDAO.singleReturn(query1);
			logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
			if(custCheckInTemp==null)
			{
				
				insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
				 logger.info("status: "+insertInTempFlag);
				if(CommonFunction.checkNull(insertInTempFlag).equalsIgnoreCase("S"))
				{
					logger.info("Save Only Customer Reference: ");
					status = detail.savesavaSuraksha(vo);
					
				}
				session.setAttribute("updateInMaker", "updateInMaker");
				request.setAttribute("procval",insertInTempFlag );
			}
			else
				status = detail.savesavaSuraksha(vo);
			
		}
		else
		{
			logger.info("ELSE Save Only Customer Reference: ");
			status = detail.savesavaSuraksha(vo);
		}
		 
		 if(status)
		 {
			 session.removeAttribute("briefAddr");
			 if(session.getAttribute("statusCase")!=null)
				{
					statusCase = session.getAttribute("statusCase").toString();
				}
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			
			 if(session.getAttribute("pParentGroup")!=null)
				{
					session.removeAttribute("pParentGroup");
				}
				if(session.getAttribute("strParentOption")!=null)
				{
					session.removeAttribute("strParentOption");
				}
				 String cuaStatus="";
				  if(session.getAttribute("CUA")!=null)
					 {
					  cuaStatus = session.getAttribute("CUA").toString();
					 }
			ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("sms","S");
			 request.setAttribute("status", "");
		 }
		 else
		 {
			 request.setAttribute("sms","E");
			 request.setAttribute("status", ""); 
		 }
	}
	else
	{
		 String cuaStatus="";
		  if(session.getAttribute("CUA")!=null)
			 {
			  cuaStatus = session.getAttribute("CUA").toString();
			 }
	      ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
	     session.setAttribute("briefAddr", briefAddr);
		 request.setAttribute("dublicateName", "dublicateName");
	  }
	
	request.setAttribute("corporate", "corporate");
	 logger.info("save_corporate_SravaSuraksha status: "+status);
	 return mapping.findForward("successSarv");
	 
}	

public ActionForward update_corporate_SarvaSuraksha(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		logger.info("In update_corporate_SarvaSuraksha in update_Reference");

	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
	 	String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		} else{
			logger.info("here in method of update_corporate_SarvaSuraksha CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 int id=0;
	 int refId=0;
	 int status=0;
	 String recStatus="";
	 String statusCase="";
	 String updateFlag="";
	 String pageStatuss="";
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+detail.getClass());
	 if(request.getParameter("refId")!=null)
	 {
		 refId=Integer.parseInt(request.getParameter("refId"));
	 }
	 
	 if(session.getAttribute("recStatus")!=null)
	 {
	    	recStatus=session.getAttribute("recStatus").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	 {
		 updateFlag=session.getAttribute("updateFlag").toString();
		 
	 }
	 if(session.getAttribute("statusCase")!=null)
	    {
	    	statusCase=session.getAttribute("statusCase").toString();
	    		
	    }
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
	    {
	    	updateInMaker=session.getAttribute("updateInMaker").toString();
	    }

	 if(session.getAttribute("corporateId")!=null && !session.getAttribute("corporateId").equals(""))
	 {
		 id = Integer.parseInt(session.getAttribute("corporateId").toString());
			CustomerSaveVo vo = new CustomerSaveVo();
			org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
			
			vo.setMakerId(userId);
			vo.setMakerDate(bDate);
			 	String cusType="";
			
				if(session.getAttribute("cusType")!=null)
				{
					cusType=session.getAttribute("cusType").toString();
					logger.info("Customer type is ....getApproval................"+cusType);
				}
				String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
				String custCheckInTemp = ConnectionDAO.singleReturn(query);
				
				String insertInTempFlag="";
										
				if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
				{
					 insertInTempFlag = detail.insertAllIntoTempFromMainTable(id+"",cusType);
					 request.setAttribute("procval",insertInTempFlag );
					 logger.info("status: "+insertInTempFlag);
					 status = detail.updateSarvaSuraksha(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					 if(status>0)
					 {
						 session.removeAttribute("detailcountryList");
						 session.removeAttribute("detailcityList");
						 session.removeAttribute("detailregionList");
						 session.removeAttribute("individualInfo");
						 session.removeAttribute("addressInfo");
						 request.setAttribute("sms","U");
						 session.setAttribute("updateInMaker", "updateInMaker");
				
					 }
				}
				else
				{
					status = detail.updateSarvaSuraksha(vo,id,refId, recStatus,statusCase,updateFlag,pageStatuss,source);
					if(status>0)
					{
						request.setAttribute("sms","U");
					}
				}
		
		}			
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 
			 if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				  
				 }
				 ArrayList<Object> list=new ArrayList<Object>(); 
				  list=detail.getRelationDeatil();
				  
			 ArrayList<Object> briefAddr = detail.getSarvSurkshaDetails(id+"",statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("briefAddr", briefAddr);
			 request.setAttribute("relationType",list);
			 logger.info("update_Reference status: "+status);
			 
			 return mapping.findForward("successSarv");

	}
//Rohit Changes  Starts for Sarva Suraksha
//Rohit changes starts for releation
public ActionForward openRelationShipTab(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		logger.info("In openRelationShipTab in update_Reference");

	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		
	 	String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		} else{
			logger.info("here in method of openRelationShipTab CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 int id=0;
	 String addId="";
	 String customerId="";
	 String recStatus="";
	 String statusCase="";
	 String updateFlag="";
	 String pageStatuss="";
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 
	 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+detail.getClass());
	 if(request.getParameter("addId")!=null)
	 {
		 addId=request.getParameter("addId").toString();
	 }
	 if(request.getParameter("customerId")!=null)
	 {
		 customerId=request.getParameter("customerId").toString();
	 }
	 if(session.getAttribute("recStatus")!=null)
	 {
	    	recStatus=session.getAttribute("recStatus").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	 {
		 updateFlag=session.getAttribute("updateFlag").toString();
		 
	 }
	 if(session.getAttribute("statusCase")!=null)
	    {
	    	statusCase=session.getAttribute("statusCase").toString();
	    		
	    }
	 String updateInMaker="";
	 if(session.getAttribute("updateInMaker")!=null)
	    {
	    	updateInMaker=session.getAttribute("updateInMaker").toString();
	    }
	
	 if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 String cuaStatus="";
	 String tableName="";
	  if(session.getAttribute("CUA")!=null)
		 {
		  cuaStatus = session.getAttribute("CUA").toString();
		  
		 }
	  if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_address_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			tableName="cr_deal_address_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_address_m_temp";
			 }
			 else
			 {
					tableName="com_address_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_address_m_edit";
			 }
			
		}
		 ArrayList<Object> list=new ArrayList<Object>(); 
		  list=detail.getRelationShipFlagIndividual();
		  session.setAttribute("relationTypeIndividual",list);
	
		 ArrayList<Object> corplist=new ArrayList<Object>(); 
		 corplist=detail.getRelationShipFlagCorporate();
		  session.setAttribute("relationTypeCorporate",corplist);
		  	 request.setAttribute("addressId", addId);	 
		  	 String quer="SELECT CUSTOMER_TYPE from gcd_customer_m where customer_id='"+customerId+"' ";
		  	 String customerType=ConnectionDAO.singleReturn(quer);
		  	session.setAttribute("baseCustomerType", customerType);
			 ArrayList<Object> briefAddr = detail.getCustomerDetails(addId,customerId,tableName);
			 session.setAttribute("briefAddrReation", briefAddr);
			 
			 return mapping.findForward("successRelation");

	}
public ActionForward saveRelationDetails(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) throws Exception {
	
	 logger.info("In saveRelationDetails in CustomerAddressAction");
	    HttpSession session = request.getSession();
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		String userId="";
		String bDate="";
		if(userobj!=null)
		{
				userId=userobj.getUserId();
				bDate=userobj.getBusinessdate();
		}else{
			logger.info("here saveRelationDetails method of CustomerAddressAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		DynaValidatorForm CustomerAddressValidatorForm= (DynaValidatorForm)form;
		Object sessionId = session.getAttribute("sessionID");
		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		//code added by neeraj
		String source="NE";
		String functionId=(String)session.getAttribute("functionId");
		int funid=Integer.parseInt(functionId);		
		if(funid==4000122 || funid==4000123)
			source="ED";
		//neeraj space end
	 String id="";
	
	CustomerSaveVo vo = new CustomerSaveVo();
	org.apache.commons.beanutils.BeanUtils.copyProperties(vo, CustomerAddressValidatorForm);
	vo.setSource(source);
	vo.setMakerId(userId);
	vo.setMakerDate(bDate);			
	CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
	logger.info("Implementation class: "+detail.getClass());
	String addId="";
	String customerId="";
	String tableName="";
	String pageStatuss="";
    String updateFlag="";
    String statusCase="";
    String updateInMaker="";
	if(session.getAttribute("updateInMaker")!=null)
	{
		updateInMaker = session.getAttribute("updateInMaker").toString();
	}
    if(session.getAttribute("pageStatuss")!=null)
	 {
		 pageStatuss = session.getAttribute("pageStatuss").toString();
	 }
	 if(session.getAttribute("updateFlag")!=null)
	    {
	    	updateFlag=session.getAttribute("updateFlag").toString();
	    		
	    }
	 
	 if(session.getAttribute("statusCase")!=null)
		{
			statusCase = session.getAttribute("statusCase").toString();
		}
	 if(updateInMaker!=null && !updateInMaker.equals("") && statusCase!=null && !statusCase.equals(""))
		{
			tableName="com_address_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.length()>0))
		 {
			tableName="cr_deal_address_m";
		 }
		 else
		{
			 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="com_address_m_temp";
			 }
			 else
			 {
					tableName="com_address_m";
					if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
						tableName="com_address_m_edit";
			 }
			
		}
	 if(request.getParameter("addressId")!=null)
	 {
		 addId=request.getParameter("addressId").toString();
	 }
	 if(request.getParameter("customerId")!=null)
	 {
		 customerId=request.getParameter("customerId").toString();
	 }
	 String relationship = CommonFunction.checkNull(request.getParameter("relationship"));
	 String relationAddressId = CommonFunction.checkNull(request.getParameter("relationAddressId"));
	 String relationCustomerId = CommonFunction.checkNull(request.getParameter("relationCustomerId"));
	
	boolean status = detail.saveRelationShipDetails(addId,customerId,relationship,relationAddressId, relationCustomerId,tableName);
	
	String updateQuery="update "+tableName+" set RELATIONSHIP_FLAG='Y' where address_id='"+addId+"'";
	logger.info("Relation updation in address:"+updateQuery);
	ArrayList updatelist=new ArrayList();
	updatelist.add(updateQuery);
	boolean st1=ConnectionDAO.sqlInsUpdDelete(updatelist);
	 logger.info("Relation updation in address :"+updateQuery);
	 logger.info("Status Relation updation in address :"+st1);
	
		if(status)
		{
			request.setAttribute("sms","S");
		}else{
			request.setAttribute("sms","E");
		}
	 ArrayList<Object> list=new ArrayList<Object>(); 
	  list=detail.getRelationShipFlagIndividual();
	  session.setAttribute("relationTypeIndividual",list);

	 ArrayList<Object> corplist=new ArrayList<Object>(); 
	 corplist=detail.getRelationShipFlagCorporate();
	  session.setAttribute("relationTypeCorporate",corplist);
	  request.setAttribute("addressId", addId);	 
	  String quer="SELECT CUSTOMER_TYPE from gcd_customer_m where customer_id='"+customerId+"' ";
	  	 String customerType=ConnectionDAO.singleReturn(quer);
	  	session.setAttribute("baseCustomerType", customerType);
		 ArrayList<Object> briefAddr = detail.getCustomerDetails(addId,customerId,tableName);
		 session.setAttribute("briefAddrReation", briefAddr);
		 
		 return mapping.findForward("successRelation");
	 
}
}