/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;

import java.util.ArrayList;
import java.util.ResourceBundle;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;
import com.VO.StakeHolderVo;
import com.connect.CommonFunction;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.gcd.dao.CorporateDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 02-11-2011
 * 
 * XDoclet definition:
 * @struts.action input="/JSP/gcdJSP/corporateStackHolder.jsp" scope="request" validate="true"
 */
public class CorporatStackHolderPageAction extends DispatchAction{
	
	  ResourceBundle resource = ResourceBundle.getBundle("com.yourcompany.struts.ApplicationResources");
		
		String dateFormatWithTime=resource.getString("lbl.dateWithTimeInDao");
		String dateFormat=resource.getString("lbl.dateInDao");
		String dbType=resource.getString("lbl.dbType");
		String dbo=resource.getString("lbl.dbPrefix");
		
	private static final Logger logger = Logger.getLogger(CorporatStackHolderPageAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward saveStakeDetails(ActionMapping mapping, ActionForm form,
		   HttpServletRequest request, HttpServletResponse response)throws Exception {
		   logger.info("saveStakeDetails.......");
		
		   
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}else{
				logger.info("here saveStakeDetails method of CorporatStackHolderPageAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			
			DynaValidatorForm stackHolderDynaValidatorForm = (DynaValidatorForm)form; 
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		   StakeHolderVo sh = new StakeHolderVo();	      
		   int id=0;
		   String pageStatuss="";
		   String updateFlag="";
		   String dealId = "";
			
			if(session.getAttribute("dealId")!=null)
			{
				
				dealId=session.getAttribute("dealId").toString();
			}
			else if(session.getAttribute("maxId")!=null)
			{
				dealId=session.getAttribute("maxId").toString();
			}
		   if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			
			if(session.getAttribute("updateFlag")!=null)
		    {
		    	updateFlag=session.getAttribute("updateFlag").toString();
		    }
		    sh.setDealId(dealId);
		    sh.setPageStat(pageStatuss);
		    sh.setUpdateFlag(updateFlag);
		    sh.setMakerId(userId);
		    sh.setMakerDate(bDate);
		   if(session.getAttribute("corporateId")!=null)
		   {
			   id = Integer.parseInt(session.getAttribute("corporateId").toString());
		   }
		  
	       org.apache.commons.beanutils.BeanUtils.copyProperties(sh, stackHolderDynaValidatorForm);
		 
	       String statusCase="";
	       String updateInMaker="";
	       String dinNoCheck=null;
	       String IdNoCheck=null;
	     //  String panNoCheck=null;
	       String tableName="";
	       String customerTable="";
	       if((pageStatuss!=null && pageStatuss.equals("fromLeads"))||(updateFlag!=null && updateFlag.length()>0))
			 {
				 tableName="cr_deal_customer_stakeholder_m";
				 customerTable="cr_deal_customer_m";
			 }
		    else
			{
				tableName="customer_stakeholder_m";
				customerTable="gcd_customer_m";
				if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
				{
					tableName="customer_stakeholder_m_edit";
					customerTable="gcd_customer_m_edit";
				}
			}
	       dinNoCheck = ConnectionDAO.singleReturn("Select distinct STAKEHOLDER_NAME from "+tableName+" where STAKEHOLDER_DIN='"+sh.getDinNo()+"'");
	       IdNoCheck = ConnectionDAO.singleReturn("Select distinct STAKEHOLDER_NAME from "+tableName+" where STAKEHOLDER_IDENTIFICATION_NO='"+sh.getIdNo()+"'");
	    //   panNoCheck = ConnectionDAO.singleReturn("Select distinct STAKEHOLDER_NAME from "+tableName+" where STAKEHOLDER_PAN='"+sh.getMgmtPAN()+"'");
		   CorporateDAO service=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		   logger.info("Implementation class: "+service.getClass());
		   boolean status = false;
		   
		
       if(dinNoCheck != null &&  IdNoCheck != null) 
		{	
    	   request.setAttribute("sms","both");
        	 
		}
     /*  else if(panNoCheck != null)
       {	
    	   logger.info("Pan no should be unique....");
  		 	request.setAttribute("sms","panNo");	
       }*/
       else if((dinNoCheck != null) &&  (IdNoCheck == null)){	

    		 request.setAttribute("sms","dinno");
    	        	
    			}
         else if((dinNoCheck == null) &&  (IdNoCheck != null))
         {	

        	 request.setAttribute("sms","idno");
        	
		}
 
         else if(dinNoCheck == null && IdNoCheck == null)
         {
    		 if(session.getAttribute("statusCase")!=null)
    			{
    				statusCase = session.getAttribute("statusCase").toString();
    			}
    		
    		sh.setStatusCase(statusCase);
    		String insertInTempFlag="";
    		String cusType="";
    		 
    		if(!statusCase.equals("") )
    		{
    			if(session.getAttribute("corporateId")!=null)
    			 {
    			    id = Integer.parseInt(session.getAttribute("corporateId").toString());
    			    
    			 }  
    			if(session.getAttribute("cusType")!=null)
    			{
    				cusType=session.getAttribute("cusType").toString();
    				logger.info("Customer type is ....getApproval................"+cusType);
    			}
    			String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
    			String custCheckInTemp = ConnectionDAO.singleReturn(query);
    			logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
    			/*StringBuilder customerIdQuery=new StringBuilder();
    			customerIdQuery.append("select  ");
    			if(dbType.equalsIgnoreCase("MSSQL"))
				{
    				customerIdQuery.append(" TOP 1 ");
				}
    			customerIdQuery.append(" CUSTOMER_ID from "+customerTable+" where ");
    			customerIdQuery.append(dbo);
    			customerIdQuery.append("STR_TO_DATE('"+sh.getDoj()+"',dateFormat) >= (select CUSTOMER_DOB from "+customerTable+" where CUSTOMER_ID="+id+") ");
    			if(!dbType.equalsIgnoreCase("MSSQL") && dbo.equalsIgnoreCase(""))
				{
    				customerIdQuery.append(" limit 1 ");
				}
    			//query = "select CUSTOMER_ID from "+customerTable+" where STR_TO_DATE('"+sh.getDoj()+"','%d-%m-%Y') >= (select CUSTOMER_DOB from "+customerTable+" where CUSTOMER_ID="+id+") limit 1";
    			logger.info("customerIdQuery***************************** "+customerIdQuery.toString());
    			String dojCheck = ConnectionDAO.singleReturn(customerIdQuery.toString());
    			logger.info("dojCheck********************************* "+dojCheck);*/
    			//if(dojCheck!=null)
    			//{
    			if(custCheckInTemp==null)
    			{
    				 insertInTempFlag = service.insertAllIntoTempFromMainTable(id+"",cusType);
    				 session.setAttribute("updateInMaker", "updateInMaker");
    				 request.setAttribute("procval",insertInTempFlag );
    			}
    			    			
    			status = service.saveStakeHolder(sh,id,source);
    			//}
    			//else
    			//{
    				//request.setAttribute("sms", "Doj");
    				//return mapping.getInputForward();
    			//}
    		}
    		else
    		{
    			logger.info("only insert ****************************.....statusCase.........."+statusCase);
//    			String query = "select CUSTOMER_ID from "+customerTable+" where STR_TO_DATE('"+sh.getDoj()+"','%d-%m-%Y') >= (select CUSTOMER_DOB from "+customerTable+" where CUSTOMER_ID="+id+") limit 1";
//    			String dojCheck = ConnectionDAO.singleReturn(query);
//    			logger.info("dojCheck********************************* "+dojCheck);
    			//if(dojCheck!=null)
    		//	{
    			 status = service.saveStakeHolder(sh,id,source);
    			//}
    			//else
    			//{
    				//request.setAttribute("sms", "Doj");
    			//	return mapping.getInputForward();
    			//}
    		}
        	 
    		 request.setAttribute("sms", "S");
	   
       logger.info("status *********************************************"+status);
				if(status)
				{				
//					String custStatus="";
//			    	custStatus=service.checkCustomerStatus(id,cusType);
//			        session.setAttribute("custStatus", custStatus);
					if(session.getAttribute("updateInMaker")!=null)
					{
						updateInMaker = session.getAttribute("updateInMaker").toString();
					}
					
					session.removeAttribute("briefStake");
					 String cuaStatus="";
					  if(session.getAttribute("CUA")!=null)
						 {
						  cuaStatus = session.getAttribute("CUA").toString();
						 }
					ArrayList<Object> briefStake=service.getStakeDetailsAll(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
					session.setAttribute("briefStake", briefStake);
					session.removeAttribute("stakeDetails");
					 
				 }
				 else
					 {
			
						request.setAttribute("sms","E");
					
					 }
         }
		return mapping.getInputForward();
	}
	
	public ActionForward updateStakeDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}else{
				logger.info("here updateStakeDetails method of CorporatStackHolderPageAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		session.removeAttribute("stakeDetails");
		session.removeAttribute("briefStake");
		DynaValidatorForm StackHolderDynaValidatorForm = (DynaValidatorForm)form; 
		StakeHolderVo sh = new StakeHolderVo();
		String recStatus="";
		String updateFlag="";
		int stackId=0;
		String statusCase="";
		String pageStatuss="";

		sh.setMakerId(userId);
		sh.setMakerDate(bDate);
		   if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
		 
		   sh.setPageStat(pageStatuss);
		 if(request.getParameter("currStackHolerId")!=null)
		   {
			  stackId =Integer.parseInt(request.getParameter("currStackHolerId"));
		   }
		
		if(session.getAttribute("recStatus")!=null)
	    {
	    	recStatus=session.getAttribute("recStatus").toString();
	    }
		int id = Integer.parseInt(session.getAttribute("corporateId").toString());
			
		org.apache.commons.beanutils.BeanUtils.copyProperties(sh, StackHolderDynaValidatorForm);
		if(sh.getDinNo().trim().equalsIgnoreCase(""))
		{
			sh.setDinNo(null);
		}
		if(sh.getIdNo().trim().equalsIgnoreCase(""))
		{
			sh.setIdNo(null);
		}
		CorporateDAO service=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		logger.info("Implementation class: "+service.getClass());
		if(session.getAttribute("statusCase")!=null)
	    {
	    	statusCase=session.getAttribute("statusCase").toString();
	    }
		if(session.getAttribute("updateFlag")!=null)
		{
			updateFlag = session.getAttribute("updateFlag").toString();
		}
		
		String cusType="";
		
		if(session.getAttribute("cusType")!=null)
		{
			cusType=session.getAttribute("cusType").toString();
		}
		
		
		String updateInMaker="";
		if(session.getAttribute("updateInMaker")!=null)
		{
			updateInMaker = session.getAttribute("updateInMaker").toString();
		}
		int dinNo=0;
	    int IdNo=0;
	    int panNo=0;
	    String tableName="";
	    String dinNoCheck =null;
	    String IdNoCheck=null;
	    String panNoCheck=null;
	    String customerTable="";
		if((updateInMaker!=null && !updateInMaker.equals("")) && (statusCase!=null && !statusCase.equals("")))
		{
			tableName="customer_stakeholder_m_temp";
			customerTable="gcd_customer_m_temp";
		}
		else if((pageStatuss!=null && pageStatuss.equals("fromLeads"))  || (updateFlag!=null && updateFlag.equals("updateFlag")))
		 {
			 tableName="cr_deal_customer_stakeholder_m";
			 customerTable="cr_deal_customer_m";
//			 session.setAttribute("updateInDeal", "updateInDeal");
		 }
	    else 
		{
	    	 if(statusCase!=null && statusCase.equals("UnApproved"))
			 {
				 tableName="customer_stakeholder_m_temp";
				 customerTable="gcd_customer_m_temp";
			 }
			 else
			 {
				 tableName="customer_stakeholder_m";
				 customerTable="gcd_customer_m";
				 if(CommonFunction.checkNull(source).trim().equalsIgnoreCase("ED"))
				 {
					 tableName="customer_stakeholder_m_edit";
					 customerTable="gcd_customer_m_edit";
				 }
			 }
		}
		if(sh.getDinNo()!="")
	    {
			dinNoCheck = ConnectionDAO.singleReturn("Select count(t.STAKEHOLDER_NAME) from (Select * from "+tableName+" where STAKEHOLDER_DIN='"+sh.getDinNo()+"') t where t.CUSTOMER_ID<>"+id+"");
	    	
	    }
	    else
	    {
	    	dinNoCheck="";
	    }
		if(sh.getIdNo()!="")
	    {
			IdNoCheck = ConnectionDAO.singleReturn("Select count(t.STAKEHOLDER_NAME) from (Select * from "+tableName+" where STAKEHOLDER_IDENTIFICATION_NO='"+sh.getIdNo()+"') t where t.CUSTOMER_ID<>"+id+"");
	    	
	    }
	    else
	    {
	    	IdNoCheck="";
	    }
		if(sh.getMgmtPAN()!="")
	    {
			panNoCheck = ConnectionDAO.singleReturn("Select count(t.STAKEHOLDER_NAME) from (Select * from "+tableName+" where STAKEHOLDER_PAN='"+sh.getMgmtPAN()+"') t where t.CUSTOMER_ID<>"+id+"");
	    	
	    }
	    else
	    {
	    	panNoCheck="";
	    }
		
		if(dinNoCheck.equals("0") || dinNoCheck.equals(""))
	    {
			dinNo=0;
	    }
	    else
	    {
	    	dinNo=Integer.parseInt(dinNoCheck);
	    }

		if(IdNoCheck.equals("0") || IdNoCheck.equals(""))
	    {
			IdNo=0;
	    }
	    else
	    {
	    	IdNo=Integer.parseInt(dinNoCheck);
	    }
		if(panNoCheck.equals("0") || panNoCheck.equals(""))
	    {
			panNo=0;
	    }
	    else
	    {
	    	panNo=Integer.parseInt(panNoCheck);
	    }
	    logger.info("dinNo :"+dinNo);
	    logger.info("IdNo :"+IdNo);
	    logger.info("panNo :"+panNo);
	 
	    if(dinNo<1 && IdNo<1 && panNo<1)
	    {
	    	String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			String custCheckInTemp = ConnectionDAO.singleReturn(query);
			String insertInTempFlag="";
		
			/*query = "select CUSTOMER_ID from "+customerTable+" where STR_TO_DATE('"+sh.getDoj()+"','%d-%m-%Y') >= (select CUSTOMER_DOB from "+customerTable+" where CUSTOMER_ID="+id+") limit 1";
			String dojCheck = ConnectionDAO.singleReturn(query);
			logger.info("dojCheck********************************* "+dojCheck);*/
			//if(dojCheck!=null)
			//{
		
			if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
			{
				insertInTempFlag = service.insertAllIntoTempFromMainTable(id+"",cusType);
				int status = service.updateStakeHolder(sh,id,stackId,recStatus,statusCase,updateFlag,pageStatuss,source);
				 request.setAttribute("procval",insertInTempFlag );
				 if(status>0)
					{
						request.setAttribute("sms", "U");
					}	else{
						request.setAttribute("sms","E");
					}
				//request.setAttribute("sms", "U");
				session.setAttribute("updateInMaker", "updateInMaker");
			}
			else
			{
				int status = service.updateStakeHolder(sh,id,stackId,recStatus,statusCase,updateFlag,pageStatuss,source);
				if(status>0)
				{
					request.setAttribute("sms", "U");
				}	else{
					request.setAttribute("sms","E");
				}
			}
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
			//}
			//else
			//{
				ArrayList<Object> briefStake=service.getStakeDetailsAll(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
				session.setAttribute("briefStake", briefStake);
				//request.setAttribute("sms", "Doj");
				//return mapping.getInputForward();
			//}
//			String custStatus="";
//	    	custStatus=service.checkCustomerStatus(id,cusType);
//	        session.setAttribute("custStatus", custStatus);
	    }
	    else
	    {
	    	if(dinNo>=1 && IdNo>=1)
	    	{
	    		request.setAttribute("sms","both");
	    	}
	    	else if(dinNo>=1 && IdNo<1)
	    	{
	    		request.setAttribute("sms","dinno");
	    	}
	    	else if(dinNo<1 && IdNo>=1)
	    	{
	    		request.setAttribute("sms","idno");
	    	}
	    	else if(panNo>=1)
	    	{
	    		request.setAttribute("sms","panNo");
	    	}
	    }
			if(session.getAttribute("pageStatuss")!=null)
			{
				pageStatuss = session.getAttribute("pageStatuss").toString();
			}
			if(session.getAttribute("updateInMaker")!=null)
			{
				updateInMaker = session.getAttribute("updateInMaker").toString();
			}
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
			ArrayList<Object> briefStake=service.getStakeDetailsAll(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			session.setAttribute("briefStake", briefStake);
			 logger.info("procval--222222222222222222------>"+request.getAttribute("procval"));
		return mapping.getInputForward();

	}
	
	public ActionForward fetchStackHolder(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		 logger.info("In CorporatStackHolderPageAction ...fetchStackHolder()................");
		
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null){
				logger.info("here fetchStackHolder method of CorporateStackHolderPageAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		 String statusCase="";
		 String updateFlag="";
		 CorporateDAO detail =(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+detail.getClass());
		 String stackHolderId = request.getParameter("chk");
		 Object pageStatus = session.getAttribute("approve");
		 if(session.getAttribute("statusCase")!=null)
		 {
				statusCase = session.getAttribute("statusCase").toString();
		 }	
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 updateFlag = (String)session.getAttribute("updateFlag"); 
		 }
		 String updateInMaker="";
		 String query = "Select customer_id from gcd_customer_m_temp where customer_id= (select CUSTOMER_ID from customer_stakeholder_m where STAKEHOLDER_ID="+stackHolderId+")";
			logger.info("query in fetchCustomerAddress .................................."+query);
			String checkFlag = ConnectionDAO.singleReturn(query);
			if(session.getAttribute("updateInMaker")!=null)
			 {
				 updateInMaker = session.getAttribute("updateInMaker").toString();
			 }
			 String pageStatuss="";
			  if(session.getAttribute("pageStatuss")!=null)
				 {
					 pageStatuss = session.getAttribute("pageStatuss").toString();
				 }
			  String gcdReq = (String)session.getAttribute("gcdReq");
			  String pageStatuss1=pageStatuss;
			  String updateFlag1 =updateFlag;
			  Object pageStatus1=pageStatus;
			  String updateInMaker1=updateInMaker;
			  String statusCase1=statusCase;
			  if(gcdReq!=null)
			  {
				  pageStatuss=null;
				  updateFlag=null;
				  pageStatus=null;
				  updateInMaker=null;
				  statusCase=null;
			  }
			  String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }
		 ArrayList<StakeHolderVo> getStackHolderList = detail.getStackHolderDetail(stackHolderId,pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,cuaStatus,source);
		 pageStatuss=pageStatuss1;
		 updateFlag=  updateFlag1;
		 pageStatus=pageStatus1;
		 updateInMaker=updateInMaker1;
		 statusCase=statusCase1;
		 StakeHolderVo vo=getStackHolderList.get(0);
		 String percentage=vo.getPercentage();		  
		 String curPer=vo.getHoldingPerc();
		 if(CommonFunction.checkNull(percentage).trim().equalsIgnoreCase(""))
			 percentage="0.00";
		 logger.info("Percentage "+percentage);
		 //percentage=percentage.substring(0,percentage.indexOf('.'));
		 if(CommonFunction.checkNull(curPer).trim().equalsIgnoreCase(""))
			 curPer="0.00";
		 logger.info("Current Percentage "+curPer);
		 //curPer=curPer.substring(0,curPer.indexOf('.'));
		 logger.info("Total Percentage "+percentage);
		 logger.info("Current Percentage "+curPer);
		 percentage=(Double.parseDouble(percentage)-Double.parseDouble(curPer))+"";
		 session.setAttribute("percentage",percentage);
		 logger.info("Total effective Percentage "+percentage);
		 request.setAttribute("getStackHolderList", getStackHolderList);
		 logger.info("list is.................................... "+getStackHolderList);
		return mapping.getInputForward();
 
	}
	
}