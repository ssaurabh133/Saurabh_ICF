/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.gcd.actions;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;
import com.VO.CreditRatingVo;
import com.connect.ConnectionDAO;
import com.connect.DaoImplInstanceFactory;
import com.gcd.dao.CorporateDAO;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;

/** 
 * MyEclipse Struts
 * Creation date: 02-14-2011
 * 
 * XDoclet definition:
 * @struts.action input="/JSP/gcdJSP/corporateCradingRating.jsp" scope="request" validate="true"
 */
public class CreditRatingPageAction extends DispatchAction{
	private static final Logger logger = Logger.getLogger(CreditRatingPageAction.class.getName());
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward saveRatingDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
	
		
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}else{
				logger.info("here saveRatingDetails method of CreditRatingPageAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			CreditRatingVo cr =new CreditRatingVo();
			DynaValidatorForm CreditRatingPageDynaValidatorActionForm=(DynaValidatorForm)form;
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
			
		//String sms="";
		 String statusCase="";
		 String updateFlag="";
		 String updateInMaker="";
		  String pageStatuss="";
		  if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
			if(session.getAttribute("updateFlag")!=null)
			 {
				 updateFlag = session.getAttribute("updateFlag").toString();
			 }
			int id=0;
			if(session.getAttribute("corporateId")!=null)
			{
				id = Integer.parseInt(session.getAttribute("corporateId").toString());
			}
		 
		 org.apache.commons.beanutils.BeanUtils.copyProperties(cr, CreditRatingPageDynaValidatorActionForm);
		  cr.setPageStat(pageStatuss);
		  cr.setUpdateFlag(updateFlag);
		  cr.setMakerId(userId);
		  cr.setMakerDate(bDate);
		 CorporateDAO service=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+service.getClass());
		 if(session.getAttribute("statusCase")!=null)
			{
				statusCase = session.getAttribute("statusCase").toString();
			}
		
		 cr.setStatusCase(statusCase);
	
		 String insertInTempFlag="";
		String cusType="";
		 boolean status =false;
		 
		if(!statusCase.equals("") )
		{
			if(session.getAttribute("corporateId")!=null)
			 {
			    id = Integer.parseInt(session.getAttribute("corporateId").toString());
			    
			 }  
			if(session.getAttribute("cusType")!=null)
			{
				cusType=session.getAttribute("cusType").toString();
				logger.info("Customer type is ....getApproval................"+cusType);
			}
			String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			String custCheckInTemp = ConnectionDAO.singleReturn(query);
			logger.info("custCheckInTemp *?********************************** "+custCheckInTemp);
			if(custCheckInTemp==null)
			{
				insertInTempFlag = service.insertAllIntoTempFromMainTable(id+"",cusType);
				 session.setAttribute("updateInMaker", "updateInMaker");
				 request.setAttribute("procval",insertInTempFlag );
			}
			status = service.saveCreditRating(cr,id,source);
		}
		else
		{
			logger.info("only insert ****************************.....statusCase.........."+statusCase);
			
			status = service.saveCreditRating(cr,id,source);
		}
		
		
		 if(status)
		 {
//			 if(session.getAttribute("statusCase")!=null)
//			 {
//					statusCase = session.getAttribute("statusCase").toString();
//			 }
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }	
			 ArrayList<Object> creditRatingDetail = service.getcreditRatingDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("creditRatingDetail", creditRatingDetail);
			request.setAttribute("sms", "S");
		  }
		  else
		  {
				request.setAttribute("sms", "E");
		   }
		 logger.info("procval--222222222222222222------>"+request.getAttribute("procval"));
		return mapping.getInputForward();
	}
	
	public ActionForward updateRatingDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
	
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			String userId="";
			String bDate="";
			if(userobj!=null)
			{
					userId=userobj.getUserId();
					bDate=userobj.getBusinessdate();
			}else{
				logger.info("here updateRatingDetails method of CreditRatingPageAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			
			DynaValidatorForm CreditRatingPageDynaValidatorActionForm=(DynaValidatorForm)form;
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		CreditRatingVo cr =new CreditRatingVo();

         cr.setMakerId(userId);
         cr.setMakerDate(bDate);
		 int id =0;
		 int crId=0;
		 String recStatus="";
		 String statusCase="";
		 String updateFlag="";
		 String pageStatuss="";
		  if(session.getAttribute("pageStatuss")!=null)
			 {
				 pageStatuss = session.getAttribute("pageStatuss").toString();
			 }
		
		 if(session.getAttribute("corporateId")!=null)
		 {
			id = Integer.parseInt(session.getAttribute("corporateId").toString());
		 }
		 if(request.getParameter("ratingId")!=null)
		 {
			crId =Integer.parseInt(request.getParameter("ratingId"));
		 }
		
		 if(session.getAttribute("recStatus")!=null)
		 {
		   	recStatus=session.getAttribute("recStatus").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
		 if(session.getAttribute("statusCase")!=null)
		    {
		    	statusCase=session.getAttribute("statusCase").toString();
		    }
		 org.apache.commons.beanutils.BeanUtils.copyProperties(cr, CreditRatingPageDynaValidatorActionForm);
		 CorporateDAO service=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+service.getClass());
		 
		 
		    String cusType="";
			
			if(session.getAttribute("cusType")!=null)
			{
				cusType=session.getAttribute("cusType").toString();
			}
			String query = "Select customer_id from gcd_customer_m_temp where customer_id="+id;
			String custCheckInTemp = ConnectionDAO.singleReturn(query);
			String insertInTempFlag="";
			
			if(custCheckInTemp==null && session.getAttribute("statusCase")!=null && recStatus.equalsIgnoreCase("A"))
			{
				 insertInTempFlag = service.insertAllIntoTempFromMainTable(id+"",cusType);
		  		 int status = service.updateCreditRating(cr,id,crId,recStatus,statusCase,updateFlag,pageStatuss,source);
		  		 session.setAttribute("updateInMaker", "updateInMaker");
				 request.setAttribute("procval",insertInTempFlag );
		  		request.setAttribute("sms", "U");
			}
			else
			{
				int status = service.updateCreditRating(cr,id,crId,recStatus,statusCase,updateFlag,pageStatuss,source);
				if(status>0)
				 {
					request.setAttribute("sms", "U");
				 }
			}
			String updateInMaker="";
			 if(session.getAttribute("updateInMaker")!=null)
				{
					updateInMaker = session.getAttribute("updateInMaker").toString();
				}
			 String cuaStatus="";
			  if(session.getAttribute("CUA")!=null)
				 {
				  cuaStatus = session.getAttribute("CUA").toString();
				 }	
			 ArrayList<Object> creditRatingDetail = service.getcreditRatingDetails(id,statusCase,updateInMaker,pageStatuss,updateFlag,cuaStatus,source);
			 session.setAttribute("creditRatingDetail", creditRatingDetail);
				
		return mapping.getInputForward();
	}
	
	public ActionForward fetchCreditRating(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		
		    HttpSession session = request.getSession();
			UserObject userobj=(UserObject)session.getAttribute("userobject");
			if(userobj==null){
				logger.info("here fetchCreditRating method of CreditRatingPageAction action the session is out----------------");
				return mapping.findForward("sessionOut");
			}
			
			Object sessionId = session.getAttribute("sessionID");
			ServletContext context = getServlet().getServletContext();
			String strFlag="";	
			if(sessionId!=null)
			{
				strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
			}
			
			logger.info("strFlag .............. "+strFlag);
			if(!strFlag.equalsIgnoreCase(""))
			{
				if(strFlag.equalsIgnoreCase("sameUserSession"))
				{
					context.removeAttribute("msg");
					context.removeAttribute("msg1");
				}
				else if(strFlag.equalsIgnoreCase("BODCheck"))
				{
					context.setAttribute("msg", "B");
				}
				return mapping.findForward("logout");
			}
			//code added by neeraj
			String source="NE";
			String functionId=(String)session.getAttribute("functionId");
			int funid=Integer.parseInt(functionId);		
			if(funid==4000122 || funid==4000123)
				source="ED";
			//neeraj space end
		 String statusCase="";
		 String updateFlag="";
		 logger.info("In fetchCreditRating in modify CreditRating");
		 CorporateDAO detail=(CorporateDAO)DaoImplInstanceFactory.getDaoImplInstance(CorporateDAO.IDENTITY);
		 logger.info("Implementation class: "+detail.getClass());
		 String creditRatingId = request.getParameter("chk");
		 Object pageStatus = session.getAttribute("approve");
		 if(session.getAttribute("statusCase")!=null)
		 {
			statusCase = session.getAttribute("statusCase").toString();
		 }
		 if(session.getAttribute("updateFlag")!=null)
		 {
			 updateFlag = session.getAttribute("updateFlag").toString();
		 }
		 String updateInMaker="";
		 String query = "Select customer_id from gcd_customer_m_temp where customer_id= (select CUSTOMER_ID from customer_rating_m where CUSTOMER_RATING_ID="+creditRatingId+")";
			logger.info("query in fetchCustomerAddress .................................."+query);
			String checkFlag = ConnectionDAO.singleReturn(query);
			if(session.getAttribute("updateInMaker")!=null)
			 {
				 updateInMaker = session.getAttribute("updateInMaker").toString();
			 }
			String pageStatuss="";
			  if(session.getAttribute("pageStatuss")!=null)
				 {
					 pageStatuss = session.getAttribute("pageStatuss").toString();
				 }
			  String gcdReq = (String)session.getAttribute("gcdReq");
			  Object pageStatus1=pageStatus;
			  String updateFlag1 =updateFlag;
			  if(gcdReq!=null)
			  {
				  pageStatus=null;
				  updateFlag=null;
			  }
			 ArrayList<CreditRatingVo> creditRatingList = detail.getCreditRatingDetail(creditRatingId,pageStatus,statusCase,updateInMaker,updateFlag,pageStatuss,source);
		 pageStatus=pageStatus1;
		  updateFlag=updateFlag1;
		 request.setAttribute("creditRatingList", creditRatingList);
		
		return mapping.getInputForward();
 
	}
}