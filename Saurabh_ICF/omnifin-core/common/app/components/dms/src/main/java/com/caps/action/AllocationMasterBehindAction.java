/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.caps.action;

import java.util.ArrayList;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.validator.DynaValidatorForm;

import com.business.ejbClient.DebtManagementBussinessSessionBeanRemote;
import com.connect.CommonFunction;
import com.connect.LookUpInstanceFactory;
import com.login.dao.UserSessionCheck;
import com.login.roleManager.UserObject;
import com.masters.capsVO.AllocationMasterVo;


public class AllocationMasterBehindAction extends DispatchAction {
	private static final Logger logger = Logger.getLogger(AllocationMasterBehindAction.class.getName());
	
//	public ActionForward openAddqueueAllocation(ActionMapping mapping, ActionForm form,
//			HttpServletRequest request, HttpServletResponse response)	throws Exception {
//				HttpSession session = request.getSession();
//				logger.info(" in openAddqueueAllocation()");
//				
//				boolean flag=false;
//				UserObject userobj=(UserObject)session.getAttribute("userobject");
//				Object sessionId = session.getAttribute("sessionID");
//				//for check User session start
//				if(sessionId!=null)
//				{
//					flag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString());
//				}
//				
//				if(flag)
//				{
//					logger.info("logout in action");
//					return mapping.findForward("logout");
//				}
//				ArrayList<AllocationMasterVo> queuelist=new ArrayList<AllocationMasterVo>();
//				queuelist= collDAO.getQueueList();
//
//			    logger.info("In openAddqueueAllocation....list"+queuelist.size());
//				
//			    request.setAttribute("queuelist", queuelist);
//
//				request.setAttribute("save", "save");
//				if(session.getAttribute("strParentOption")!=null)
//				{
//					session.removeAttribute("strParentOption");
//				}
//				if(session.getAttribute("pParentGroup")!=null)
//				{
//					session.removeAttribute("pParentGroup");
//				}
//			    return mapping.findForward("addsuccess");	
//			}
	public ActionForward openSearchJsp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		logger.info("openSearchJsp");
		HttpSession session = request.getSession();
		boolean flag=false;
		UserObject userobj=(UserObject)session.getAttribute("userobject");
		if(userobj==null){
			logger.info("here openSearchJsp method of AllocationMasterBehindAction action the session is out----------------");
			return mapping.findForward("sessionOut");
		}
		Object sessionId = session.getAttribute("sessionID");

		ServletContext context = getServlet().getServletContext();
		String strFlag="";	
		if(sessionId!=null)
		{
			strFlag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString(),"",request);
		}
		
		logger.info("strFlag .............. "+strFlag);
		if(!strFlag.equalsIgnoreCase(""))
		{
			if(strFlag.equalsIgnoreCase("sameUserSession"))
			{
				context.removeAttribute("msg");
				context.removeAttribute("msg1");
			}
			else if(strFlag.equalsIgnoreCase("BODCheck"))
			{
				context.setAttribute("msg", "B");
			}
			return mapping.findForward("logout");
		}
		DynaValidatorForm AllocationAddDynaValidatorForm= (DynaValidatorForm)form;
		AllocationMasterVo allocationVo=new AllocationMasterVo();
		
		org.apache.commons.beanutils.BeanUtils.copyProperties(allocationVo, AllocationAddDynaValidatorForm);
		
		DebtManagementBussinessSessionBeanRemote dm = (DebtManagementBussinessSessionBeanRemote) LookUpInstanceFactory.getLookUpInstance(DebtManagementBussinessSessionBeanRemote.REMOTE_IDENTITY, request);
		
		ArrayList list=new ArrayList();
		
		 logger.info("current page link .......... "+request.getParameter("d-49520-p"));
			
			int currentPageLink = 0;
			if(request.getParameter("d-49520-p")==null || request.getParameter("d-49520-p").equalsIgnoreCase("0"))
			{
				currentPageLink=1;
			}
			else
			{
				currentPageLink =Integer.parseInt(request.getParameter("d-49520-p"));
			}
			
			//logger.info("current page link ................ "+request.getParameter("d-49520-p"));
			
			allocationVo.setCurrentPageLink(currentPageLink);
			list= dm.searchAllocationData(allocationVo);

		    logger.info("In AllocationMasterBehindAction....list"+list.size());
			
		    request.setAttribute("list", list);
			
			logger.info("list.isEmpty(): "+list.isEmpty());
			request.setAttribute("list",list);
			if(CommonFunction.checkNull(request.getAttribute("flag")).toString().equalsIgnoreCase("yes")){
				request.setAttribute("sms","No");
			}
			//request.setAttribute("default", "defaultList");
			return mapping.findForward("searchsuccess");
	}
	
	
//	public ActionForward updateAllocation(ActionMapping mapping, ActionForm form,
//			HttpServletRequest request, HttpServletResponse response)	throws Exception {
//	
//		logger.info("In updateAllocation");
//	    
//		HttpSession session = request.getSession();
//		boolean flag=false;
//		UserObject userobj=(UserObject)session.getAttribute("userobject");
//		Object sessionId = session.getAttribute("sessionID");
//		//for check User session start
//		if(sessionId!=null)
//		{
//			flag = UserSessionCheck.checkSameUserSession(userobj,sessionId.toString());
//		}
//		
//		if(flag)
//		{
//			logger.info("logout in action");
//			return mapping.findForward("logout");
//		}
//		
//
//		String userId=request.getParameter("userId");
//		
//		ArrayList<AllocationMasterVo> queueAllocationEdit = collDAO.searchQueueAllocationEdit(userId);
//		ArrayList<AllocationMasterVo> queueEdit = collDAO.searchQueueEdit(userId);
//		request.setAttribute("status", queueAllocationEdit.get(0).getQueueStatus());
//	
//		request.setAttribute("list", queueAllocationEdit);
//		request.setAttribute("queueList", queueEdit);
//		request.setAttribute("userID",userId );
//		request.setAttribute("editMode", "editMode");
//		
//	   return mapping.findForward("addsuccess");	
//	}	
	
}